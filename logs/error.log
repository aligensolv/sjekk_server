[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-08 01:25:10"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 01:25:10"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 01:52:41"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 02:50:06"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 03:04:01"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 03:05:31"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 18:40:08"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 18:41:37"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 18:42:01"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 19:09:45"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 19:12:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 19:39:46"}
[31merror[39m: (intermediate value).sort is not a function {"timestamp":"2023-12-08 19:40:04"}
[31merror[39m: (intermediate value).sort is not a function {"timestamp":"2023-12-08 19:40:32"}
[31merror[39m: (intermediate value).sort is not a function {"timestamp":"2023-12-08 19:40:35"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:08:57"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:17:53"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:19:59"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:21:25"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:25:45"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:25:50"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:26:02"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:30:38"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:31:32"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:41:04"}
[31merror[39m: Could not find car {"timestamp":"2023-12-08 20:41:24"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 00:37:46"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 00:52:49"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 00:52:49"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:02:42"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:02:58"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:18:38"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:19:34"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:21:48"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:35:14"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:40:06"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:41:14"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 01:46:57"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 02:48:48"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:09:12"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:13:04"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:14:28"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:26:54"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:27:47"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:39:40"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:40:52"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:42:49"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:43:34"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:44:38"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:47:39"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:49:06"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:50:35"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:55:03"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:55:40"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:56:00"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 03:57:01"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 04:01:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 04:05:58"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 04:11:37"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 04:12:40"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 04:20:27"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:14:35"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:15:36"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:16:19"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:16:41"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:18:45"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:19:27"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:37:28"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 05:48:47"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:23:39"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:25:17"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:39:30"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:39:30"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:43:10"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:43:10"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:43:36"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:43:36"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:46:15"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:46:15"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:50:04"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:50:04"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 06:50:15"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:50:15"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2023-12-09 06:50:20"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:50:20"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 06:50:43"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 15:44:51"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 16:21:54"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 16:24:02"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 17:09:34"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-09 17:09:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 17:10:03"}
[31merror[39m: Could not find car {"timestamp":"2023-12-09 17:10:32"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 02:37:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:00:26"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:02:25"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:04:27"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:15:30"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:18:43"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 03:20:53"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 14:47:30"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 15:09:30"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 15:35:45"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2023-12-10 15:54:25"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 15:54:36"}
[31merror[39m: Could not find car {"timestamp":"2023-12-10 16:45:43"}
[31merror[39m: Rule validation failed: policy_time: Path `policy_time` is required. {"timestamp":"2023-12-10 23:07:48"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 05:14:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 05:22:50"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-11 05:24:17"}
[31merror[39m: a is not defined {"timestamp":"2023-12-11 06:27:09"}
[31merror[39m: s is not defined {"timestamp":"2023-12-11 06:27:20"}
[31merror[39m: c is not defined {"timestamp":"2023-12-11 06:27:22"}
[31merror[39m: Cannot read properties of undefined (reading 'listeners') {"timestamp":"2023-12-11 06:30:23"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 16:08:52"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:36:06"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:38:45"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:39:06"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:45:24"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:47:34"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 18:54:57"}
[31merror[39m: Could not find car {"timestamp":"2023-12-11 19:05:34"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 07:04:04"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 07:04:48"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 07:12:04"}
[31merror[39m: Cannot populate path `registered_car_info/place` because it is not in your schema. Set the `strictPopulate` option to false to override. {"timestamp":"2023-12-12 16:40:56"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 16:48:56"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 16:49:26"}
[31merror[39m: No violation was found {"timestamp":"2023-12-12 16:50:15"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-14 12:40:58"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-14 13:18:13"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:18:37"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:18:37"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:19:08"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:19:08"}
[31merror[39m: Cannot read properties of undefined (reading '0') {"timestamp":"2023-12-14 13:19:16"}
[31merror[39m: Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr') {"timestamp":"2023-12-14 13:19:23"}
[31merror[39m: Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr') {"timestamp":"2023-12-14 13:21:33"}
[31merror[39m: Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr') {"timestamp":"2023-12-14 13:21:40"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:21:46"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:26:34"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:26:39"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:26:52"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:26:52"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:32:38"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:32:38"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:36:18"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:36:24"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:49:30"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:49:30"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:49:30"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 13:59:59"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 13:59:59"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 13:59:59"}
[31merror[39m: result.status is not a function {"timestamp":"2023-12-14 14:35:51"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-14 17:14:54"}
[31merror[39m: Could not find car {"timestamp":"2023-12-14 17:14:54"}
[31merror[39m: No violation was found {"timestamp":"2023-12-14 17:14:54"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 17:15:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 17:15:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 17:19:33"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 17:19:33"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 17:21:50"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 17:21:50"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 17:37:58"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 17:37:58"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 17:38:52"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 17:38:52"}
[31merror[39m: Violation validation failed: plate_info.color: Path `plate_info.color` is required., plate_info.type: Path `plate_info.type` is required., plate_info.description: Path `plate_info.description` is required., plate_info.year: Path `plate_info.year` is required., plate_info.plate: Path `plate_info.plate` is required., plate_info.brand: Path `plate_info.brand` is required. {"timestamp":"2023-12-14 17:44:16"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 18:06:42"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 18:06:42"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 18:35:29"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 18:35:29"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 18:35:52"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Violation" {"timestamp":"2023-12-14 18:35:52"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 22:08:57"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 22:56:56"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 23:15:37"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 23:18:31"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 23:19:59"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 23:22:36"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-14 23:38:10"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 01:47:43"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 02:06:39"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 02:10:11"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 02:11:28"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 04:51:25"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 05:32:31"}
[31merror[39m: Violation validation failed: rules.0: Cast to [ObjectId] failed for value "[\n' +
  '  {\n' +
  `    name: "2 - Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.",\n` +
  '    charge: 100,\n' +
  '    id: null,\n' +
  '    time_policy: 30\n' +
  '  }\n' +
  ']" (type string) at path "rules.0" because of "CastError" {"timestamp":"2023-12-15 08:27:19"}
[31merror[39m: Violation validation failed: rules.0.policy_time: Path `policy_time` is required. {"timestamp":"2023-12-15 08:29:31"}
[31merror[39m: Cast to [undefined] failed for value "[ new ObjectId('657bf3020ae1a6c090d27922') ]" (type string) at path "rules.0" because of "TypeError" {"timestamp":"2023-12-15 08:32:34"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 08:37:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 09:48:31"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 10:01:11"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 10:01:59"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 10:03:43"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 10:04:04"}
[31merror[39m: this.splitPath is not a function {"timestamp":"2023-12-15 10:12:36"}
[31merror[39m: Class constructor ObjectId cannot be invoked without 'new' {"timestamp":"2023-12-15 10:12:56"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 10:58:09"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 18:46:44"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 18:49:22"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 18:55:17"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-15 19:02:05"}
[31merror[39m: Could not find car {"timestamp":"2023-12-15 19:02:05"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:02:05"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:03:27"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:13:00"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:31:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 19:35:20"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:41:44"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 19:47:54"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 19:49:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 19:50:25"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 20:03:13"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 20:09:34"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 20:09:46"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:15:52"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:22:05"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:22:22"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:54:24"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:55:27"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:55:38"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 21:56:17"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:56:23"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:56:34"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:58:49"}
[31merror[39m: No violation was found {"timestamp":"2023-12-15 21:59:06"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 21:59:15"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 23:39:49"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 23:41:04"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 23:43:09"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-15 23:46:03"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:09:50"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:15:16"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:20:33"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:25:10"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:31:05"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:32:11"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:35:33"}
[31merror[39m: No violation was found {"timestamp":"2023-12-16 00:36:50"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 00:37:16"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 01:06:05"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 01:08:11"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 01:10:20"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 01:34:08"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 08:28:22"}
[31merror[39m: No violation was found {"timestamp":"2023-12-16 08:29:02"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 08:29:39"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 08:39:46"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 08:42:46"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 08:49:38"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:07:39"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:10:51"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:15:13"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:15:20"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:17:36"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:17:57"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:18:51"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:19:23"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:19:27"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:19:45"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:29:00"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 09:30:27"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 11:31:54"}
[31merror[39m: Violation validation failed: rules.0.policy_time: Path `policy_time` is required. {"timestamp":"2023-12-16 11:43:29"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 11:43:59"}
[31merror[39m: Violation validation failed: rules.0.policy_time: Path `policy_time` is required. {"timestamp":"2023-12-16 11:44:53"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 11:46:09"}
[31merror[39m: Violation validation failed: rules.0.policy_time: Path `policy_time` is required. {"timestamp":"2023-12-16 11:47:59"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 11:51:30"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 12:04:03"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 21:50:26"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 21:52:56"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 22:03:34"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 22:07:03"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 22:15:24"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-16 22:15:44"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 08:15:28"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 08:16:25"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 12:02:22"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 12:03:40"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 12:11:52"}
[31merror[39m: Cast to ObjectId failed for value "plate" (type string) at path "_id" for model "Car" {"timestamp":"2023-12-17 12:13:09"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2023-12-17 16:55:18"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2023-12-17 16:55:18"}
[31merror[39m: Could not find car {"timestamp":"2023-12-17 16:56:53"}
[31merror[39m: Violation validation failed: images: Cast to embedded failed for value "http://10.0.2.2:3000/public\\images\\cars\\2023-12-18_1702876793743_156868406.png" (type string) at path "images" because of "ObjectParameterError" {"timestamp":"2023-12-18 07:20:17"}
[31merror[39m: Cannot read properties of undefined (reading 'split') {"timestamp":"2023-12-18 07:28:38"}
[31merror[39m: Cannot read properties of undefined (reading 'split') {"timestamp":"2023-12-18 07:33:24"}
[31merror[39m: date is not defined {"timestamp":"2023-12-18 07:35:28"}
[31merror[39m: Autosys server error {"timestamp":"2023-12-18 07:43:20"}
[31merror[39m: Could not find car {"timestamp":"2023-12-18 07:43:20"}
[31merror[39m: pre_data.images is not iterable {"timestamp":"2023-12-18 07:43:46"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2023-12-18 07:45:36"}
[31merror[39m: ENOENT: no such file or directory, open '../app_templates/violation.html' {"timestamp":"2023-12-21 16:44:25"}
[31merror[39m: Client network socket disconnected before secure TLS connection was established {"timestamp":"2023-12-23 16:56:36"}
[31merror[39m: Parse error on line 26:
...                {{/#each}}           
----------------------^
Expecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID' {"timestamp":"2023-12-23 22:40:15"}
[31merror[39m: static_files_host is not defined {"timestamp":"2023-12-23 22:40:54"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\sjekk_kontroll\sjekk_server\http:\10.0.2.2:3000\public\reports\Fde1C9xAXL_232023.12.23 22:41.pdf' {"timestamp":"2023-12-23 22:41:22"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\public\reports\OwGH83Iwsq_232023.12.23 22:43.pdf' {"timestamp":"2023-12-23 22:43:21"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\sjekk_kontroll\public\reports\h8hq7CpjeM_232023.12.23 22:43.pdf' {"timestamp":"2023-12-23 22:43:43"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\read.ejs:70
    68|                                 </thead>
    69|                                 <tbody>
 >> 70|                                     <% users.forEach(user => { %>
    71|                                         <tr>
    72|                                             <td><%= user.name %></td>
    73|                                             <td><%= user.user_identifier %></td>

users is not defined {"timestamp":"2023-12-26 11:42:03"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\read.ejs:68
    66|                                 </thead>
    67|                                 <tbody>
 >> 68|                                     <% violations.forEach(violation => { %>
    69|                                         <tr>
    70|                                             <td><%= violation.name %></td>
    71|                                             <td class="controls">

violations is not defined {"timestamp":"2023-12-26 11:57:24"}
[31merror[39m: Unexpected token ')' in E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs while compiling ejs

If the above error is not helpful, you may want to try EJS-Lint:
https://github.com/RyanZim/EJS-Lint
Or, if you meant to create an async function, pass `async: true` as an option. {"timestamp":"2023-12-26 12:05:18"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:32
    30| 
    31|                         <h3 class="title">KID number</h3>
 >> 32|                         <div><%= kid_number %></div>
    33|                     </div>
    34|                 </div>
    35|             </div>

kid_number is not defined {"timestamp":"2023-12-26 13:08:50"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:32
    30| 
    31|                         <h3 class="title">KID number</h3>
 >> 32|                         <div><%= kid_number %></div>
    33|                     </div>
    34|                 </div>
    35|             </div>

kid_number is not defined {"timestamp":"2023-12-26 13:08:51"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:32
    30| 
    31|                         <h3 class="title">KID number</h3>
 >> 32|                         <div><%= kid_number %></div>
    33|                     </div>
    34|                 </div>
    35|             </div>

kid_number is not defined {"timestamp":"2023-12-26 13:08:51"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:32
    30| 
    31|                         <h3 class="title">KID number</h3>
 >> 32|                         <div><%= kid_number %></div>
    33|                     </div>
    34|                 </div>
    35|             </div>

kid_number is not defined {"timestamp":"2023-12-26 13:09:01"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:32
    30| 
    31|                         <h3 class="title">KID number</h3>
 >> 32|                         <div><%= kid_number %></div>
    33|                     </div>
    34|                 </div>
    35|             </div>

kid_number is not defined {"timestamp":"2023-12-26 13:09:05"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:58
    56|                                 <div class="info-block">
    57|                                     <h3 class="title">Fra</h3>
 >> 58|                                     <div><%= from_date %></div>
    59|                                 </div>
    60|                             </div>
    61|                             <div class="col-lg-6">

from_date is not defined {"timestamp":"2023-12-26 13:22:54"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:58
    56|                                 <div class="info-block">
    57|                                     <h3 class="title">Fra</h3>
 >> 58|                                     <div><%= from_date %></div>
    59|                                 </div>
    60|                             </div>
    61|                             <div class="col-lg-6">

from_date is not defined {"timestamp":"2023-12-26 13:22:54"}
[31merror[39m: E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs:58
    56|                                 <div class="info-block">
    57|                                     <h3 class="title">Fra</h3>
 >> 58|                                     <div><%= from_date %></div>
    59|                                 </div>
    60|                             </div>
    61|                             <div class="col-lg-6">

from_date is not defined {"timestamp":"2023-12-26 13:22:54"}
[31merror[39m: Unexpected token ')' in E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs while compiling ejs

If the above error is not helpful, you may want to try EJS-Lint:
https://github.com/RyanZim/EJS-Lint
Or, if you meant to create an async function, pass `async: true` as an option. {"timestamp":"2023-12-26 13:42:23"}
[31merror[39m: Unexpected token ')' in E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs while compiling ejs

If the above error is not helpful, you may want to try EJS-Lint:
https://github.com/RyanZim/EJS-Lint
Or, if you meant to create an async function, pass `async: true` as an option. {"timestamp":"2023-12-26 13:42:24"}
[31merror[39m: Unexpected token ')' in E:\workspace\sjekk_kontroll\sjekk_server\views\violations\view_violation.ejs while compiling ejs

If the above error is not helpful, you may want to try EJS-Lint:
https://github.com/RyanZim/EJS-Lint
Or, if you meant to create an async function, pass `async: true` as an option. {"timestamp":"2023-12-26 13:42:28"}
[31merror[39m: undefined {"timestamp":"2023-12-26 16:02:12"}
[31merror[39m: undefined {"timestamp":"2023-12-26 16:03:12"}
[31merror[39m: undefined {"timestamp":"2023-12-26 16:05:21"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\sjekk_kontroll\sjekk_server\public\images\temp_cars\1703595288803_117025211.png' {"timestamp":"2023-12-26 16:23:45"}
[31merror[39m: Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required. {"timestamp":"2023-12-26 16:24:36"}
[31merror[39m: Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required. {"timestamp":"2023-12-26 16:25:31"}
[31merror[39m: Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required., images.4.path: Path `path` is required. {"timestamp":"2023-12-26 16:26:36"}
[31merror[39m: Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required., images.4.path: Path `path` is required., images.5.path: Path `path` is required. {"timestamp":"2023-12-26 16:28:52"}
[31merror[39m: r.name.split(...)[1].join is not a function {"timestamp":"2023-12-26 21:35:54"}
[31merror[39m: r.name.split(...)[1].join is not a function {"timestamp":"2023-12-26 21:36:38"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2023-12-27 12:36:24"}
[31merror[39m: Could not find car {"timestamp":"2023-12-27 12:38:46"}
[31merror[39m: Could not find car {"timestamp":"2023-12-27 12:40:53"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-01-16 16:34:45"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-01-16 16:35:33"}
[31merror[39m: Cannot read properties of null (reading 'user_identifier') {"timestamp":"2024-01-17 10:19:56"}
[31merror[39m: Violation validation failed: rules.0._id: Cast to ObjectId failed for value "1" (type string) at path "_id" because of "BSONError" {"timestamp":"2024-01-17 10:35:09"}
[31merror[39m: Please provide identifier and password {"timestamp":"2024-01-18 11:14:25"}
[31merror[39m: Please provide identifier and password {"timestamp":"2024-01-18 11:14:59"}
[31merror[39m: Please provide identifier and password {"timestamp":"2024-01-18 11:15:03"}
[31merror[39m: Rule validation failed: extras.meter_receipt_number: Tried to set nested object field `extras.$*` to primitive value `123`, extras.meter_number: Tried to set nested object field `extras.$*` to primitive value `456`, extras.expiry_date: Tried to set nested object field `extras.$*` to primitive value `1705657483066`, extras.paid_date: Tried to set nested object field `extras.$*` to primitive value `123` {"timestamp":"2024-01-19 11:44:43"}
[31merror[39m: Rule validation failed: extras.meter_receipt_number: Tried to set nested object field `extras.$*` to primitive value `123`, extras.meter_number: Tried to set nested object field `extras.$*` to primitive value `456`, extras.expiry_date: Tried to set nested object field `extras.$*` to primitive value `1705657500145`, extras.paid_date: Tried to set nested object field `extras.$*` to primitive value `now` {"timestamp":"2024-01-19 11:45:00"}
[31merror[39m: Rule validation failed: extras.meter_receipt_number: Cast to Boolean failed for value "123" (type string) at path "extras.meter_receipt_number" because of "CastError", extras.meter_number: Cast to Boolean failed for value "456" (type string) at path "extras.meter_number" because of "CastError", extras.expiry_date: Cast to Boolean failed for value "1705659105494" (type string) at path "extras.expiry_date" because of "CastError", extras.paid_date: Cast to Boolean failed for value "now" (type string) at path "extras.paid_date" because of "CastError" {"timestamp":"2024-01-19 12:11:45"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-01-19 15:21:39"}
[31merror[39m: getaddrinfo EAI_AGAIN www.vegvesen.no {"timestamp":"2024-01-20 12:51:38"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 12:53:24"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:17:22"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:17:26"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:18:08"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:18:45"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:18:54"}
[31merror[39m: Cannot read properties of undefined (reading 'rules') {"timestamp":"2024-01-20 21:19:54"}
[31merror[39m: Cast to ObjectId failed for value "xc" (type string) at path "_id" for model "Place" {"timestamp":"2024-01-26 03:58:57"}
[31merror[39m: Cast to ObjectId failed for value "xc" (type string) at path "_id" for model "Place" {"timestamp":"2024-01-26 03:58:57"}
[31merror[39m: Rule validation failed: charge: Cast to Number failed for value "x" (type string) at path "charge", policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:26:51"}
[31merror[39m: Rule validation failed: charge: Cast to Number failed for value "x" (type string) at path "charge", policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:26:51"}
[31merror[39m: Rule validation failed: charge: Cast to Number failed for value "x" (type string) at path "charge", policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:27:22"}
[31merror[39m: Rule validation failed: charge: Cast to Number failed for value "x" (type string) at path "charge", policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:27:22"}
[31merror[39m: Rule validation failed: policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:28:06"}
[31merror[39m: Rule validation failed: policy_time: Cast to Number failed for value "x" (type string) at path "policy_time" {"timestamp":"2024-01-26 19:28:06"}
[31merror[39m: Autosys server error {"timestamp":"2024-01-27 01:22:12"}
[31merror[39m: Autosys server error {"timestamp":"2024-01-27 01:22:12"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-01-27 02:05:13"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-01-27 02:05:13"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 02:59:06"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 02:59:06"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 02:59:36"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 02:59:36"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:05"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:05"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:09"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:09"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:14"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:14"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:17"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:17"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:18"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:18"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-27 16:23:19"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:54"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:54"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:54"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:54"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:57"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:57"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:57"}
[31merror[39m: FORBIDDEN is not defined {"timestamp":"2024-01-28 05:10:57"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:39"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:39"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:41"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:41"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:43"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:43"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:49"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:11:49"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:04"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:12"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:28"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:28"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:54"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:54"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:57"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:12:57"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:30"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:30"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:35"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:35"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:38"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:38"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:49"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:49"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:54"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:13:54"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:00"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:00"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:14"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:14"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:28"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:14:28"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:03"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:03"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:22"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:25"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:35"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:15:42"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:17:14"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:17:32"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:17:39"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:20:35"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:21:55"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:22:19"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:23:52"}
[31merror[39m: Please provide api token {"timestamp":"2024-01-28 05:25:07"}
[31merror[39m: result is not defined {"timestamp":"2024-02-06 08:15:26"}
[31merror[39m: result is not defined {"timestamp":"2024-02-06 08:15:26"}
[31merror[39m: PlaceProfile validation failed: updated_at: Path `updated_at` is required., created_at: Path `created_at` is required. {"timestamp":"2024-02-06 08:16:57"}
[31merror[39m: PlaceProfile validation failed: updated_at: Path `updated_at` is required., created_at: Path `created_at` is required. {"timestamp":"2024-02-06 08:16:57"}
[31merror[39m: Cast to ObjectId failed for value ":client" (type string) at path "_id" for model "PlaceProfile" {"timestamp":"2024-02-06 10:49:04"}
[31merror[39m: Cast to ObjectId failed for value ":client" (type string) at path "_id" for model "PlaceProfile" {"timestamp":"2024-02-06 10:49:04"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 11:55:19"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 11:55:19"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 12:03:06"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 12:03:06"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 12:03:39"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-02-06 12:03:39"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-02-06 12:07:25"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-02-06 12:07:25"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-02-06 12:07:51"}
[31merror[39m: getaddrinfo ENOTFOUND www.vegvesen.no {"timestamp":"2024-02-06 12:07:51"}
[31merror[39m: Car validation failed: plate_number: Path `plate_number` is required., registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:17:32"}
[31merror[39m: Car validation failed: plate_number: Path `plate_number` is required., registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:17:32"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:18:50"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:18:50"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:19:28"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-07 14:19:28"}
[31merror[39m: car is not defined {"timestamp":"2024-02-07 21:47:55"}
[31merror[39m: car is not defined {"timestamp":"2024-02-07 21:47:55"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:27:00"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:27:00"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:27:04"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:27:04"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:28:56"}
[31merror[39m: Schema hasn't been registered for model "ParkingProvider".
Use mongoose.model(name, schema) {"timestamp":"2024-02-08 00:28:56"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:35:57"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:35:57"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:41:36"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:41:36"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:42:08"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-09 11:42:08"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-11 15:23:06"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-11 15:23:06"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 04:54:46"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 04:54:46"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:00:09"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:00:09"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:00:24"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:00:24"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:08:53"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:08:53"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:09:17"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:09:17"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:10:11"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 05:10:11"}
[31merror[39m: CarLogModel is not defined {"timestamp":"2024-02-15 05:14:39"}
[31merror[39m: CarLogModel is not defined {"timestamp":"2024-02-15 05:14:39"}
[31merror[39m: CarLog validation failed: registeration_data.gateway: Path `registeration_data.gateway` is required. {"timestamp":"2024-02-15 05:15:06"}
[31merror[39m: CarLog validation failed: registeration_data.gateway: Path `registeration_data.gateway` is required. {"timestamp":"2024-02-15 05:15:06"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:30:05"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:30:05"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:30:51"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:30:51"}
[31merror[39m: Access code not provided {"timestamp":"2024-02-15 05:31:20"}
[31merror[39m: Access code not provided {"timestamp":"2024-02-15 05:31:46"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:32:05"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:32:05"}
[31merror[39m: jwt is not defined {"timestamp":"2024-02-15 05:32:55"}
[31merror[39m: jwt is not defined {"timestamp":"2024-02-15 05:32:55"}
[31merror[39m: jwt_secret_key is not defined {"timestamp":"2024-02-15 05:33:23"}
[31merror[39m: jwt_secret_key is not defined {"timestamp":"2024-02-15 05:33:23"}
[31merror[39m: Cast to ObjectId failed for value "null" (type string) at path "_id" for model "PlaceProfile" {"timestamp":"2024-02-15 05:41:05"}
[31merror[39m: Cast to ObjectId failed for value "null" (type string) at path "_id" for model "PlaceProfile" {"timestamp":"2024-02-15 05:41:05"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:42:15"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:42:15"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:43:21"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 05:43:21"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-02-15 06:01:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-02-15 06:01:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-02-15 06:01:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-02-15 06:01:56"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 06:36:34"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-02-15 06:36:34"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 06:38:00"}
[31merror[39m: Car is already registered {"timestamp":"2024-02-15 06:38:00"}
[31merror[39m: logs is not iterable {"timestamp":"2024-02-15 07:19:38"}
[31merror[39m: logs is not iterable {"timestamp":"2024-02-15 07:19:38"}
[31merror[39m: data is not defined {"timestamp":"2024-02-15 07:19:58"}
[31merror[39m: data is not defined {"timestamp":"2024-02-15 07:19:58"}
[31merror[39m: data is not defined {"timestamp":"2024-02-15 07:20:14"}
[31merror[39m: data is not defined {"timestamp":"2024-02-15 07:20:14"}
[31merror[39m: fs is not defined {"timestamp":"2024-02-15 07:22:08"}
[31merror[39m: fs is not defined {"timestamp":"2024-02-15 07:22:08"}
[31merror[39m: Handlebars is not defined {"timestamp":"2024-02-15 07:22:26"}
[31merror[39m: Handlebars is not defined {"timestamp":"2024-02-15 07:22:26"}
[31merror[39m: compiledViolationTemplate is not defined {"timestamp":"2024-02-15 07:23:02"}
[31merror[39m: compiledViolationTemplate is not defined {"timestamp":"2024-02-15 07:23:02"}
[31merror[39m: path is not defined {"timestamp":"2024-02-15 07:23:16"}
[31merror[39m: path is not defined {"timestamp":"2024-02-15 07:23:16"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\projects\sjekk_kontroll\sjekk_server\public\car_log_reports\0.5778222907593731.png' {"timestamp":"2024-02-15 07:34:28"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\projects\sjekk_kontroll\sjekk_server\public\car_log_reports\0.5778222907593731.png' {"timestamp":"2024-02-15 07:34:28"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\projects\sjekk_kontroll\sjekk_server\public\car_log_reports\0.5790703834016164.png' {"timestamp":"2024-02-15 07:34:47"}
[31merror[39m: ENOENT: no such file or directory, open 'E:\workspace\projects\sjekk_kontroll\sjekk_server\public\car_log_reports\0.5790703834016164.png' {"timestamp":"2024-02-15 07:34:47"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-02-15 07:39:37"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-02-15 07:39:37"}
[31merror[39m: waitTillHTMLRendered is not defined {"timestamp":"2024-02-15 08:22:15"}
[31merror[39m: waitTillHTMLRendered is not defined {"timestamp":"2024-02-15 08:22:15"}
[31merror[39m: Cannot read properties of undefined (reading 'startsWith') {"timestamp":"2024-02-15 18:59:56"}
[31merror[39m: Cannot read properties of undefined (reading 'startsWith') {"timestamp":"2024-02-15 18:59:56"}
[31merror[39m: Cannot read properties of undefined (reading 'startsWith') {"timestamp":"2024-02-15 19:02:22"}
[31merror[39m: Cannot read properties of undefined (reading 'startsWith') {"timestamp":"2024-02-15 19:02:22"}
[31merror[39m: PartnerPlaceCreationRequest validation failed: place_creation_details.code: Path `place_creation_details.code` is required., place_creation_details.policy: Path `place_creation_details.policy` is required., place_creation_details.location: Path `place_creation_details.location` is required., requested_by: Path `requested_by` is required. {"timestamp":"2024-02-19 17:12:37"}
[31merror[39m: PartnerPlaceCreationRequest validation failed: place_creation_details.code: Path `place_creation_details.code` is required., place_creation_details.policy: Path `place_creation_details.policy` is required., place_creation_details.location: Path `place_creation_details.location` is required., requested_by: Path `requested_by` is required. {"timestamp":"2024-02-19 17:12:37"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-19 17:48:34"}
[31merror[39m: Car validation failed: registeration_source: Path `registeration_source` is required. {"timestamp":"2024-02-19 17:48:34"}
[31merror[39m: PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required. {"timestamp":"2024-02-21 11:23:36"}
[31merror[39m: PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required. {"timestamp":"2024-02-21 11:23:36"}
[31merror[39m: PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required. {"timestamp":"2024-02-21 11:24:34"}
[31merror[39m: PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required. {"timestamp":"2024-02-21 11:24:34"}
[31merror[39m: Request Not Found {"timestamp":"2024-02-21 13:03:10"}
[31merror[39m: Request Not Found {"timestamp":"2024-02-21 13:03:10"}
[31merror[39m: lib is not defined {"timestamp":"2024-05-25 14:35:34"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:17:22"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:17:22"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:17:23"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:17:23"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:59:17"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:59:17"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:59:53"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 15:59:53"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:02:13"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:02:13"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:02:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:02:59"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:01"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:01"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:03"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:03"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:11"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:11"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:52"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:03:52"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:04:24"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:04:24"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:15:41"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:15:41"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:24"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:24"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:34"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:16:34"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:31"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:31"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:41"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:41"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:51"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:17:51"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:01"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:01"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:11"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:11"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:21"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:21"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:30"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:30"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:18:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:02"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:02"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:05"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:05"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:08"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:08"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:12"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:12"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:15"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:15"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:26"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:26"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:36"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:36"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:46"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:46"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:19:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:04"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:04"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:09"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:09"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:12"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:12"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:14"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:20:59"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:21:09"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:21:09"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:22:32"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:22:32"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:23:22"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:23:22"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:23:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:23:25"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:32"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:32"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:40"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:40"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:43"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:25:43"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:26:32"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:26:32"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:07"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:07"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:49"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:49"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:59"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:27:59"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:28:22"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:28:22"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:28:24"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:28:24"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:22"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:22"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:24"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:24"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:43"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:43"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:46"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:29:46"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:31:43"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:31:43"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:33:49"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:33:49"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:33:59"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:33:59"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:34:51"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:34:51"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:38:32"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:38:32"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:40:11"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:40:11"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:44:13"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 16:44:13"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:11:41"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:11:41"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:25:48"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:25:48"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:25:58"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:25:58"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:10"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:10"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:14"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:14"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:15"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:15"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:20"}
[31merror[39m: Operation `users.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:20"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:24"}
[31merror[39m: Operation `cars.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 18:26:24"}
[31merror[39m: data is not defined {"timestamp":"2024-05-25 19:26:11"}
[31merror[39m: data is not defined {"timestamp":"2024-05-25 19:26:11"}
[31merror[39m: 
Invalid `prisma.user.create()` invocation:

{
  data: {
    name: "klage",
    pnid: "ali",
    password: "$2b$10$iUe.fdguLpBi.atioqwE7e7ijDUTP3AsQ755i2h3/YbDpCDGxE1IO",
    created_at: "2024-05-25",
+   updated_at: String
  }
}

Argument `updated_at` is missing. {"timestamp":"2024-05-25 19:26:27"}
[31merror[39m: 
Invalid `prisma.user.create()` invocation:

{
  data: {
    name: "klage",
    pnid: "ali",
    password: "$2b$10$iUe.fdguLpBi.atioqwE7e7ijDUTP3AsQ755i2h3/YbDpCDGxE1IO",
    created_at: "2024-05-25",
+   updated_at: String
  }
}

Argument `updated_at` is missing. {"timestamp":"2024-05-25 19:26:27"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:28:27"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:28:27"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:30:17"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:30:17"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:31:05"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:31:05"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:31:35"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 19:31:35"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 22:49:33"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 22:49:33"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 22:50:25"}
[31merror[39m: 
Invalid `prisma.user.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "2024-05-25"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-25 22:50:25"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:20:24"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:20:24"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:25:47"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:25:47"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:27:22"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:27:22"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:28:35"}
[31merror[39m: Operation `rules.find()` buffering timed out after 10000ms {"timestamp":"2024-05-25 23:28:35"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:40:56"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:40:56"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:45:04"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:45:04"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:48:51"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:48:51"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:50:43"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:50:43"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:50:45"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:50:45"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:58:39"}
[31merror[39m: Operation `users.countDocuments()` buffering timed out after 10000ms {"timestamp":"2024-05-27 01:58:39"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:07"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:07"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:35"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:35"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:45"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:45"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:55"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:05:55"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:01"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:01"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:15"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:15"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:25"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:25"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:35"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:35"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:44"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:44"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:58"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:06:58"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:10"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:10"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:20"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:20"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:30"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:30"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:40"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:40"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:50"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:50"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:56"}
[31merror[39m: Operation `places.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:07:56"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:48:44"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:48:44"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:25"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:25"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:46"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:46"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:56"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:49:56"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:06"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:06"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:16"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:16"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:26"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:26"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:36"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:36"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:46"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:46"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:55"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:55"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:56"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:50:56"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:51:03"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:51:03"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:52:33"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:52:33"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:53:19"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:53:19"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:15"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:15"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:25"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:25"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:37"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:37"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:47"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:47"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:57"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:54:57"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:12"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:12"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:21"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:21"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:27"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:27"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:31"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:31"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:37"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:37"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:47"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:47"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:57"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:55:57"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:07"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:10"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:10"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:12"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:12"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:14"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:14"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:17"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:27"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:27"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:54"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 05:56:54"}
[31merror[39m: 
Invalid `prisma.partner.create()` invocation:

{
  name: "Ali Tarek",
  ~~~~
  email: "alitarek99944@gmail.com",
  city: "Alexandria",
  postal_code: "5310002",
  address: "N/A",
  other_address: "N/A",
  fax_number: undefined,
  phone_number: "01150421159",
  created_at: "27.05.2024 06:20",
? data?: PartnerCreateInput | PartnerUncheckedCreateInput
}

Unknown argument `name`. Did you mean `data`? Available options are marked with ?. {"timestamp":"2024-05-27 06:20:43"}
[31merror[39m: 
Invalid `prisma.partner.create()` invocation:

{
  name: "Ali Tarek",
  ~~~~
  email: "alitarek99944@gmail.com",
  city: "Alexandria",
  postal_code: "5310002",
  address: "N/A",
  other_address: "N/A",
  fax_number: undefined,
  phone_number: "01150421159",
  created_at: "27.05.2024 06:20",
? data?: PartnerCreateInput | PartnerUncheckedCreateInput
}

Unknown argument `name`. Did you mean `data`? Available options are marked with ?. {"timestamp":"2024-05-27 06:20:43"}
[31merror[39m: 
Invalid `prisma.partner.create()` invocation:

{
  data: {
    name: "Ali Tarek",
    email: "alitarek99944@gmail.com",
    city: "Alexandria",
    postal_code: "5310002",
    address: "N/A",
    other_address: "N/A",
    fax_number: undefined,
    phone_number: "01150421159",
    created_at: "27.05.2024 06:21",
+   updated_at: String
  }
}

Argument `updated_at` is missing. {"timestamp":"2024-05-27 06:21:21"}
[31merror[39m: 
Invalid `prisma.partner.create()` invocation:

{
  data: {
    name: "Ali Tarek",
    email: "alitarek99944@gmail.com",
    city: "Alexandria",
    postal_code: "5310002",
    address: "N/A",
    other_address: "N/A",
    fax_number: undefined,
    phone_number: "01150421159",
    created_at: "27.05.2024 06:21",
+   updated_at: String
  }
}

Argument `updated_at` is missing. {"timestamp":"2024-05-27 06:21:21"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:23:21"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:23:21"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:23:23"}
[31merror[39m: Operation `partners.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:23:23"}
[31merror[39m: 
Invalid `prisma.place.create()` invocation:

{
  data: {
    location: "xc",
    policy: "x",
    code: "x",
+   created_at: String
  }
}

Argument `created_at` is missing. {"timestamp":"2024-05-27 06:31:40"}
[31merror[39m: 
Invalid `prisma.place.create()` invocation:

{
  data: {
    location: "xc",
    policy: "x",
    code: "x",
+   created_at: String
  }
}

Argument `created_at` is missing. {"timestamp":"2024-05-27 06:31:40"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:38:33"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:38:33"}
[31merror[39m: Operation `partnerplacedeletionrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:38:33"}
[31merror[39m: Operation `partnerplacedeletionrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 06:38:33"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:51:09"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:51:09"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:51:50"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:51:50"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:52:00"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:52:00"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:52:05"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 07:52:05"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 07:56:27"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 07:56:27"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 07:57:29"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 07:57:29"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:03:01"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:03:01"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:03:34"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:03:34"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:04:17"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:04:17"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:04:23"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:04:23"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:06:06"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:06:06"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:11:39"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:11:39"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:12:01"}
[31merror[39m: Request failed with status code 400 {"timestamp":"2024-05-27 08:12:01"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:12",
    registeration_type: "tttttttt",
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-05-27 08:12:21"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:12",
    registeration_type: "tttttttt",
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-05-27 08:12:21"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
              ~~~~~~~~~~
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:12",
    registeration_type: "tttttttt"
  }
}

Invalid value for argument `car_type`. Expected CarType. {"timestamp":"2024-05-27 08:12:48"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
              ~~~~~~~~~~
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:12",
    registeration_type: "tttttttt"
  }
}

Invalid value for argument `car_type`. Expected CarType. {"timestamp":"2024-05-27 08:12:48"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    ~~~~~~~~
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:20",
    registeration_type: "tttttttt",
?   id?: Int,
?   source_id?: Int | Null,
?   free_parking_hours?: Int | Null
  }
}

Unknown argument `car_type`. Available options are marked with ?. {"timestamp":"2024-05-27 08:20:23"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    ~~~~~~~~
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-08T05:03:28.732Z",
    end_date: "2024-05-31T05:03:30.648Z",
    created_at: "27.05.2024 08:20",
    registeration_type: "tttttttt",
?   id?: Int,
?   source_id?: Int | Null,
?   free_parking_hours?: Int | Null
  }
}

Unknown argument `car_type`. Available options are marked with ?. {"timestamp":"2024-05-27 08:20:23"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:28",
    registration_type: undefined,
+   registeration_type: String
  }
}

Argument `registeration_type` is missing. {"timestamp":"2024-05-27 08:28:28"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:28",
    registration_type: undefined,
+   registeration_type: String
  }
}

Argument `registeration_type` is missing. {"timestamp":"2024-05-27 08:28:28"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:28",
+   registration_type: String
  }
}

Argument `registration_type` is missing. {"timestamp":"2024-05-27 08:28:55"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:28",
+   registration_type: String
  }
}

Argument `registration_type` is missing. {"timestamp":"2024-05-27 08:28:55"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:29",
    registration_type: "gfsgsfg",
+   registration_source: RegistrationSource
  }
}

Argument `registration_source` is missing. {"timestamp":"2024-05-27 08:29:39"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: "2018",
    car_model: "PEUGEOT",
    car_description: "Varebil kl 2",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 1,
    registeration_source: "system",
    start_date: "2024-05-01T05:28:23.057Z",
    end_date: "2024-05-22T05:28:24.291Z",
    created_at: "27.05.2024 08:29",
    registration_type: "gfsgsfg",
+   registration_source: RegistrationSource
  }
}

Argument `registration_source` is missing. {"timestamp":"2024-05-27 08:29:39"}
[31merror[39m: Operation `carlogs.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 08:30:41"}
[31merror[39m: Operation `carlogs.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 08:30:41"}
[31merror[39m: Operation `carlogs.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 08:30:51"}
[31merror[39m: Operation `carlogs.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 08:30:51"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 11:10:35"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 11:10:35"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 11:48:22"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 11:48:22"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 14:34:30"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 14:34:30"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 14:38:31"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-27 14:38:31"}
[31merror[39m: 
Invalid `prisma.partnerDashboard.create()` invocation:

{
  data: {
    access_code: "test",
    partner_id: 1,
+   access_username: String
  }
}

Argument `access_username` is missing. {"timestamp":"2024-05-27 14:39:31"}
[31merror[39m: 
Invalid `prisma.partnerDashboard.create()` invocation:

{
  data: {
    access_code: "test",
    partner_id: 1,
+   access_username: String
  }
}

Argument `access_username` is missing. {"timestamp":"2024-05-27 14:39:31"}
[31merror[39m: 
Invalid `prisma.partnerDashboard.create()` invocation:


Unique constraint failed on the constraint: `PartnerDashboard_partner_id_key` {"timestamp":"2024-05-27 14:40:37"}
[31merror[39m: 
Invalid `prisma.partnerDashboard.create()` invocation:


Unique constraint failed on the constraint: `PartnerDashboard_partner_id_key` {"timestamp":"2024-05-27 14:40:37"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:00"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:00"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:01"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:01"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:23"}
[31merror[39m: 
Invalid `prisma.partner.findMany()` invocation:

{
  where: {
    deleted_at: null
  },
  include: {
    partnerDashboard: true,
    ~~~~~~~~~~~~~~~~
?   places?: true,
?   dashboard?: true
  }
}

Unknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?. {"timestamp":"2024-05-27 14:46:23"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 11:02:31"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 11:02:31"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 11:02:53"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 11:02:53"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-28 11:02:57"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-28 11:02:57"}
[31merror[39m: id is not defined {"timestamp":"2024-05-28 11:03:03"}
[31merror[39m: id is not defined {"timestamp":"2024-05-28 11:03:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:03:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:10"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:05:34"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:05:34"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:05:36"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:05:44"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:05:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:09:56"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:40"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:10:47"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:24"}
[31merror[39m: partner is not defined {"timestamp":"2024-05-28 11:13:28"}
[31merror[39m: partner is not defined {"timestamp":"2024-05-28 11:13:28"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:13:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:14:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:15:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:17:18"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:17:18"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:17:20"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:17:20"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:17:28"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:17:28"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:17:38"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:17:38"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:19:03"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:08"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:08"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:18"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:18"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:38"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:38"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:41"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:41"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:44"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:48"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:48"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:50"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:19:53"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:58"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:19:58"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:08"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:08"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:14"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:14"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:18"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:18"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:23"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:20:23"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:22"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:22"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:23"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:23"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:32"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:32"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:34"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:34"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:37"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:37"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:42"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:44"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:46"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:21:46"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:47"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:47"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:57"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:21:57"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:07"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:07"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:23"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:23"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:28"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:28"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:30"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:30"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:22:31"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:33"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:33"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:43"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:43"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:53"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:22:53"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:01"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:01"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:12"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:12"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:15"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:15"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:21"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:21"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:22"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:22"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "partner" for model "Place" {"timestamp":"2024-05-28 11:23:31"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:32"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:32"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:42"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:42"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:43"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 11:23:43"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:53"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 11:23:53"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 12:47:46"}
[31merror[39m: Cast to ObjectId failed for value "undefined" (type string) at path "requested_by" for model "PartnerPlaceDeletionRequest" {"timestamp":"2024-05-28 12:47:46"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 12:47:56"}
[31merror[39m: Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms {"timestamp":"2024-05-28 12:47:56"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 12:49:35"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 12:49:35"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 12:49:52"}
[31merror[39m: No partner was found {"timestamp":"2024-05-28 12:49:52"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-28 12:49:56"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-28 12:49:56"}
[31merror[39m: 
Invalid `prisma.place.create()` invocation:

{
  data: {
    location: "Oslo",
    policy: "no policy",
    code: "ALX",
    created_at: "28.05.2024 12:50",
+   is_verified: Boolean
  }
}

Argument `is_verified` is missing. {"timestamp":"2024-05-28 12:50:39"}
[31merror[39m: 
Invalid `prisma.place.create()` invocation:

{
  data: {
    location: "Oslo",
    policy: "no policy",
    code: "ALX",
    created_at: "28.05.2024 12:50",
+   is_verified: Boolean
  }
}

Argument `is_verified` is missing. {"timestamp":"2024-05-28 12:50:39"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:

{
  data: {
    request_type: "deletion",
    location: undefined,
    policy: undefined,
    code: undefined,
    place_id: 2,
              ~
    requested_by_id: 2,
    created_at: "29.05.2024 08:30"
  }
}

Argument `place_id`: Invalid value provided. Expected String or Null, provided Int. {"timestamp":"2024-05-29 08:30:51"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:

{
  data: {
    request_type: "deletion",
    location: undefined,
    policy: undefined,
    code: undefined,
    place_id: 2,
              ~
    requested_by_id: 2,
    created_at: "29.05.2024 08:30"
  }
}

Argument `place_id`: Invalid value provided. Expected String or Null, provided Int. {"timestamp":"2024-05-29 08:30:51"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:49:52"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:49:52"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:49:54"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:49:54"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:44"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:44"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:44"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:44"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:45"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:45"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:45"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:45"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:49"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:49"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:49"}
[31merror[39m: 
Invalid `prisma.car.aggregate()` invocation:

{
  select: {
    _avg: {
      select: {
        duration: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:50:49"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:55:48"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:55:48"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:55:48"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:55:48"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:06"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:06"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2,
          location: "Oslo",
          policy: "no policy",
          code: "ALX",
          created_at: "28.05.2024 12:51",
          updated_at: null,
          deleted_at: null,
          is_verified: true,
          partner_id: null
        }
      ]
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:56:06"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2,
          location: "Oslo",
          policy: "no policy",
          code: "ALX",
          created_at: "28.05.2024 12:51",
          updated_at: null,
          deleted_at: null,
          is_verified: true,
          partner_id: null
        }
      ]
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:56:06"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:31"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:31"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:56:31"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:56:31"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:53"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:56:53"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:58:59"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:58:59"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:58:59"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:58:59"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:59:00"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: {
        then: [object Function],
              ~~~~~~~~~~~~~~~~~
        catch: [object Function],
        finally: [object Function],
        requestTransaction: [object Function]
      }
    }
  }
}

Invalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a ".toJSON()" method on it. {"timestamp":"2024-05-29 08:59:00"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:59:00"}
[31merror[39m: 
Invalid `prisma.car.count()` invocation:

{
  select: {
    _count: {
      select: {
        _all: true
      }
    }
  },
  where: {
    place_id: {
      in: [
        {
          id: 2
        }
      ]
      ~~~~~~~~~
    }
  }
}

Argument `in`: Invalid value provided. Expected Int, provided Object. {"timestamp":"2024-05-29 08:59:00"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:16:34"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:16:34"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:17:01"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:17:01"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:18:05"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:18:05"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:20:56"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:20:56"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:20:57"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:20:57"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:01"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:01"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:10"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:10"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:22"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:22"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:25"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:25"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:36"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:36"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:45"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:45"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:46"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:46"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:51"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:51"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:53"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:53"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:55"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:21:55"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:22:01"}
[31merror[39m: PlaceRepository.getAllPlaceProfiles is not a function {"timestamp":"2024-05-29 09:22:01"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:

{
  data: {
    place_id: "2",
              ~~~
    access_code: "kjlh",
    access_username: "jhkl",
    place_name: "trw",
    place_type: "gjjklj",
    free_parking_hours: 8,
    created_at: "29.05.2024 09:59"
  }
}

Argument `place_id`: Invalid value provided. Expected Int, provided String. {"timestamp":"2024-05-29 09:59:33"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:

{
  data: {
    place_id: "2",
              ~~~
    access_code: "kjlh",
    access_username: "jhkl",
    place_name: "trw",
    place_type: "gjjklj",
    free_parking_hours: 8,
    created_at: "29.05.2024 09:59"
  }
}

Argument `place_id`: Invalid value provided. Expected Int, provided String. {"timestamp":"2024-05-29 09:59:33"}
[31merror[39m: 
Invalid `prisma.user.create()` invocation:


Unique constraint failed on the constraint: `User_pnid_key` {"timestamp":"2024-05-29 10:27:59"}
[31merror[39m: 
Invalid `prisma.user.create()` invocation:


Unique constraint failed on the constraint: `User_pnid_key` {"timestamp":"2024-05-29 10:27:59"}
[31merror[39m: [object Object] {"timestamp":"2024-05-29 10:28:36"}
[31merror[39m: [object Object] {"timestamp":"2024-05-29 10:28:36"}
[31merror[39m: credentials is not defined {"timestamp":"2024-05-29 10:28:51"}
[31merror[39m: credentials is not defined {"timestamp":"2024-05-29 10:28:51"}
[31merror[39m: AuthRepository.login is not a function {"timestamp":"2024-05-29 10:29:39"}
[31merror[39m: AuthRepository.login is not a function {"timestamp":"2024-05-29 10:29:39"}
[31merror[39m: Cannot destructure property 'user_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-29 10:29:50"}
[31merror[39m: Cannot destructure property 'user_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-29 10:29:50"}
[31merror[39m: rule is not defined {"timestamp":"2024-05-29 12:12:35"}
[31merror[39m: rule is not defined {"timestamp":"2024-05-29 12:12:35"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: "524",
            ~~~~~
    policy_time: "2",
    created_at: "29.05.2024 12:14",
    extras: {
      connect: {
        meter_receipt_number: true,
        meter_number: true,
        expiry_date: false,
        paid_amount: false
      }
    }
  }
}

Argument `charge`: Invalid value provided. Expected Float, provided String. {"timestamp":"2024-05-29 12:14:01"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: "524",
            ~~~~~
    policy_time: "2",
    created_at: "29.05.2024 12:14",
    extras: {
      connect: {
        meter_receipt_number: true,
        meter_number: true,
        expiry_date: false,
        paid_amount: false
      }
    }
  }
}

Argument `charge`: Invalid value provided. Expected Float, provided String. {"timestamp":"2024-05-29 12:14:01"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: 524,
    policy_time: 2,
    created_at: "29.05.2024 12:14",
    extras: {
      connect: {
        meter_receipt_number: true,
        meter_number: true,
        expiry_date: false,
        paid_amount: false,
?       id?: Int,
?       rule_id?: Int,
?       AND?: ExtrasWhereInput | ExtrasWhereInput[],
?       OR?: ExtrasWhereInput[],
?       NOT?: ExtrasWhereInput | ExtrasWhereInput[],
?       rule?: RuleNullableRelationFilter | RuleWhereInput | Null
      }
    }
  }
}

Argument `connect` of type ExtrasWhereUniqueInput needs at least one of `id` or `rule_id` arguments. Available options are marked with ?. {"timestamp":"2024-05-29 12:14:39"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: 524,
    policy_time: 2,
    created_at: "29.05.2024 12:14",
    extras: {
      connect: {
        meter_receipt_number: true,
        meter_number: true,
        expiry_date: false,
        paid_amount: false,
?       id?: Int,
?       rule_id?: Int,
?       AND?: ExtrasWhereInput | ExtrasWhereInput[],
?       OR?: ExtrasWhereInput[],
?       NOT?: ExtrasWhereInput | ExtrasWhereInput[],
?       rule?: RuleNullableRelationFilter | RuleWhereInput | Null
      }
    }
  }
}

Argument `connect` of type ExtrasWhereUniqueInput needs at least one of `id` or `rule_id` arguments. Available options are marked with ?. {"timestamp":"2024-05-29 12:14:39"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: 524,
    policy_time: 2,
    created_at: "29.05.2024 12:15",
    extras: {
      meter_receipt_number: true,
      ~~~~~~~~~~~~~~~~~~~~
      meter_number: true,
      expiry_date: false,
      paid_amount: false,
?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,
?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,
?     connect?: ExtrasWhereUniqueInput
    }
  }
}

Unknown argument `meter_receipt_number`. Available options are marked with ?. {"timestamp":"2024-05-29 12:15:00"}
[31merror[39m: 
Invalid `prisma.rule.create()` invocation:

{
  data: {
    name: "trw",
    charge: 524,
    policy_time: 2,
    created_at: "29.05.2024 12:15",
    extras: {
      meter_receipt_number: true,
      ~~~~~~~~~~~~~~~~~~~~
      meter_number: true,
      expiry_date: false,
      paid_amount: false,
?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,
?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,
?     connect?: ExtrasWhereUniqueInput
    }
  }
}

Unknown argument `meter_receipt_number`. Available options are marked with ?. {"timestamp":"2024-05-29 12:15:00"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    rule_id: 1,
    ~~~~~~~
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean,
?   rule?: RuleCreateNestedOneWithoutExtrasInput
  }
}

Unknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?. {"timestamp":"2024-05-29 12:16:23"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    rule_id: 1,
    ~~~~~~~
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean,
?   rule?: RuleCreateNestedOneWithoutExtrasInput
  }
}

Unknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?. {"timestamp":"2024-05-29 12:16:23"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    extras: {
    ~~~~~~
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
    rule: {
      connect: {
        id: 2
      }
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-05-29 12:22:11"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    extras: {
    ~~~~~~
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
    rule: {
      connect: {
        id: 2
      }
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-05-29 12:22:11"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    rule_id: 3,
    ~~~~~~~
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean,
?   rule?: RuleCreateNestedOneWithoutExtrasInput
  }
}

Unknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?. {"timestamp":"2024-05-29 12:24:11"}
[31merror[39m: 
Invalid `prisma.extras.create()` invocation:

{
  data: {
    rule_id: 3,
    ~~~~~~~
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: false,
      paid_amount: false
    },
?   meter_receipt_number?: Boolean,
?   meter_number?: Boolean,
?   expiry_date?: Boolean,
?   paid_amount?: Boolean,
?   rule?: RuleCreateNestedOneWithoutExtrasInput
  }
}

Unknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?. {"timestamp":"2024-05-29 12:24:11"}
[31merror[39m: jwt expired {"timestamp":"2024-05-30 09:24:51"}
[31merror[39m: jwt expired {"timestamp":"2024-05-30 09:24:51"}
[31merror[39m: Cast to string failed for value "{ place_id: '2' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-05-30 09:30:07"}
[31merror[39m: Cast to string failed for value "{ place_id: '2' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-05-30 09:30:07"}
[31merror[39m: Cast to string failed for value "{ place_id: '2' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-05-30 09:31:41"}
[31merror[39m: Cast to string failed for value "{ place_id: '2' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-05-30 09:31:41"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:34:01"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:34:01"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:35:12"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:35:12"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:36:48"}
[31merror[39m: Could not find car {"timestamp":"2024-05-30 09:36:48"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 09:44:21"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 09:44:21"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 09:45:54"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 09:45:54"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
    id: NaN
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: "690",
            ~~~~~
    policy_time: 0,
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: true,
      paid_amount: false
    },
    updated_at: "30.05.2024 10:08"
  }
}

Argument `charge`: Invalid value provided. Expected Float or FloatFieldUpdateOperationsInput, provided String. {"timestamp":"2024-05-30 10:08:31"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
    id: NaN
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: "690",
            ~~~~~
    policy_time: 0,
    extras: {
      meter_receipt_number: true,
      meter_number: true,
      expiry_date: true,
      paid_amount: false
    },
    updated_at: "30.05.2024 10:08"
  }
}

Argument `charge`: Invalid value provided. Expected Float or FloatFieldUpdateOperationsInput, provided String. {"timestamp":"2024-05-30 10:08:31"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
    id: NaN
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: 690,
    policy_time: 0,
    extras: {
      meter_receipt_number: true,
      ~~~~~~~~~~~~~~~~~~~~
      meter_number: true,
      expiry_date: true,
      paid_amount: false,
?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,
?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,
?     upsert?: ExtrasUpsertWithoutRuleInput,
?     disconnect?: Boolean | ExtrasWhereInput,
?     delete?: Boolean | ExtrasWhereInput,
?     connect?: ExtrasWhereUniqueInput,
?     update?: ExtrasUpdateToOneWithWhereWithoutRuleInput | ExtrasUpdateWithoutRuleInput | ExtrasUncheckedUpdateWithoutRuleInput
    },
    updated_at: "30.05.2024 10:10"
  }
}

Unknown argument `meter_receipt_number`. Available options are marked with ?. {"timestamp":"2024-05-30 10:10:03"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
    id: NaN
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: 690,
    policy_time: 0,
    extras: {
      meter_receipt_number: true,
      ~~~~~~~~~~~~~~~~~~~~
      meter_number: true,
      expiry_date: true,
      paid_amount: false,
?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,
?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,
?     upsert?: ExtrasUpsertWithoutRuleInput,
?     disconnect?: Boolean | ExtrasWhereInput,
?     delete?: Boolean | ExtrasWhereInput,
?     connect?: ExtrasWhereUniqueInput,
?     update?: ExtrasUpdateToOneWithWhereWithoutRuleInput | ExtrasUpdateWithoutRuleInput | ExtrasUncheckedUpdateWithoutRuleInput
    },
    updated_at: "30.05.2024 10:10"
  }
}

Unknown argument `meter_receipt_number`. Available options are marked with ?. {"timestamp":"2024-05-30 10:10:03"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: 690,
    policy_time: 0,
    updated_at: "30.05.2024 10:11"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 10:11:09"}
[31merror[39m: 
Invalid `prisma.rule.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    name: "Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)",
    charge: 690,
    policy_time: 0,
    updated_at: "30.05.2024 10:11"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 10:11:09"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:17:27"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:17:27"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:18:15"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:18:15"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:21:11"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:21:11"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:26:13"}
[31merror[39m: 
Invalid `prisma.placeDashboard.create()` invocation:


Unique constraint failed on the constraint: `PlaceDashboard_place_id_key` {"timestamp":"2024-05-30 10:26:13"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:


Foreign key constraint failed on the field: `requested_by_id` {"timestamp":"2024-05-30 10:33:51"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:


Foreign key constraint failed on the field: `requested_by_id` {"timestamp":"2024-05-30 10:33:51"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:


Foreign key constraint failed on the field: `requested_by_id` {"timestamp":"2024-05-30 10:34:32"}
[31merror[39m: 
Invalid `prisma.placeRequest.create()` invocation:


Foreign key constraint failed on the field: `requested_by_id` {"timestamp":"2024-05-30 10:34:32"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 10:35:03"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 10:35:03"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 10:37:02"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 10:37:02"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 10:40:46"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 10:40:46"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:06"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:06:48"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:06"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:06:48"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:06"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:06:52"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:06"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:06:52"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:07"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:07:07"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:07"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:07:07"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:07"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:07:20"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:07"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:07:20"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:09"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:09:44"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:09"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:09:44"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:11"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:11:49"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    deleted_at: "30.05.2024 11:11"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:11:49"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    location: undefined,
    policy: undefined,
    code: undefined
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:15:40"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    location: undefined,
    policy: undefined,
    code: undefined
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:15:40"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    location: "qwerty",
    policy: "no policy",
    code: "qewer"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:16:28"}
[31merror[39m: 
Invalid `prisma.place.update()` invocation:

{
  where: {
+   id: Int
  },
  data: {
    location: "qwerty",
    policy: "no policy",
    code: "qewer"
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:16:28"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 11:34:34"}
[31merror[39m: Operation `violations.find()` buffering timed out after 10000ms {"timestamp":"2024-05-30 11:34:34"}
[31merror[39m: 
Invalid `prisma.placeDashboard.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:40:36"}
[31merror[39m: 
Invalid `prisma.placeDashboard.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:40:36"}
[31merror[39m: 
Invalid `prisma.placeDashboard.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:41:01"}
[31merror[39m: 
Invalid `prisma.placeDashboard.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 11:41:01"}
[31merror[39m: 
Invalid `prisma.placeDashboard.findUnique()` invocation:

{
  where: {
    access_username: "trw",
?   id?: Int,
?   AND?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],
?   OR?: PlaceDashboardWhereInput[],
?   NOT?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],
?   access_code?: StringFilter | String,
?   profile_image?: StringNullableFilter | String | Null,
?   free_parking_hours?: IntFilter | Int,
?   place_name?: StringFilter | String,
?   place_type?: StringFilter | String,
?   created_at?: StringFilter | String,
?   updated_at?: StringNullableFilter | String | Null,
?   deleted_at?: StringNullableFilter | String | Null,
?   place_id?: IntFilter | Int,
?   place?: PlaceRelationFilter | PlaceWhereInput,
?   registered_cars?: CarListRelationFilter
  },
  include: {
    place: true
  }
}

Argument `where` of type PlaceDashboardWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"timestamp":"2024-05-30 11:45:00"}
[31merror[39m: 
Invalid `prisma.placeDashboard.findUnique()` invocation:

{
  where: {
    access_username: "trw",
?   id?: Int,
?   AND?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],
?   OR?: PlaceDashboardWhereInput[],
?   NOT?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],
?   access_code?: StringFilter | String,
?   profile_image?: StringNullableFilter | String | Null,
?   free_parking_hours?: IntFilter | Int,
?   place_name?: StringFilter | String,
?   place_type?: StringFilter | String,
?   created_at?: StringFilter | String,
?   updated_at?: StringNullableFilter | String | Null,
?   deleted_at?: StringNullableFilter | String | Null,
?   place_id?: IntFilter | Int,
?   place?: PlaceRelationFilter | PlaceWhereInput,
?   registered_cars?: CarListRelationFilter
  },
  include: {
    place: true
  }
}

Argument `where` of type PlaceDashboardWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"timestamp":"2024-05-30 11:45:00"}
[31merror[39m: No place profile was found {"timestamp":"2024-05-30 11:45:59"}
[31merror[39m: No place profile was found {"timestamp":"2024-05-30 11:45:59"}
[31merror[39m: No dashboard username was found {"timestamp":"2024-05-30 11:46:48"}
[31merror[39m: No dashboard username was found {"timestamp":"2024-05-30 11:46:48"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 11:46:55"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 11:46:55"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 11:46:56"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 11:46:56"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 12:50:16"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 12:50:16"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:00:25"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:00:25"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:00:31"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:00:31"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    manufactur_year: "2002",
    car_model: "HYUNDAI",
    car_description: "Personbil",
    car_color: "Rød",
    car_type: "KJORETOY",
    plate_number: "BD31012",
    start_date: "30.05.2024 13:00",
    end_date: "30.05.2024 15:00",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 4,
    free_parking_time: 2,
    created_at: "30.05.2024 13:00",
+   place: {
+     create: PlaceCreateWithoutCarsInput | PlaceUncheckedCreateWithoutCarsInput,
+     connectOrCreate: PlaceCreateOrConnectWithoutCarsInput,
+     connect: PlaceWhereUniqueInput
+   }
  }
}

Argument `place` is missing. {"timestamp":"2024-05-30 13:00:36"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    manufactur_year: "2002",
    car_model: "HYUNDAI",
    car_description: "Personbil",
    car_color: "Rød",
    car_type: "KJORETOY",
    plate_number: "BD31012",
    start_date: "30.05.2024 13:00",
    end_date: "30.05.2024 15:00",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 4,
    free_parking_time: 2,
    created_at: "30.05.2024 13:00",
+   place: {
+     create: PlaceCreateWithoutCarsInput | PlaceUncheckedCreateWithoutCarsInput,
+     connectOrCreate: PlaceCreateOrConnectWithoutCarsInput,
+     connect: PlaceWhereUniqueInput
+   }
  }
}

Argument `place` is missing. {"timestamp":"2024-05-30 13:00:36"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    manufactur_year: "2002",
    car_model: "HYUNDAI",
    car_description: "Personbil",
    car_color: "Rød",
    car_type: "KJORETOY",
    plate_number: "BD31012",
    start_date: "30.05.2024 13:02",
    end_date: "30.05.2024 15:02",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 4,
    place_id: 1,
    free_parking_time: 2,
    ~~~~~~~~~~~~~~~~~
    created_at: "30.05.2024 13:02",
?   id?: Int,
?   free_parking_hours?: Int | Null
  }
}

Unknown argument `free_parking_time`. Available options are marked with ?. {"timestamp":"2024-05-30 13:02:06"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    manufactur_year: "2002",
    car_model: "HYUNDAI",
    car_description: "Personbil",
    car_color: "Rød",
    car_type: "KJORETOY",
    plate_number: "BD31012",
    start_date: "30.05.2024 13:02",
    end_date: "30.05.2024 15:02",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 4,
    place_id: 1,
    free_parking_time: 2,
    ~~~~~~~~~~~~~~~~~
    created_at: "30.05.2024 13:02",
?   id?: Int,
?   free_parking_hours?: Int | Null
  }
}

Unknown argument `free_parking_time`. Available options are marked with ?. {"timestamp":"2024-05-30 13:02:06"}
[31merror[39m: free_parking_time is not defined {"timestamp":"2024-05-30 13:02:42"}
[31merror[39m: free_parking_time is not defined {"timestamp":"2024-05-30 13:02:42"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:03:42"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:03:42"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:04"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:04"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:28"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:28"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:36"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:36"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:47"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:04:47"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:05:00"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:05:00"}
[31merror[39m: 
Invalid `prisma.car.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 13:05:54"}
[31merror[39m: 
Invalid `prisma.car.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 13:05:54"}
[31merror[39m: 
Invalid `prisma.car.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 13:05:57"}
[31merror[39m: 
Invalid `prisma.car.delete()` invocation:

{
  where: {
+   id: Int
  }
}

Argument `id` is missing. {"timestamp":"2024-05-30 13:05:57"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 13:10:16"}
[31merror[39m: Access code is incorrect {"timestamp":"2024-05-30 13:10:16"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:17:40"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:17:40"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:17:45"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:17:45"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:18:52"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:18:52"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:11"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:11"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:41"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:41"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:43"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:43"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:45"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:45"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:48"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:48"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:50"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:50"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:52"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:19:52"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:07"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:07"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:12"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:12"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:14"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:14"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:15"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:15"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:15"}
[31merror[39m: Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined. {"timestamp":"2024-05-30 13:20:15"}
[31merror[39m: de is not defined {"timestamp":"2024-05-30 13:20:52"}
[31merror[39m: de is not defined {"timestamp":"2024-05-30 13:20:52"}
[31merror[39m: de is not defined {"timestamp":"2024-05-30 13:20:53"}
[31merror[39m: de is not defined {"timestamp":"2024-05-30 13:20:53"}
[31merror[39m: Assignment to constant variable. {"timestamp":"2024-05-30 13:21:02"}
[31merror[39m: Assignment to constant variable. {"timestamp":"2024-05-30 13:21:02"}
[31merror[39m: Car is already registered {"timestamp":"2024-05-30 14:41:32"}
[31merror[39m: Car is already registered {"timestamp":"2024-05-30 14:41:32"}
[31merror[39m: jwt expired {"timestamp":"2024-05-31 14:02:45"}
[31merror[39m: jwt expired {"timestamp":"2024-05-31 14:02:45"}
[31merror[39m: jwt expired {"timestamp":"2024-06-01 05:16:25"}
[31merror[39m: jwt expired {"timestamp":"2024-06-01 05:16:25"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 00:45:14"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 00:45:14"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 00:54:29"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 00:54:29"}
[31merror[39m: Cast to string failed for value "{ place_id: '6' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-06-02 01:25:07"}
[31merror[39m: Cast to string failed for value "{ place_id: '6' }" (type Object) at path "place" for model "Violation" {"timestamp":"2024-06-02 01:25:07"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 04:58:29"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 04:58:29"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: "6"
              ~~~
  },
  orderBy: {
    created_at: "desc"
  }
}

Argument `place_id`: Invalid value provided. Expected IntFilter or Int, provided String. {"timestamp":"2024-06-02 07:08:32"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: "6"
              ~~~
  },
  orderBy: {
    created_at: "desc"
  }
}

Argument `place_id`: Invalid value provided. Expected IntFilter or Int, provided String. {"timestamp":"2024-06-02 07:08:32"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 08:08:24"}
[31merror[39m: jwt expired {"timestamp":"2024-06-02 08:08:24"}
[31merror[39m: jwt expired {"timestamp":"2024-06-03 05:41:32"}
[31merror[39m: jwt expired {"timestamp":"2024-06-03 05:41:32"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 00:47:28"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 00:47:28"}
[31merror[39m: data is not defined {"timestamp":"2024-06-04 03:06:38"}
[31merror[39m: data is not defined {"timestamp":"2024-06-04 03:06:38"}
[31merror[39m: data is not defined {"timestamp":"2024-06-04 03:41:58"}
[31merror[39m: data is not defined {"timestamp":"2024-06-04 03:41:58"}
[31merror[39m: place is not defined {"timestamp":"2024-06-04 03:42:33"}
[31merror[39m: place is not defined {"timestamp":"2024-06-04 03:42:33"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-04 03:45:43"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-04 03:45:43"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-06-04 03:48:04"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-06-04 03:48:04"}
[31merror[39m: ticket_number is not defined {"timestamp":"2024-06-04 03:49:53"}
[31merror[39m: ticket_number is not defined {"timestamp":"2024-06-04 03:49:53"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    shift_id: NaN,
    ticket_comment: "ttt",
    system_comment: "SSSS",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717451538354_93678427.png",
          date: "04.06.2024 00:52",
          localPath: "./public/images/temp_cars/1717451538354_93678427.png",
          originalName: "1717451538354_93678427.png"
        }
      ]
    },
    created_at: "04.06.2024 03:51",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "4786947",
        ticket_image: "http://localhost:3000/public/tickets/4786947.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-4523357960-ETQMJ.png",
        serial_number: "VL-4523357960-ETQMJ",
        created_at: "04.06.2024 03:51"
      }
    },
    plate_info: {
      create: {
        car_model: undefined,
        plate_number: undefined,
        manufactur_year: undefined,
        car_description: undefined,
        car_type: undefined,
        car_color: undefined,
        country_name: undefined,
        country_code: undefined
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "\"session-zwPULaiPh3n2EyHEkztV\"",
+   created_by: {
+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,
+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,
+     connect: UserWhereUniqueInput
+   }
  }
}

Argument `created_by` is missing. {"timestamp":"2024-06-04 03:51:48"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    shift_id: NaN,
    ticket_comment: "ttt",
    system_comment: "SSSS",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717451538354_93678427.png",
          date: "04.06.2024 00:52",
          localPath: "./public/images/temp_cars/1717451538354_93678427.png",
          originalName: "1717451538354_93678427.png"
        }
      ]
    },
    created_at: "04.06.2024 03:51",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "4786947",
        ticket_image: "http://localhost:3000/public/tickets/4786947.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-4523357960-ETQMJ.png",
        serial_number: "VL-4523357960-ETQMJ",
        created_at: "04.06.2024 03:51"
      }
    },
    plate_info: {
      create: {
        car_model: undefined,
        plate_number: undefined,
        manufactur_year: undefined,
        car_description: undefined,
        car_type: undefined,
        car_color: undefined,
        country_name: undefined,
        country_code: undefined
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "\"session-zwPULaiPh3n2EyHEkztV\"",
+   created_by: {
+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,
+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,
+     connect: UserWhereUniqueInput
+   }
  }
}

Argument `created_by` is missing. {"timestamp":"2024-06-04 03:51:49"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "ttt",
    system_comment: "SSSS",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717451538354_93678427.png",
          date: "04.06.2024 00:52",
          localPath: "./public/images/temp_cars/1717451538354_93678427.png",
          originalName: "1717451538354_93678427.png"
        }
      ]
    },
    created_at: "04.06.2024 03:56",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "2983292",
        ticket_image: "http://localhost:3000/public/tickets/2983292.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8643370208-VGVK6.png",
        serial_number: "VL-8643370208-VGVK6",
        created_at: "04.06.2024 03:56"
      }
    },
    plate_info: {
      create: {
        car_model: undefined,
        plate_number: undefined,
        manufactur_year: undefined,
        car_description: undefined,
        car_type: undefined,
        car_color: undefined,
        country_name: undefined,
        country_code: undefined
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "\"session-zwPULaiPh3n2EyHEkztV\"",
+   created_by: {
+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,
+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,
+     connect: UserWhereUniqueInput
+   }
  }
}

Argument `created_by` is missing. {"timestamp":"2024-06-04 03:56:48"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "ttt",
    system_comment: "SSSS",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717451538354_93678427.png",
          date: "04.06.2024 00:52",
          localPath: "./public/images/temp_cars/1717451538354_93678427.png",
          originalName: "1717451538354_93678427.png"
        }
      ]
    },
    created_at: "04.06.2024 03:56",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "2983292",
        ticket_image: "http://localhost:3000/public/tickets/2983292.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8643370208-VGVK6.png",
        serial_number: "VL-8643370208-VGVK6",
        created_at: "04.06.2024 03:56"
      }
    },
    plate_info: {
      create: {
        car_model: undefined,
        plate_number: undefined,
        manufactur_year: undefined,
        car_description: undefined,
        car_type: undefined,
        car_color: undefined,
        country_name: undefined,
        country_code: undefined
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "\"session-zwPULaiPh3n2EyHEkztV\"",
+   created_by: {
+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,
+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,
+     connect: UserWhereUniqueInput
+   }
  }
}

Argument `created_by` is missing. {"timestamp":"2024-06-04 03:56:48"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-06-04 04:14:12"}
[31merror[39m: Navigation timeout of 30000 ms exceeded {"timestamp":"2024-06-04 04:14:12"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13",
          localPath: "./public/images/temp_cars/1717463601552_152367773.png",
          originalName: "1717463601552_152367773.png"
        }
      ]
    },
    created_at: "04.06.2024 04:15",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6042654",
        ticket_image: "http://localhost:3000/public/tickets/6042654.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-6337941962-5MV0M.png",
        serial_number: "VL-6337941962-5MV0M",
        created_at: "04.06.2024 04:15"
      }
    },
    registered_car: undefined,
    rules: {
      create: {
        0: {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      }
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `localPath`. Available options are marked with ?. {"timestamp":"2024-06-04 04:16:04"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13",
          localPath: "./public/images/temp_cars/1717463601552_152367773.png",
          originalName: "1717463601552_152367773.png"
        }
      ]
    },
    created_at: "04.06.2024 04:15",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6042654",
        ticket_image: "http://localhost:3000/public/tickets/6042654.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-6337941962-5MV0M.png",
        serial_number: "VL-6337941962-5MV0M",
        created_at: "04.06.2024 04:15"
      }
    },
    registered_car: undefined,
    rules: {
      create: {
        0: {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      }
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `localPath`. Available options are marked with ?. {"timestamp":"2024-06-04 04:16:04"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:17",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "1451408",
        ticket_image: "http://localhost:3000/public/tickets/1451408.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8549064699-04DMS.png",
        serial_number: "VL-8549064699-04DMS",
        created_at: "04.06.2024 04:17"
      }
    },
    registered_car: undefined,
    rules: {
      create: {
        0: {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        },
+       name: String
      }
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `name` is missing. {"timestamp":"2024-06-04 04:17:25"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:17",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "1451408",
        ticket_image: "http://localhost:3000/public/tickets/1451408.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8549064699-04DMS.png",
        serial_number: "VL-8549064699-04DMS",
        created_at: "04.06.2024 04:17"
      }
    },
    registered_car: undefined,
    rules: {
      create: {
        0: {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        },
+       name: String
      }
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `name` is missing. {"timestamp":"2024-06-04 04:17:25"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:18",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "4974694",
        ticket_image: "http://localhost:3000/public/tickets/4974694.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-7973656338-I2WTH.png",
        serial_number: "VL-7973656338-I2WTH",
        created_at: "04.06.2024 04:18"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `id`. Available options are marked with ?. {"timestamp":"2024-06-04 04:18:35"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:18",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "4974694",
        ticket_image: "http://localhost:3000/public/tickets/4974694.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-7973656338-I2WTH.png",
        serial_number: "VL-7973656338-I2WTH",
        created_at: "04.06.2024 04:18"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: 2,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `id`. Available options are marked with ?. {"timestamp":"2024-06-04 04:18:35"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:19",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6554577",
        ticket_image: "http://localhost:3000/public/tickets/6554577.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-3370033152-UX8G4.png",
        serial_number: "VL-3370033152-UX8G4",
        created_at: "04.06.2024 04:19"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-06-04 04:20:10"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:19",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6554577",
        ticket_image: "http://localhost:3000/public/tickets/6554577.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-3370033152-UX8G4.png",
        serial_number: "VL-3370033152-UX8G4",
        created_at: "04.06.2024 04:19"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            meter_receipt_number: null,
            meter_number: null,
            expiry_date: null,
            paid_amount: null
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-06-04 04:20:10"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:27",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6833342",
        ticket_image: "http://localhost:3000/public/tickets/6833342.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8658818064-C34LR.png",
        serial_number: "VL-8658818064-C34LR",
        created_at: "04.06.2024 04:27"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-06-04 04:27:58"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:27",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6833342",
        ticket_image: "http://localhost:3000/public/tickets/6833342.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-8658818064-C34LR.png",
        serial_number: "VL-8658818064-C34LR",
        created_at: "04.06.2024 04:27"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: {
            meter_receipt_number: true,
            meter_number: true,
            expiry_date: true,
            paid_amount: true
          },
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Unknown argument `extras`. Available options are marked with ?. {"timestamp":"2024-06-04 04:27:58"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:29",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "0197612",
        ticket_image: "http://localhost:3000/public/tickets/0197612.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-6660151725-I388D.png",
        serial_number: "VL-6660151725-I388D",
        created_at: "04.06.2024 04:29"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: undefined,
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `meter_receipt_number` is missing. {"timestamp":"2024-06-04 04:29:51"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:29",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "0197612",
        ticket_image: "http://localhost:3000/public/tickets/0197612.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-6660151725-I388D.png",
        serial_number: "VL-6660151725-I388D",
        created_at: "04.06.2024 04:29"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: undefined,
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: null,
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `meter_receipt_number` is missing. {"timestamp":"2024-06-04 04:29:51"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:30",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6665486",
        ticket_image: "http://localhost:3000/public/tickets/6665486.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-1786422520-LMN7C.png",
        serial_number: "VL-1786422520-LMN7C",
        created_at: "04.06.2024 04:30"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: undefined,
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO",
+       car_model: String
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `car_model` must not be null. {"timestamp":"2024-06-04 04:31:10"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "RRRR",
    system_comment: "sssss",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://localhost:3000/public/images/cars/1717463601552_152367773.png",
          date: "04.06.2024 04:13"
        }
      ]
    },
    created_at: "04.06.2024 04:30",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "6665486",
        ticket_image: "http://localhost:3000/public/tickets/6665486.jpg",
        print_option: "hand",
        barcode_image: "http://localhost:3000/public/barcodes/VL-1786422520-LMN7C.png",
        serial_number: "VL-1786422520-LMN7C",
        created_at: "04.06.2024 04:30"
      }
    },
    registered_car: undefined,
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 10,
          extras: undefined,
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        plate_number: "",
        manufacture_year: null,
        car_description: null,
        car_type: "gfsg",
        car_color: null,
        country_name: "Norway",
        country_code: "NO",
+       car_model: String
      }
    },
    is_car_registered: false,
    registered_car_id: NaN,
    session_id: "session-XIvmlePnSZtcrTXnYMFp"
  }
}

Argument `car_model` must not be null. {"timestamp":"2024-06-04 04:31:10"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 09:02:50"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 09:02:50"}
[31merror[39m: moment is not defined {"timestamp":"2024-06-04 17:18:26"}
[31merror[39m: moment is not defined {"timestamp":"2024-06-04 17:18:26"}
[31merror[39m: Cannot read properties of undefined (reading 'path') {"timestamp":"2024-06-04 17:19:50"}
[31merror[39m: Cannot read properties of undefined (reading 'path') {"timestamp":"2024-06-04 17:19:50"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 19:41:02"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 19:41:02"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: undefined,
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
    registration_source: "system",
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:06",
    registration_type: "shop",
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:06:33"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    plate_number: "CV89558",
    manufactur_year: undefined,
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
    registration_source: "system",
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:06",
    registration_type: "shop",
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:06:33"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:07",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:07:42"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:07",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:07:42"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:10",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:10:56"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:10",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:10:56"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:13",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:13:01"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:13",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:13:01"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:15",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:15:46"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:15",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:15:46"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:20",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:20:09"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:20",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:20:09"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:30",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:30:26"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "2024-06-05T19:06:26.052Z",
    end_date: "2024-06-27T19:06:27.418Z",
    created_at: "04.06.2024 22:30",
    registration_source: "system",
    registered_by: "system",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV89558",
    car_model: "PEUGEOT",
    car_color: "Grå",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-04 22:30:26"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 23:17:32"}
[31merror[39m: jwt expired {"timestamp":"2024-06-04 23:17:32"}
[31merror[39m: jwt expired {"timestamp":"2024-06-05 05:46:42"}
[31merror[39m: jwt expired {"timestamp":"2024-06-05 05:46:42"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 08:13:28"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 08:13:28"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    car_model: "HARLEY-DAVIDSON",
    car_description: "Tung motorsykkel",
    car_color: "Grønn",
    car_type: "KJORETOY",
    plate_number: "CV8955",
    start_date: "05.06.2024 08:13",
    end_date: "05.06.2024 10:13",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 5,
    place_id: 6,
    free_parking_hours: 2,
    created_at: "05.06.2024 08:13",
+   manufacture_year: String
  }
}

Argument `manufacture_year` is missing. {"timestamp":"2024-06-05 08:13:48"}
[31merror[39m: 
Invalid `prisma.car.create()` invocation:

{
  data: {
    car_model: "HARLEY-DAVIDSON",
    car_description: "Tung motorsykkel",
    car_color: "Grønn",
    car_type: "KJORETOY",
    plate_number: "CV8955",
    start_date: "05.06.2024 08:13",
    end_date: "05.06.2024 10:13",
    registration_source: "gateway",
    registration_type: "External",
    source_id: 5,
    place_id: 6,
    free_parking_hours: 2,
    created_at: "05.06.2024 08:13",
+   manufacture_year: String
  }
}

Argument `manufacture_year` is missing. {"timestamp":"2024-06-05 08:13:48"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "05.06.2024 08:15",
    end_date: "05.06.2024 10:15",
    created_at: "05.06.2024 08:15",
    registration_source: "gateway",
    registered_by: "test",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV8955",
    car_model: "HARLEY-DAVIDSON",
    car_color: "Grønn",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-05 08:15:10"}
[31merror[39m: 
Invalid `prisma.carLog.create()` invocation:

{
  data: {
    start_date: "05.06.2024 08:15",
    end_date: "05.06.2024 10:15",
    created_at: "05.06.2024 08:15",
    registration_source: "gateway",
    registered_by: "test",
    place_location: "Oslo",
    place_code: "ALX",
    place_policy: "no policy",
    plate_number: "CV8955",
    car_model: "HARLEY-DAVIDSON",
    car_color: "Grønn",
    car_type: "KJORETOY",
    place_id: 6,
+   car_description: String
  }
}

Argument `car_description` is missing. {"timestamp":"2024-06-05 08:15:10"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 08:16:46"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 08:16:46"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-05 08:57:36"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-05 08:57:36"}
[31merror[39m: Could not find car {"timestamp":"2024-06-05 08:57:36"}
[31merror[39m: Could not find car {"timestamp":"2024-06-05 08:57:36"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-05 08:58:39"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-05 08:58:39"}
[31merror[39m: Could not find car {"timestamp":"2024-06-05 08:58:39"}
[31merror[39m: Could not find car {"timestamp":"2024-06-05 08:58:39"}
[31merror[39m: jwt expired {"timestamp":"2024-06-05 09:05:31"}
[31merror[39m: jwt expired {"timestamp":"2024-06-05 09:05:31"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:35:16"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:35:16"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:36:09"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:36:09"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:38:24"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:38:24"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:39:14"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:39:14"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:40:00"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  where: {
    place_id: 6,
+   session_id: {
+     equals: String | StringFieldRefInput,
+     in: String[],
+     notIn: String[],
+     lt: String | StringFieldRefInput,
+     lte: String | StringFieldRefInput,
+     gt: String | StringFieldRefInput,
+     gte: String | StringFieldRefInput,
+     contains: String | StringFieldRefInput,
+     startsWith: String | StringFieldRefInput,
+     endsWith: String | StringFieldRefInput,
+     not: String | NestedStringFilter
+   }
  },
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    plate_info: true,
    ticket_info: true,
    images: true
  }
}

Argument `session_id` is missing. {"timestamp":"2024-06-05 09:40:00"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 10:25:19"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 10:25:19"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 10:25:46"}
[31merror[39m: Car is already registered {"timestamp":"2024-06-05 10:25:46"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:22:52"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:22:52"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:23:24"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:23:24"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:24:34"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:24:34"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:25:10"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:25:10"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:26:33"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:26:33"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:27:57"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:27:57"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-05 11:28:57"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-05 11:28:57"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:29:02"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:29:02"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:30:45"}
[31merror[39m: [object Object],[object Object] {"timestamp":"2024-06-05 11:30:45"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-05 22:58:44"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-05 22:58:44"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-05 22:59:00"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-05 22:59:00"}
[31merror[39m: Unexpected token o in JSON at position 1 {"timestamp":"2024-06-05 23:10:26"}
[31merror[39m: Unexpected token o in JSON at position 1 {"timestamp":"2024-06-05 23:10:26"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-05 23:29:45"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-05 23:29:45"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 00:09:22"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 00:09:22"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-06 09:02:12"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-06 09:02:12"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-06 09:03:36"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-06 09:03:36"}
[31merror[39m: No user was found {"timestamp":"2024-06-06 09:05:41"}
[31merror[39m: No user was found {"timestamp":"2024-06-06 09:05:41"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-06 09:24:44"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-06 09:24:44"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:45:16"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:45:16"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:47:24"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:47:24"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:54:34"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 09:54:34"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:13:50"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:13:50"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:13:58"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:13:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:13:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:13:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:15:15"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:15:15"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:15:36"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:15:36"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:19:12"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:19:12"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:19:22"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:19:22"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:19:22"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:19:22"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:19:54"}
[31merror[39m: Autosys server error {"timestamp":"2024-06-06 11:19:54"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:19:54"}
[31merror[39m: Could not find car {"timestamp":"2024-06-06 11:19:54"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:05"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:05"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:09"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:09"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:57"}
[31merror[39m: Unexpected token s in JSON at position 0 {"timestamp":"2024-06-06 11:52:57"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 03:36:59"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 03:36:59"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 06:39:50"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 06:39:50"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:18"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:18"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-07 08:31:35"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-07 08:31:35"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:35"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:35"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-07 08:31:56"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-07 08:31:56"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:56"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 08:31:56"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 09:52:06"}
[31merror[39m: jwt expired {"timestamp":"2024-06-07 09:52:06"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-08 05:04:26"}
[31merror[39m: 
Invalid `prisma.user.findUnique()` invocation:


Can't reach database server at `localhost:3306`

Please make sure your database server is running at `localhost:3306`. {"timestamp":"2024-06-08 05:04:26"}
[31merror[39m: Password is incorrect {"timestamp":"2024-06-08 07:34:39"}
[31merror[39m: Password is incorrect {"timestamp":"2024-06-08 07:34:39"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 09:30:12"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 09:30:12"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 09:30:25"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 09:30:25"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-08 09:31:31"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-08 09:31:31"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-08 09:32:13"}
[31merror[39m: Unexpected token u in JSON at position 0 {"timestamp":"2024-06-08 09:32:13"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:36",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: "6"
        }
      ]
    }
  }
}

Argument `place_name` is missing. {"timestamp":"2024-06-08 09:36:59"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:36",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: "6"
        }
      ]
    }
  }
}

Argument `place_name` is missing. {"timestamp":"2024-06-08 09:36:59"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:43",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: "6",
          place_name: "Oslo"
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:43:49"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:43",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: "6",
          place_name: "Oslo"
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:43:49"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:44",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: 6,
          place_name: "Oslo"
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:44:05"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:44",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: 6,
          place_name: "Oslo"
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:44:05"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:45",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: 6,
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:45:26"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:45",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_id: 6,
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `place_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:45:26"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:46",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:46:51"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:46",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:46:51"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:50",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:50:16"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:50",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:50:16"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:58",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:58:42"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 09:58",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 09:58:42"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:01",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:01:17"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:01",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:01:17"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:02",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:02:26"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:02",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:02:26"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:03",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8,
          place_id: undefined
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:03:45"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:

{
  where: {
    id: 8
  },
  data: {
    end_date: "08.06.2024 10:03",
    logins: {
      create: [
        {
          login_time: "2024-06-08 09:10:39.898261",
          logout_time: "08.06.2024 09:31",
          place_name: "Oslo",
          shift_id: 8,
          place_id: undefined
        }
      ]
    }
  }
}

Unknown argument `shift_id`. Available options are marked with ?. {"timestamp":"2024-06-08 10:03:45"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:13:04"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:13:04"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:16:16"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:16:16"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:26:38"}
[31merror[39m: jwt must be provided {"timestamp":"2024-06-08 10:26:38"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "",
    system_comment: "",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830765894_45135068.png",
          date: "08.06.2024 10:12"
        },
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830780074_171987045.png",
          date: "08.06.2024 10:13"
        },
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830971618_131063874.png",
          date: "08.06.2024 10:16"
        }
      ]
    },
    created_at: "08.06.2024 10:30",
    place_login_time: "٠٨.٠٦.٢٠٢٤ ١٠:٠٩",
    print_option: "Fastet på kjøretøyet",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "2232188",
        ticket_image: "http://192.168.1.5:3000/public/tickets/2232188.jpg",
        print_option: "Fastet på kjøretøyet",
                      ~~~~~~~~~~~~~~~~~~~~~~
        barcode_image: "http://192.168.1.5:3000/public/barcodes/VL-2906889456-RP0M5.png",
        serial_number: "VL-2906889456-RP0M5",
        created_at: "08.06.2024 10:30"
      }
    },
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 1,
          extras: {
            create: {
              meter_receipt_number: true,
              meter_number: true,
              expiry_date: true,
              paid_amount: true
            }
          },
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: "PEUGEOT",
        plate_number: "CV89558",
        manufacture_year: "2018",
        car_description: "Varebil kl 2",
        car_type: "KJORETOY",
        car_color: "Grå",
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: true,
    registered_car_id: 11,
    session_id: "session-DPcmbzOPDCFT7eDg1BDS"
  }
}

Invalid value for argument `print_option`. Expected PrintOption. {"timestamp":"2024-06-08 10:30:46"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:

{
  data: {
    user_id: 1,
    ticket_comment: "",
    system_comment: "",
    place_id: 6,
    images: {
      create: [
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830765894_45135068.png",
          date: "08.06.2024 10:12"
        },
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830780074_171987045.png",
          date: "08.06.2024 10:13"
        },
        {
          path: "http://192.168.1.5:3000/public/images/cars/1717830971618_131063874.png",
          date: "08.06.2024 10:16"
        }
      ]
    },
    created_at: "08.06.2024 10:30",
    place_login_time: "٠٨.٠٦.٢٠٢٤ ١٠:٠٩",
    print_option: "Fastet på kjøretøyet",
    total_charge: 630,
    ticket_info: {
      create: {
        ticket_number: "2232188",
        ticket_image: "http://192.168.1.5:3000/public/tickets/2232188.jpg",
        print_option: "Fastet på kjøretøyet",
                      ~~~~~~~~~~~~~~~~~~~~~~
        barcode_image: "http://192.168.1.5:3000/public/barcodes/VL-2906889456-RP0M5.png",
        serial_number: "VL-2906889456-RP0M5",
        created_at: "08.06.2024 10:30"
      }
    },
    rules: {
      create: [
        {
          name: "x-rule",
          charge: 630,
          id: undefined,
          policy_time: 1,
          extras: {
            create: {
              meter_receipt_number: true,
              meter_number: true,
              expiry_date: true,
              paid_amount: true
            }
          },
          extras_values: {
            create: {
              meter_receipt_number: null,
              meter_number: null,
              expiry_date: null,
              paid_amount: null
            }
          }
        }
      ]
    },
    plate_info: {
      create: {
        car_model: "PEUGEOT",
        plate_number: "CV89558",
        manufacture_year: "2018",
        car_description: "Varebil kl 2",
        car_type: "KJORETOY",
        car_color: "Grå",
        country_name: "Norway",
        country_code: "NO"
      }
    },
    is_car_registered: true,
    registered_car_id: 11,
    session_id: "session-DPcmbzOPDCFT7eDg1BDS"
  }
}

Invalid value for argument `print_option`. Expected PrintOption. {"timestamp":"2024-06-08 10:30:46"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:


Unique constraint failed on the constraint: `Violation_registered_car_id_key` {"timestamp":"2024-06-08 10:32:14"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:


Unique constraint failed on the constraint: `Violation_registered_car_id_key` {"timestamp":"2024-06-08 10:32:14"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:


Unique constraint failed on the constraint: `Violation_registered_car_id_key` {"timestamp":"2024-06-08 10:35:35"}
[31merror[39m: 
Invalid `prisma.violation.create()` invocation:


Unique constraint failed on the constraint: `Violation_registered_car_id_key` {"timestamp":"2024-06-08 10:35:35"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:36:00"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:36:00"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


Database `sjekk` does not exist on the database server at `localhost:3306`. {"timestamp":"2024-06-08 10:36:12"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


Database `sjekk` does not exist on the database server at `localhost:3306`. {"timestamp":"2024-06-08 10:36:12"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


Database `sjekk` does not exist on the database server at `localhost:3306`. {"timestamp":"2024-06-08 10:36:45"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


Database `sjekk` does not exist on the database server at `localhost:3306`. {"timestamp":"2024-06-08 10:36:45"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found. {"timestamp":"2024-06-08 10:37:12"}
[31merror[39m: 
Invalid `prisma.shift.update()` invocation:


An operation failed because it depends on one or more records that were required but not found. Record to update not found. {"timestamp":"2024-06-08 10:37:12"}
[31merror[39m: No user was found {"timestamp":"2024-06-08 10:38:07"}
[31merror[39m: No user was found {"timestamp":"2024-06-08 10:38:07"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 10:39:23"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 10:39:23"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:40:19"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:40:19"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:41:10"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:41:10"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:41:34"}
[31merror[39m: Cannot read properties of null (reading 'id') {"timestamp":"2024-06-08 10:41:34"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:43:59"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:43:59"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:01"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:01"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:02"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:02"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:02"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:02"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:03"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:03"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:04"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:04"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:57"}
[31merror[39m: 
Invalid `prisma.violation.findMany()` invocation:

{
  orderBy: {
    created_at: "desc"
  },
  include: {
    place: true,
    creaated_by: true,
    ~~~~~~~~~~~
?   created_by?: true,
?   images?: true,
?   ticket_info?: true,
?   plate_info?: true,
?   registered_car?: true,
?   rules?: true
  }
}

Unknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?. {"timestamp":"2024-06-08 10:44:57"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 11:53:09"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 11:53:09"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 11:53:29"}
[31merror[39m: Could not find car {"timestamp":"2024-06-08 11:53:29"}
[31merror[39m: jwt expired {"timestamp":"2024-06-09 08:24:36"}
[31merror[39m: jwt expired {"timestamp":"2024-06-09 08:24:36"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:27:13"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:27:13"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:29:28"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:29:28"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:32:04"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:32:04"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:33:02"}
[31merror[39m: Could not find car {"timestamp":"2024-06-09 10:33:02"}
[31merror[39m: jwt expired {"timestamp":"2024-06-10 05:09:40"}
[31merror[39m: jwt expired {"timestamp":"2024-06-10 05:09:40"}
[31merror[39m: Could not find car {"timestamp":"2024-06-10 13:40:21"}
[31merror[39m: Could not find car {"timestamp":"2024-06-10 13:40:21"}
[31merror[39m: Could not find car {"timestamp":"2024-06-10 13:40:22"}
[31merror[39m: Could not find car {"timestamp":"2024-06-10 13:40:22"}
[31merror[39m: jwt expired {"timestamp":"2024-06-11 09:00:49"}
[31merror[39m: jwt expired {"timestamp":"2024-06-11 09:00:49"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:03:34"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:03:34"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:08:15"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:08:15"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:11:29"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:11:29"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:21:39"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:21:39"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:24:00"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:24:00"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:25:52"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:25:52"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:30:04"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:30:04"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:32:38"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 09:32:38"}
[31merror[39m: jwt expired {"timestamp":"2024-06-11 11:37:13"}
[31merror[39m: jwt expired {"timestamp":"2024-06-11 11:37:13"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 11:51:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 11:51:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:17:26"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:17:26"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:18:53"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:18:53"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:20:16"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:20:16"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:28:42"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:28:42"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:34:45"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 12:34:45"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:14:24"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:14:24"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:14:43"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:14:43"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:14:58"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:14:58"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:15:00"}
[31merror[39m: rules.reduce is not a function {"timestamp":"2024-06-11 13:15:00"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:19:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:19:58"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:22:36"}
[31merror[39m: Could not find car {"timestamp":"2024-06-11 13:22:36"}
[31merror[39m: jwt expired {"timestamp":"2024-06-12 06:31:56"}
[31merror[39m: jwt expired {"timestamp":"2024-06-12 06:31:56"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:32:22"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:32:22"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:34:37"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:34:37"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:36:11"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:36:11"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:52:37"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 06:52:37"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:01:38"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:01:38"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:11:00"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:11:00"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:13:53"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:13:53"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:17:40"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:17:40"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:19:19"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 07:19:19"}
[31merror[39m: 
Invalid `prisma.violation.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    images: true,
    plate_info: true,
    ticket_info: true
  }
}

Argument `id` is missing. {"timestamp":"2024-06-12 09:16:03"}
[31merror[39m: 
Invalid `prisma.violation.findUnique()` invocation:

{
  where: {
+   id: Int
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    images: true,
    plate_info: true,
    ticket_info: true
  }
}

Argument `id` is missing. {"timestamp":"2024-06-12 09:16:03"}
[31merror[39m: 
Invalid `prisma.violation.findUnique()` invocation:

{
  where: {
    ticket_info: {
      ticket_number: undefined
    },
?   id?: Int,
?   AND?: ViolationWhereInput | ViolationWhereInput[],
?   OR?: ViolationWhereInput[],
?   NOT?: ViolationWhereInput | ViolationWhereInput[],
?   user_id?: IntFilter | Int,
?   ticket_comment?: StringFilter | String,
?   system_comment?: StringFilter | String,
?   place_id?: IntFilter | Int,
?   total_charge?: FloatFilter | Float,
?   is_car_registered?: BoolFilter | Boolean,
?   registered_car_id?: IntNullableFilter | Int | Null,
?   place_login_time?: StringFilter | String,
?   print_option?: StringFilter | String,
?   created_at?: StringFilter | String,
?   deleted_at?: StringNullableFilter | String | Null,
?   is_locked?: BoolFilter | Boolean,
?   session_id?: StringFilter | String,
?   created_by?: UserRelationFilter | UserWhereInput,
?   images?: ViolationImageListRelationFilter,
?   place?: PlaceRelationFilter | PlaceWhereInput,
?   plate_info?: PlateInfoNullableRelationFilter | PlateInfoWhereInput | Null,
?   registered_car?: CarNullableRelationFilter | CarWhereInput | Null,
?   rules?: ViolationRuleListRelationFilter
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    images: true,
    plate_info: true,
    ticket_info: true
  }
}

Argument `where` of type ViolationWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:16:37"}
[31merror[39m: 
Invalid `prisma.violation.findUnique()` invocation:

{
  where: {
    ticket_info: {
      ticket_number: undefined
    },
?   id?: Int,
?   AND?: ViolationWhereInput | ViolationWhereInput[],
?   OR?: ViolationWhereInput[],
?   NOT?: ViolationWhereInput | ViolationWhereInput[],
?   user_id?: IntFilter | Int,
?   ticket_comment?: StringFilter | String,
?   system_comment?: StringFilter | String,
?   place_id?: IntFilter | Int,
?   total_charge?: FloatFilter | Float,
?   is_car_registered?: BoolFilter | Boolean,
?   registered_car_id?: IntNullableFilter | Int | Null,
?   place_login_time?: StringFilter | String,
?   print_option?: StringFilter | String,
?   created_at?: StringFilter | String,
?   deleted_at?: StringNullableFilter | String | Null,
?   is_locked?: BoolFilter | Boolean,
?   session_id?: StringFilter | String,
?   created_by?: UserRelationFilter | UserWhereInput,
?   images?: ViolationImageListRelationFilter,
?   place?: PlaceRelationFilter | PlaceWhereInput,
?   plate_info?: PlateInfoNullableRelationFilter | PlateInfoWhereInput | Null,
?   registered_car?: CarNullableRelationFilter | CarWhereInput | Null,
?   rules?: ViolationRuleListRelationFilter
  },
  include: {
    place: true,
    created_by: true,
    registered_car: true,
    rules: {
      include: {
        extras_values: true
      }
    },
    images: true,
    plate_info: true,
    ticket_info: true
  }
}

Argument `where` of type ViolationWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:16:37"}
[31merror[39m: this.prisma.violation.find is not a function {"timestamp":"2024-06-12 09:17:08"}
[31merror[39m: this.prisma.violation.find is not a function {"timestamp":"2024-06-12 09:17:08"}
[31merror[39m: 
Invalid `prisma.ticketInfo.findUnique()` invocation:

{
  where: {
    ticket_number: undefined,
?   id?: Int,
?   violation_id?: Int,
?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   OR?: TicketInfoWhereInput[],
?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   ticket_image?: StringFilter | String,
?   print_option?: StringFilter | String,
?   payment_date?: StringNullableFilter | String | Null,
?   barcode_image?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   created_at?: StringFilter | String,
?   violation?: ViolationRelationFilter | ViolationWhereInput
  }
}

Argument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:21:47"}
[31merror[39m: 
Invalid `prisma.ticketInfo.findUnique()` invocation:

{
  where: {
    ticket_number: undefined,
?   id?: Int,
?   violation_id?: Int,
?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   OR?: TicketInfoWhereInput[],
?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   ticket_image?: StringFilter | String,
?   print_option?: StringFilter | String,
?   payment_date?: StringNullableFilter | String | Null,
?   barcode_image?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   created_at?: StringFilter | String,
?   violation?: ViolationRelationFilter | ViolationWhereInput
  }
}

Argument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:21:47"}
[31merror[39m: 
Invalid `prisma.ticketInfo.findUnique()` invocation:

{
  where: {
    ticket_number: undefined,
?   id?: Int,
?   violation_id?: Int,
?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   OR?: TicketInfoWhereInput[],
?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   ticket_image?: StringFilter | String,
?   print_option?: StringFilter | String,
?   payment_date?: StringNullableFilter | String | Null,
?   barcode_image?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   created_at?: StringFilter | String,
?   violation?: ViolationRelationFilter | ViolationWhereInput
  }
}

Argument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:22:08"}
[31merror[39m: 
Invalid `prisma.ticketInfo.findUnique()` invocation:

{
  where: {
    ticket_number: undefined,
?   id?: Int,
?   violation_id?: Int,
?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   OR?: TicketInfoWhereInput[],
?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],
?   ticket_image?: StringFilter | String,
?   print_option?: StringFilter | String,
?   payment_date?: StringNullableFilter | String | Null,
?   barcode_image?: StringFilter | String,
?   serial_number?: StringFilter | String,
?   created_at?: StringFilter | String,
?   violation?: ViolationRelationFilter | ViolationWhereInput
  }
}

Argument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?. {"timestamp":"2024-06-12 09:22:08"}
[31merror[39m: this.prisma.ticketInfo.find is not a function {"timestamp":"2024-06-12 09:22:36"}
[31merror[39m: this.prisma.ticketInfo.find is not a function {"timestamp":"2024-06-12 09:22:36"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 12:07:25"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 12:07:25"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 12:26:48"}
[31merror[39m: Could not find car {"timestamp":"2024-06-12 12:26:48"}
