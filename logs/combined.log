{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-08 01:25:10"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 01:25:10"}
{"level":"info","message":"rr37466","timestamp":"2023-12-08 01:25:10"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 01:25:10"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 01:52:41"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 01:52:41"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 01:52:41"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 02:50:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 02:50:06"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 02:50:06"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 03:04:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 03:04:01"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 03:04:01"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 03:05:31"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 03:05:31"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 03:05:31"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 18:40:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 18:40:08"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 18:40:08"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 18:41:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 18:41:37"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 18:41:37"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 18:42:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 18:42:01"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 18:42:01"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 19:09:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 19:09:45"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 19:09:45"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 19:12:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 19:12:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 19:12:46"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 19:39:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 19:39:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 19:39:46"}
{"level":"error","message":"(intermediate value).sort is not a function","timestamp":"2023-12-08 19:40:04"}
{"level":"error","message":"(intermediate value).sort is not a function","timestamp":"2023-12-08 19:40:32"}
{"level":"error","message":"(intermediate value).sort is not a function","timestamp":"2023-12-08 19:40:35"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:08:57"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:08:57"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:08:57"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:17:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:17:53"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:17:53"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:19:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:19:59"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:19:59"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:21:25"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:21:25"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:21:25"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:25:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:25:45"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:25:45"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:25:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:25:50"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:25:50"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:26:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:26:02"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:26:02"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:30:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:30:38"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:30:38"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:31:32"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:31:32"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:31:32"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:41:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:41:04"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:41:04"}
{"level":"info","message":"cv89557","timestamp":"2023-12-08 20:41:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-08 20:41:24"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-08 20:41:24"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 00:37:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 00:37:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 00:37:46"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 00:52:49"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 00:52:49"}
{"level":"info","message":"bb11111","timestamp":"2023-12-09 00:52:49"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 00:52:49"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:02:42"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:02:42"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:02:42"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:02:58"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:02:58"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:02:58"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:18:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:18:38"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:18:38"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:19:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:19:34"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:19:34"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:21:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:21:48"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:21:48"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:35:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:35:14"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:35:14"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:40:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:40:06"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:40:06"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:41:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:41:14"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:41:14"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 01:46:57"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 01:46:57"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 01:46:57"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 02:48:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 02:48:48"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 02:48:48"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:09:12"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:09:12"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:09:12"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:13:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:13:04"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:13:04"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:14:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:14:28"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:14:28"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:26:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:26:54"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:26:54"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:27:47"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:27:47"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:27:47"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:39:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:39:40"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:39:40"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:40:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:40:52"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:40:52"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:42:49"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:42:49"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:42:49"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:43:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:43:34"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:43:34"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:44:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:44:38"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:44:38"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:47:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:47:39"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:47:39"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:49:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:49:06"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:49:06"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:50:35"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:50:35"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:50:35"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:55:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:55:03"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:55:03"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:55:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:55:40"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:55:40"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:56:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:56:00"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:56:00"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 03:57:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 03:57:01"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 03:57:01"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 04:01:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 04:01:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 04:01:46"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 04:05:58"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 04:05:58"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 04:05:58"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 04:11:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 04:11:37"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 04:11:37"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 04:12:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 04:12:40"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 04:12:40"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 04:20:27"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 04:20:27"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 04:20:27"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:14:35"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:14:35"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:14:35"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:15:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:15:36"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:15:36"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:16:19"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:16:19"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:16:19"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:16:41"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:16:41"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:16:41"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:18:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:18:45"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:18:45"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:19:27"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:19:27"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:19:27"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:37:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:37:28"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:37:28"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 05:48:47"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 05:48:47"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 05:48:47"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:23:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 06:23:39"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:23:39"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:25:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 06:25:17"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:25:17"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:39:30"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:39:30"}
{"level":"info","message":"cc2","timestamp":"2023-12-09 06:39:30"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:39:30"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:43:10"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:43:10"}
{"level":"info","message":"cc2","timestamp":"2023-12-09 06:43:10"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:43:10"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:43:36"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:43:36"}
{"level":"info","message":"ååwwwww","timestamp":"2023-12-09 06:43:36"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:43:36"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:46:15"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:46:15"}
{"level":"info","message":"ks","timestamp":"2023-12-09 06:46:15"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:46:15"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:50:04"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:50:04"}
{"level":"info","message":"ii55555","timestamp":"2023-12-09 06:50:04"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:50:04"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 06:50:15"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:50:15"}
{"level":"info","message":"cc11111","timestamp":"2023-12-09 06:50:15"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:50:15"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2023-12-09 06:50:20"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:50:20"}
{"level":"info","message":"cc111111","timestamp":"2023-12-09 06:50:20"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:50:20"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 06:50:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 06:50:43"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 06:50:43"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 15:44:51"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 15:44:51"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 15:44:51"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 16:21:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 16:21:54"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 16:21:54"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 16:24:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 16:24:02"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 16:24:02"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 17:09:34"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-09 17:09:46"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 17:10:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 17:10:03"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 17:10:03"}
{"level":"info","message":"cv89557","timestamp":"2023-12-09 17:10:32"}
{"level":"info","message":"cv89558","timestamp":"2023-12-09 17:10:32"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-09 17:10:32"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 02:37:46"}
{"level":"info","message":"eb56625","timestamp":"2023-12-10 02:37:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 02:37:46"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:00:26"}
{"level":"info","message":"eb56625","timestamp":"2023-12-10 03:00:26"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:00:26"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:02:25"}
{"level":"info","message":"eb56625","timestamp":"2023-12-10 03:02:25"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:02:25"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:04:27"}
{"level":"info","message":"eb56625","timestamp":"2023-12-10 03:04:27"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:04:27"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:15:30"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 03:15:30"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:15:30"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:18:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 03:18:43"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:18:43"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 03:20:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 03:20:53"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 03:20:53"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 14:47:30"}
{"level":"info","message":"eb56625","timestamp":"2023-12-10 14:47:30"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 14:47:30"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 15:09:30"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 15:09:30"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 15:09:30"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 15:35:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 15:35:45"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 15:35:45"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2023-12-10 15:54:25"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 15:54:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-10 15:54:36"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 15:54:36"}
{"level":"info","message":"cv89557","timestamp":"2023-12-10 16:45:43"}
{"level":"info","message":"ed79446","timestamp":"2023-12-10 16:45:43"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-10 16:45:43"}
{"level":"error","message":"Rule validation failed: policy_time: Path `policy_time` is required.","timestamp":"2023-12-10 23:07:48"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 05:14:46"}
{"level":"info","message":"eb56625","timestamp":"2023-12-11 05:14:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 05:14:46"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 05:22:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 05:22:50"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 05:22:50"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-11 05:24:17"}
{"level":"error","message":"a is not defined","timestamp":"2023-12-11 06:27:09"}
{"level":"error","message":"s is not defined","timestamp":"2023-12-11 06:27:20"}
{"level":"error","message":"c is not defined","timestamp":"2023-12-11 06:27:22"}
{"level":"error","message":"Cannot read properties of undefined (reading 'listeners')","timestamp":"2023-12-11 06:30:23"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 16:08:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 16:08:52"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 16:08:52"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:36:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:36:06"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:36:06"}
{"level":"warn","message":{"brand":"PEUGEOT","color":"Grå","description":"Varebil kl 2","plate":"CV 89558","type":"KJORETOY","year":"2018"},"timestamp":"2023-12-11 18:38:45"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:38:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:38:45"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:38:45"}
{"level":"warn","message":"Grå","timestamp":"2023-12-11 18:39:06"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:39:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:39:06"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:39:06"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:45:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:45:24"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:45:24"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:47:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:47:34"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:47:34"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 18:54:57"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 18:54:57"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 18:54:57"}
{"level":"info","message":"cv89557","timestamp":"2023-12-11 19:05:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 19:05:34"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-11 19:05:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 19:10:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-11 19:10:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 06:40:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 06:40:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 06:56:31"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 06:56:31"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:04:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:04:04"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 07:04:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:04:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:04:48"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 07:04:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:06:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:06:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:10:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:10:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:12:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:12:04"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 07:12:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:12:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 07:12:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:20:07"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:20:07"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:26:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:26:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:28:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:28:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:29:42"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 15:29:42"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:05:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:05:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:21:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:21:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:24:58"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:24:58"}
{"level":"error","message":"Cannot populate path `registered_car_info/place` because it is not in your schema. Set the `strictPopulate` option to false to override.","timestamp":"2023-12-12 16:40:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:47:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:47:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:48:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:48:56"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 16:48:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:49:26"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:49:26"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 16:49:26"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:50:15"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:50:15"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-12 16:50:15"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:53:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:53:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:53:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 16:53:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 23:20:15"}
{"level":"info","message":"cv89558","timestamp":"2023-12-12 23:20:15"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 12:35:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 12:35:40"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-14 12:40:58"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-14 13:18:13"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:18:37"}
{"level":"info","message":"mm","timestamp":"2023-12-14 13:18:37"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:18:37"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:18:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:19:08"}
{"level":"info","message":"mm","timestamp":"2023-12-14 13:19:08"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:19:08"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:19:08"}
{"level":"error","message":"Cannot read properties of undefined (reading '0')","timestamp":"2023-12-14 13:19:16"}
{"level":"error","message":"Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr')","timestamp":"2023-12-14 13:19:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr')","timestamp":"2023-12-14 13:21:33"}
{"level":"error","message":"Cannot read properties of undefined (reading 'nasjonaltGodkjenningsAr')","timestamp":"2023-12-14 13:21:40"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:21:46"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:26:34"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:26:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:26:52"}
{"level":"info","message":"mm","timestamp":"2023-12-14 13:26:52"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:26:52"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:26:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:32:38"}
{"level":"info","message":"mm","timestamp":"2023-12-14 13:32:38"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:32:38"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:32:38"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:36:18"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:36:24"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:49:30"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:49:30"}
{"level":"info","message":"gg","timestamp":"2023-12-14 13:49:30"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:49:30"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:49:30"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 13:59:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 13:59:59"}
{"level":"info","message":"gg","timestamp":"2023-12-14 13:59:59"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 13:59:59"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 13:59:59"}
{"level":"error","message":"result.status is not a function","timestamp":"2023-12-14 14:35:51"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-14 17:14:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-14 17:14:54"}
{"level":"info","message":"gg","timestamp":"2023-12-14 17:14:54"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-14 17:14:54"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-14 17:14:54"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 17:15:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 17:15:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 17:19:33"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 17:19:33"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 17:21:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 17:21:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 17:37:58"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 17:37:58"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 17:38:52"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 17:38:52"}
{"level":"error","message":"Violation validation failed: plate_info.color: Path `plate_info.color` is required., plate_info.type: Path `plate_info.type` is required., plate_info.description: Path `plate_info.description` is required., plate_info.year: Path `plate_info.year` is required., plate_info.plate: Path `plate_info.plate` is required., plate_info.brand: Path `plate_info.brand` is required.","timestamp":"2023-12-14 17:44:16"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 18:06:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 18:06:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 18:35:29"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 18:35:29"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 18:35:52"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Violation\"","timestamp":"2023-12-14 18:35:52"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 22:08:57"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 22:56:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 23:15:37"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 23:18:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 23:19:59"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 23:22:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-14 23:38:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 01:47:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 02:06:39"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 02:10:11"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 02:11:28"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 04:51:25"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 05:32:31"}
{"level":"error","message":"Violation validation failed: rules.0: Cast to [ObjectId] failed for value \"[\\n' +\n  '  {\\n' +\n  `    name: \"2 - Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\",\\n` +\n  '    charge: 100,\\n' +\n  '    id: null,\\n' +\n  '    time_policy: 30\\n' +\n  '  }\\n' +\n  ']\" (type string) at path \"rules.0\" because of \"CastError\"","timestamp":"2023-12-15 08:27:19"}
{"level":"error","message":"Violation validation failed: rules.0.policy_time: Path `policy_time` is required.","timestamp":"2023-12-15 08:29:31"}
{"level":"error","message":"Cast to [undefined] failed for value \"[ new ObjectId('657bf3020ae1a6c090d27922') ]\" (type string) at path \"rules.0\" because of \"TypeError\"","timestamp":"2023-12-15 08:32:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 08:37:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 08:37:02"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 08:37:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 09:48:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 10:01:11"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 10:01:59"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 10:03:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 10:04:04"}
{"level":"error","message":"this.splitPath is not a function","timestamp":"2023-12-15 10:12:36"}
{"level":"error","message":"Class constructor ObjectId cannot be invoked without 'new'","timestamp":"2023-12-15 10:12:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 10:58:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 10:58:09"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 10:58:09"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 18:46:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 18:49:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 18:55:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 18:55:17"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 18:55:17"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-15 19:02:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:02:05"}
{"level":"info","message":"gg","timestamp":"2023-12-15 19:02:05"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-15 19:02:05"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:02:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:03:27"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:03:27"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:03:27"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:13:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:13:00"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:13:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:31:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:31:02"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:31:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 19:35:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:41:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:41:44"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:41:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:47:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 19:47:54"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 19:47:54"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 19:49:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 19:50:25"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:01:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:01:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:02:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:02:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 20:03:13"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:09:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 20:09:34"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 20:09:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 20:09:46"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:15:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:18:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:18:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:22:05"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:22:22"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:54:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:55:27"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:55:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:56:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:56:17"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 21:56:17"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:56:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:56:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:58:49"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:59:06"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 21:59:06"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-15 21:59:06"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 21:59:15"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 23:39:49"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:40:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 23:41:04"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:41:57"}
{"level":"info","message":"cv89558","timestamp":"2023-12-15 23:41:57"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 23:43:09"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-15 23:46:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:09:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:15:16"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:20:33"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:25:10"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:25:32"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:25:32"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:26:12"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:26:12"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:28:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:28:20"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:31:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:31:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:31:14"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:32:11"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:35:33"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:36:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 00:36:50"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-16 00:36:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 00:37:16"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 01:06:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 01:07:15"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 01:07:15"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 01:08:11"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 01:08:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 01:08:52"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 01:10:20"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 01:34:08"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 08:28:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:29:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:29:02"}
{"level":"error","message":"No violation was found","timestamp":"2023-12-16 08:29:02"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 08:29:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:35:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:35:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:19"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:19"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:39:39"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 08:39:46"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 08:42:46"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 08:49:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:54:33"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 08:54:33"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:07:39"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:10:51"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:11:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:11:05"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:15:13"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:15:20"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:17:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:17:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:17:52"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:17:57"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:18:51"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:19:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:19:27"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:19:41"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:19:41"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:19:45"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:29:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:29:11"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 09:29:11"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 09:30:27"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 11:31:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:40:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:40:53"}
{"level":"error","message":"Violation validation failed: rules.0.policy_time: Path `policy_time` is required.","timestamp":"2023-12-16 11:43:29"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 11:43:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:44:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:44:17"}
{"level":"error","message":"Violation validation failed: rules.0.policy_time: Path `policy_time` is required.","timestamp":"2023-12-16 11:44:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 11:46:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:47:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:47:34"}
{"level":"error","message":"Violation validation failed: rules.0.policy_time: Path `policy_time` is required.","timestamp":"2023-12-16 11:47:59"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 11:51:30"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:51:54"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 11:51:54"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 12:04:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 12:15:37"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 12:15:37"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 21:50:26"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 21:52:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 22:03:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 22:07:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 22:15:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-16 22:15:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 23:17:03"}
{"level":"info","message":"cv89558","timestamp":"2023-12-16 23:17:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 08:15:28"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 08:16:25"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 08:22:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 08:22:14"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 12:02:22"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 12:03:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 12:11:52"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:13:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:13:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"plate\" (type string) at path \"_id\" for model \"Car\"","timestamp":"2023-12-17 12:13:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:16:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:16:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:16:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:16:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:17:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:17:09"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:17:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:17:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:25:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:25:44"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:31:50"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 12:31:50"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2023-12-17 16:55:18"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2023-12-17 16:55:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:55:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:55:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:55:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:55:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:56:53"}
{"level":"info","message":"cv98558","timestamp":"2023-12-17 16:56:53"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-17 16:56:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:58:10"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 16:58:10"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 17:52:42"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 17:52:42"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 18:04:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-17 18:04:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 06:20:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 06:20:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 06:21:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 06:21:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:20:05"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:20:05"}
{"level":"error","message":"Violation validation failed: images: Cast to embedded failed for value \"http://10.0.2.2:3000/public\\\\images\\\\cars\\\\2023-12-18_1702876793743_156868406.png\" (type string) at path \"images\" because of \"ObjectParameterError\"","timestamp":"2023-12-18 07:20:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:28:23"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:28:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split')","timestamp":"2023-12-18 07:28:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:33:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:33:08"}
{"level":"error","message":"Cannot read properties of undefined (reading 'split')","timestamp":"2023-12-18 07:33:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:35:13"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:35:13"}
{"level":"error","message":"date is not defined","timestamp":"2023-12-18 07:35:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:35:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:35:59"}
{"level":"error","message":"Autosys server error","timestamp":"2023-12-18 07:43:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:43:20"}
{"level":"info","message":"89558","timestamp":"2023-12-18 07:43:20"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-18 07:43:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:43:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:43:29"}
{"level":"error","message":"pre_data.images is not iterable","timestamp":"2023-12-18 07:43:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:45:14"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:45:14"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2023-12-18 07:45:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:50:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:50:00"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:59:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 07:59:34"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 08:04:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 08:04:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 08:13:23"}
{"level":"info","message":"cv89558","timestamp":"2023-12-18 08:13:23"}
{"level":"error","message":"ENOENT: no such file or directory, open '../app_templates/violation.html'","timestamp":"2023-12-21 16:44:25"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 16:30:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 16:30:40"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2023-12-23 16:56:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 16:56:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 16:56:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:04:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:04:59"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:17:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:17:29"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:20:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:20:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:21:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:21:36"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:23:51"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:23:51"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:27:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:27:39"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:30:18"}
{"level":"info","message":"cv89558","timestamp":"2023-12-23 17:30:18"}
{"level":"error","message":"Parse error on line 26:\n...                {{/#each}}\r           \n----------------------^\nExpecting 'ID', 'STRING', 'NUMBER', 'BOOLEAN', 'UNDEFINED', 'NULL', 'DATA', got 'INVALID'","timestamp":"2023-12-23 22:40:15"}
{"level":"error","message":"static_files_host is not defined","timestamp":"2023-12-23 22:40:54"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\sjekk_kontroll\\sjekk_server\\http:\\10.0.2.2:3000\\public\\reports\\Fde1C9xAXL_232023.12.23 22:41.pdf'","timestamp":"2023-12-23 22:41:22"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\public\\reports\\OwGH83Iwsq_232023.12.23 22:43.pdf'","timestamp":"2023-12-23 22:43:21"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\sjekk_kontroll\\public\\reports\\h8hq7CpjeM_232023.12.23 22:43.pdf'","timestamp":"2023-12-23 22:43:43"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:19:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:19:01"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:28:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:28:48"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:30:02"}
{"level":"info","message":"cv89558","timestamp":"2023-12-24 03:30:02"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\read.ejs:70\n    68|                                 </thead>\r\n    69|                                 <tbody>\r\n >> 70|                                     <% users.forEach(user => { %>\r\n    71|                                         <tr>\r\n    72|                                             <td><%= user.name %></td>\r\n    73|                                             <td><%= user.user_identifier %></td>\r\n\nusers is not defined","timestamp":"2023-12-26 11:42:03"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\read.ejs:68\n    66|                                 </thead>\r\n    67|                                 <tbody>\r\n >> 68|                                     <% violations.forEach(violation => { %>\r\n    69|                                         <tr>\r\n    70|                                             <td><%= violation.name %></td>\r\n    71|                                             <td class=\"controls\">\r\n\nviolations is not defined","timestamp":"2023-12-26 11:57:24"}
{"level":"error","message":"Unexpected token ')' in E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs while compiling ejs\n\nIf the above error is not helpful, you may want to try EJS-Lint:\nhttps://github.com/RyanZim/EJS-Lint\nOr, if you meant to create an async function, pass `async: true` as an option.","timestamp":"2023-12-26 12:05:18"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:32\n    30| \r\n    31|                         <h3 class=\"title\">KID number</h3>\r\n >> 32|                         <div><%= kid_number %></div>\r\n    33|                     </div>\r\n    34|                 </div>\r\n    35|             </div>\r\n\nkid_number is not defined","timestamp":"2023-12-26 13:08:50"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:32\n    30| \r\n    31|                         <h3 class=\"title\">KID number</h3>\r\n >> 32|                         <div><%= kid_number %></div>\r\n    33|                     </div>\r\n    34|                 </div>\r\n    35|             </div>\r\n\nkid_number is not defined","timestamp":"2023-12-26 13:08:51"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:32\n    30| \r\n    31|                         <h3 class=\"title\">KID number</h3>\r\n >> 32|                         <div><%= kid_number %></div>\r\n    33|                     </div>\r\n    34|                 </div>\r\n    35|             </div>\r\n\nkid_number is not defined","timestamp":"2023-12-26 13:08:51"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:32\n    30| \r\n    31|                         <h3 class=\"title\">KID number</h3>\r\n >> 32|                         <div><%= kid_number %></div>\r\n    33|                     </div>\r\n    34|                 </div>\r\n    35|             </div>\r\n\nkid_number is not defined","timestamp":"2023-12-26 13:09:01"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:32\n    30| \r\n    31|                         <h3 class=\"title\">KID number</h3>\r\n >> 32|                         <div><%= kid_number %></div>\r\n    33|                     </div>\r\n    34|                 </div>\r\n    35|             </div>\r\n\nkid_number is not defined","timestamp":"2023-12-26 13:09:05"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:58\n    56|                                 <div class=\"info-block\">\r\n    57|                                     <h3 class=\"title\">Fra</h3>\r\n >> 58|                                     <div><%= from_date %></div>\r\n    59|                                 </div>\r\n    60|                             </div>\r\n    61|                             <div class=\"col-lg-6\">\r\n\nfrom_date is not defined","timestamp":"2023-12-26 13:22:54"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:58\n    56|                                 <div class=\"info-block\">\r\n    57|                                     <h3 class=\"title\">Fra</h3>\r\n >> 58|                                     <div><%= from_date %></div>\r\n    59|                                 </div>\r\n    60|                             </div>\r\n    61|                             <div class=\"col-lg-6\">\r\n\nfrom_date is not defined","timestamp":"2023-12-26 13:22:54"}
{"level":"error","message":"E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs:58\n    56|                                 <div class=\"info-block\">\r\n    57|                                     <h3 class=\"title\">Fra</h3>\r\n >> 58|                                     <div><%= from_date %></div>\r\n    59|                                 </div>\r\n    60|                             </div>\r\n    61|                             <div class=\"col-lg-6\">\r\n\nfrom_date is not defined","timestamp":"2023-12-26 13:22:54"}
{"level":"error","message":"Unexpected token ')' in E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs while compiling ejs\n\nIf the above error is not helpful, you may want to try EJS-Lint:\nhttps://github.com/RyanZim/EJS-Lint\nOr, if you meant to create an async function, pass `async: true` as an option.","timestamp":"2023-12-26 13:42:23"}
{"level":"error","message":"Unexpected token ')' in E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs while compiling ejs\n\nIf the above error is not helpful, you may want to try EJS-Lint:\nhttps://github.com/RyanZim/EJS-Lint\nOr, if you meant to create an async function, pass `async: true` as an option.","timestamp":"2023-12-26 13:42:24"}
{"level":"error","message":"Unexpected token ')' in E:\\workspace\\sjekk_kontroll\\sjekk_server\\views\\violations\\view_violation.ejs while compiling ejs\n\nIf the above error is not helpful, you may want to try EJS-Lint:\nhttps://github.com/RyanZim/EJS-Lint\nOr, if you meant to create an async function, pass `async: true` as an option.","timestamp":"2023-12-26 13:42:28"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 14:55:07"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 14:55:07"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 15:59:57"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 15:59:57"}
{"level":"error","timestamp":"2023-12-26 16:02:12"}
{"level":"error","timestamp":"2023-12-26 16:03:12"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 16:03:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 16:03:56"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 16:05:08"}
{"level":"info","message":"cv89558","timestamp":"2023-12-26 16:05:08"}
{"level":"error","timestamp":"2023-12-26 16:05:21"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\sjekk_kontroll\\sjekk_server\\public\\images\\temp_cars\\1703595288803_117025211.png'","timestamp":"2023-12-26 16:23:45"}
{"level":"error","message":"Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required.","timestamp":"2023-12-26 16:24:36"}
{"level":"error","message":"Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required.","timestamp":"2023-12-26 16:25:31"}
{"level":"error","message":"Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required., images.4.path: Path `path` is required.","timestamp":"2023-12-26 16:26:36"}
{"level":"error","message":"Violation validation failed: images.0.path: Path `path` is required., images.1.path: Path `path` is required., images.2.path: Path `path` is required., images.3.path: Path `path` is required., images.4.path: Path `path` is required., images.5.path: Path `path` is required.","timestamp":"2023-12-26 16:28:52"}
{"level":"error","message":"r.name.split(...)[1].join is not a function","timestamp":"2023-12-26 21:35:54"}
{"level":"error","message":"r.name.split(...)[1].join is not a function","timestamp":"2023-12-26 21:36:38"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:25:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:25:40"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2023-12-27 12:36:24"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:37:47"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:37:47"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:38:46"}
{"level":"info","message":"cv89559","timestamp":"2023-12-27 12:38:46"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-27 12:38:46"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 12:40:53"}
{"level":"info","message":"cv89559","timestamp":"2023-12-27 12:40:53"}
{"level":"error","message":"Could not find car","timestamp":"2023-12-27 12:40:53"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 15:44:33"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 15:44:33"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 16:05:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 16:05:20"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 16:12:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 16:12:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 17:01:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-27 17:01:45"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:17"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:58"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:09:58"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:10:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:10:40"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:22:22"}
{"level":"info","message":"cv89558","timestamp":"2023-12-28 17:22:22"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-01-16 16:34:45"}
{"level":"info","message":"cv89558","timestamp":"2024-01-16 16:34:45"}
{"level":"info","message":"cv89558","timestamp":"2024-01-16 16:34:45"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-01-16 16:35:33"}
{"level":"info","message":"cv89558","timestamp":"2024-01-16 16:35:33"}
{"level":"info","message":"cv89558","timestamp":"2024-01-16 16:35:33"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:14:11"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:14:11"}
{"level":"error","message":"Cannot read properties of null (reading 'user_identifier')","timestamp":"2024-01-17 10:19:56"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:29:21"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:29:21"}
{"level":"error","message":"Violation validation failed: rules.0._id: Cast to ObjectId failed for value \"1\" (type string) at path \"_id\" because of \"BSONError\"","timestamp":"2024-01-17 10:35:09"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:41:04"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:41:04"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:47:10"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 10:47:10"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 17:10:24"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 17:10:24"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 17:13:05"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 17:13:05"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 21:04:59"}
{"level":"info","message":"cv89558","timestamp":"2024-01-17 21:04:59"}
{"level":"error","message":"Please provide identifier and password","timestamp":"2024-01-18 11:14:25"}
{"level":"error","message":"Please provide identifier and password","timestamp":"2024-01-18 11:14:59"}
{"level":"error","message":"Please provide identifier and password","timestamp":"2024-01-18 11:15:03"}
{"level":"error","message":"Rule validation failed: extras.meter_receipt_number: Tried to set nested object field `extras.$*` to primitive value `123`, extras.meter_number: Tried to set nested object field `extras.$*` to primitive value `456`, extras.expiry_date: Tried to set nested object field `extras.$*` to primitive value `1705657483066`, extras.paid_date: Tried to set nested object field `extras.$*` to primitive value `123`","timestamp":"2024-01-19 11:44:43"}
{"level":"error","message":"Rule validation failed: extras.meter_receipt_number: Tried to set nested object field `extras.$*` to primitive value `123`, extras.meter_number: Tried to set nested object field `extras.$*` to primitive value `456`, extras.expiry_date: Tried to set nested object field `extras.$*` to primitive value `1705657500145`, extras.paid_date: Tried to set nested object field `extras.$*` to primitive value `now`","timestamp":"2024-01-19 11:45:00"}
{"level":"error","message":"Rule validation failed: extras.meter_receipt_number: Cast to Boolean failed for value \"123\" (type string) at path \"extras.meter_receipt_number\" because of \"CastError\", extras.meter_number: Cast to Boolean failed for value \"456\" (type string) at path \"extras.meter_number\" because of \"CastError\", extras.expiry_date: Cast to Boolean failed for value \"1705659105494\" (type string) at path \"extras.expiry_date\" because of \"CastError\", extras.paid_date: Cast to Boolean failed for value \"now\" (type string) at path \"extras.paid_date\" because of \"CastError\"","timestamp":"2024-01-19 12:11:45"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 13:48:21"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 13:48:21"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 14:37:27"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 14:37:27"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 14:42:15"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 14:42:15"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-01-19 15:21:39"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:21:40"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:21:40"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:29:23"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:29:23"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:29:32"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:29:32"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:34:33"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:34:33"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:36:16"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 15:36:16"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 16:12:24"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 16:12:24"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 17:31:51"}
{"level":"info","message":"cv89558","timestamp":"2024-01-19 17:31:51"}
{"level":"error","message":"getaddrinfo EAI_AGAIN www.vegvesen.no","timestamp":"2024-01-20 12:51:38"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 12:51:38"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 12:51:38"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 12:52:26"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 12:52:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 12:53:24"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:17:22"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:17:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:18:08"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:18:45"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:18:54"}
{"level":"error","message":"Cannot read properties of undefined (reading 'rules')","timestamp":"2024-01-20 21:19:54"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 21:21:16"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 21:21:16"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 22:21:30"}
{"level":"info","message":"cv89558","timestamp":"2024-01-20 22:21:30"}
{"level":"error","message":"Cast to ObjectId failed for value \"xc\" (type string) at path \"_id\" for model \"Place\"","timestamp":"2024-01-26 03:58:57"}
{"level":"error","message":"Cast to ObjectId failed for value \"xc\" (type string) at path \"_id\" for model \"Place\"","timestamp":"2024-01-26 03:58:57"}
{"level":"error","message":"Rule validation failed: charge: Cast to Number failed for value \"x\" (type string) at path \"charge\", policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:26:51"}
{"level":"error","message":"Rule validation failed: charge: Cast to Number failed for value \"x\" (type string) at path \"charge\", policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:26:51"}
{"level":"error","message":"Rule validation failed: charge: Cast to Number failed for value \"x\" (type string) at path \"charge\", policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:27:22"}
{"level":"error","message":"Rule validation failed: charge: Cast to Number failed for value \"x\" (type string) at path \"charge\", policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:27:22"}
{"level":"error","message":"Rule validation failed: policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:28:06"}
{"level":"error","message":"Rule validation failed: policy_time: Cast to Number failed for value \"x\" (type string) at path \"policy_time\"","timestamp":"2024-01-26 19:28:06"}
{"level":"error","message":"Autosys server error","timestamp":"2024-01-27 01:22:12"}
{"level":"error","message":"Autosys server error","timestamp":"2024-01-27 01:22:12"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-01-27 02:05:13"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-01-27 02:05:13"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 02:59:06"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 02:59:06"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 02:59:36"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 02:59:36"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:05"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:05"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:09"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:09"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:14"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:14"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:17"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:17"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:18"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:18"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-27 16:23:19"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:54"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:54"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:54"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:54"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:57"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:57"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:57"}
{"level":"error","message":"FORBIDDEN is not defined","timestamp":"2024-01-28 05:10:57"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:39"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:39"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:41"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:41"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:43"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:43"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:49"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:11:49"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:04"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:12"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:28"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:28"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:54"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:54"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:57"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:12:57"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:30"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:30"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:35"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:35"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:38"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:38"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:49"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:49"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:54"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:13:54"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:00"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:00"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:14"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:14"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:28"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:14:28"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:03"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:03"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:22"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:25"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:35"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:15:42"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:17:14"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:17:32"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:17:39"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:20:35"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:21:55"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:22:19"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:23:52"}
{"level":"error","message":"Please provide api token","timestamp":"2024-01-28 05:25:07"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"info","message":"cv89558","timestamp":"2024-02-05 09:47:48"}
{"level":"error","message":"result is not defined","timestamp":"2024-02-06 08:15:26"}
{"level":"error","message":"result is not defined","timestamp":"2024-02-06 08:15:26"}
{"level":"error","message":"PlaceProfile validation failed: updated_at: Path `updated_at` is required., created_at: Path `created_at` is required.","timestamp":"2024-02-06 08:16:57"}
{"level":"error","message":"PlaceProfile validation failed: updated_at: Path `updated_at` is required., created_at: Path `created_at` is required.","timestamp":"2024-02-06 08:16:57"}
{"level":"error","message":"Cast to ObjectId failed for value \":client\" (type string) at path \"_id\" for model \"PlaceProfile\"","timestamp":"2024-02-06 10:49:04"}
{"level":"error","message":"Cast to ObjectId failed for value \":client\" (type string) at path \"_id\" for model \"PlaceProfile\"","timestamp":"2024-02-06 10:49:04"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 11:55:19"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 11:55:19"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 12:03:06"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 12:03:06"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 12:03:39"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-02-06 12:03:39"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-02-06 12:07:25"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-02-06 12:07:25"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-02-06 12:07:51"}
{"level":"error","message":"getaddrinfo ENOTFOUND www.vegvesen.no","timestamp":"2024-02-06 12:07:51"}
{"level":"info","message":"cv89558","timestamp":"2024-02-07 12:55:23"}
{"level":"info","message":"cv89558","timestamp":"2024-02-07 12:55:23"}
{"level":"error","message":"Car validation failed: plate_number: Path `plate_number` is required., registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:17:32"}
{"level":"error","message":"Car validation failed: plate_number: Path `plate_number` is required., registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:17:32"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:18:50"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:18:50"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:19:28"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-07 14:19:28"}
{"level":"error","message":"car is not defined","timestamp":"2024-02-07 21:47:55"}
{"level":"error","message":"car is not defined","timestamp":"2024-02-07 21:47:55"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:27:00"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:27:00"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:27:04"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:27:04"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:28:56"}
{"level":"error","message":"Schema hasn't been registered for model \"ParkingProvider\".\nUse mongoose.model(name, schema)","timestamp":"2024-02-08 00:28:56"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:35:57"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:35:57"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:41:36"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:41:36"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:42:08"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-09 11:42:08"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-11 15:23:06"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-11 15:23:06"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 04:54:46"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 04:54:46"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:00:09"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:00:09"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:00:24"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:00:24"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:08:53"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:08:53"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:09:17"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:09:17"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:10:11"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 05:10:11"}
{"level":"error","message":"CarLogModel is not defined","timestamp":"2024-02-15 05:14:39"}
{"level":"error","message":"CarLogModel is not defined","timestamp":"2024-02-15 05:14:39"}
{"level":"error","message":"CarLog validation failed: registeration_data.gateway: Path `registeration_data.gateway` is required.","timestamp":"2024-02-15 05:15:06"}
{"level":"error","message":"CarLog validation failed: registeration_data.gateway: Path `registeration_data.gateway` is required.","timestamp":"2024-02-15 05:15:06"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:30:05"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:30:05"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:30:51"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:30:51"}
{"level":"error","message":"Access code not provided","timestamp":"2024-02-15 05:31:20"}
{"level":"error","message":"Access code not provided","timestamp":"2024-02-15 05:31:46"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:32:05"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:32:05"}
{"level":"error","message":"jwt is not defined","timestamp":"2024-02-15 05:32:55"}
{"level":"error","message":"jwt is not defined","timestamp":"2024-02-15 05:32:55"}
{"level":"error","message":"jwt_secret_key is not defined","timestamp":"2024-02-15 05:33:23"}
{"level":"error","message":"jwt_secret_key is not defined","timestamp":"2024-02-15 05:33:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"null\" (type string) at path \"_id\" for model \"PlaceProfile\"","timestamp":"2024-02-15 05:41:05"}
{"level":"error","message":"Cast to ObjectId failed for value \"null\" (type string) at path \"_id\" for model \"PlaceProfile\"","timestamp":"2024-02-15 05:41:05"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:42:15"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:42:15"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:43:21"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 05:43:21"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-02-15 06:01:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-02-15 06:01:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-02-15 06:01:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-02-15 06:01:56"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 06:36:34"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-02-15 06:36:34"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 06:38:00"}
{"level":"error","message":"Car is already registered","timestamp":"2024-02-15 06:38:00"}
{"level":"error","message":"logs is not iterable","timestamp":"2024-02-15 07:19:38"}
{"level":"error","message":"logs is not iterable","timestamp":"2024-02-15 07:19:38"}
{"level":"error","message":"data is not defined","timestamp":"2024-02-15 07:19:58"}
{"level":"error","message":"data is not defined","timestamp":"2024-02-15 07:19:58"}
{"level":"error","message":"data is not defined","timestamp":"2024-02-15 07:20:14"}
{"level":"error","message":"data is not defined","timestamp":"2024-02-15 07:20:14"}
{"level":"error","message":"fs is not defined","timestamp":"2024-02-15 07:22:08"}
{"level":"error","message":"fs is not defined","timestamp":"2024-02-15 07:22:08"}
{"level":"error","message":"Handlebars is not defined","timestamp":"2024-02-15 07:22:26"}
{"level":"error","message":"Handlebars is not defined","timestamp":"2024-02-15 07:22:26"}
{"level":"error","message":"compiledViolationTemplate is not defined","timestamp":"2024-02-15 07:23:02"}
{"level":"error","message":"compiledViolationTemplate is not defined","timestamp":"2024-02-15 07:23:02"}
{"level":"error","message":"path is not defined","timestamp":"2024-02-15 07:23:16"}
{"level":"error","message":"path is not defined","timestamp":"2024-02-15 07:23:16"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\projects\\sjekk_kontroll\\sjekk_server\\public\\car_log_reports\\0.5778222907593731.png'","timestamp":"2024-02-15 07:34:28"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\projects\\sjekk_kontroll\\sjekk_server\\public\\car_log_reports\\0.5778222907593731.png'","timestamp":"2024-02-15 07:34:28"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\projects\\sjekk_kontroll\\sjekk_server\\public\\car_log_reports\\0.5790703834016164.png'","timestamp":"2024-02-15 07:34:47"}
{"level":"error","message":"ENOENT: no such file or directory, open 'E:\\workspace\\projects\\sjekk_kontroll\\sjekk_server\\public\\car_log_reports\\0.5790703834016164.png'","timestamp":"2024-02-15 07:34:47"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-02-15 07:39:37"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-02-15 07:39:37"}
{"level":"error","message":"waitTillHTMLRendered is not defined","timestamp":"2024-02-15 08:22:15"}
{"level":"error","message":"waitTillHTMLRendered is not defined","timestamp":"2024-02-15 08:22:15"}
{"level":"error","message":"Cannot read properties of undefined (reading 'startsWith')","timestamp":"2024-02-15 18:59:56"}
{"level":"error","message":"Cannot read properties of undefined (reading 'startsWith')","timestamp":"2024-02-15 18:59:56"}
{"level":"error","message":"Cannot read properties of undefined (reading 'startsWith')","timestamp":"2024-02-15 19:02:22"}
{"level":"error","message":"Cannot read properties of undefined (reading 'startsWith')","timestamp":"2024-02-15 19:02:22"}
{"level":"error","message":"PartnerPlaceCreationRequest validation failed: place_creation_details.code: Path `place_creation_details.code` is required., place_creation_details.policy: Path `place_creation_details.policy` is required., place_creation_details.location: Path `place_creation_details.location` is required., requested_by: Path `requested_by` is required.","timestamp":"2024-02-19 17:12:37"}
{"level":"error","message":"PartnerPlaceCreationRequest validation failed: place_creation_details.code: Path `place_creation_details.code` is required., place_creation_details.policy: Path `place_creation_details.policy` is required., place_creation_details.location: Path `place_creation_details.location` is required., requested_by: Path `requested_by` is required.","timestamp":"2024-02-19 17:12:37"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-19 17:48:34"}
{"level":"error","message":"Car validation failed: registeration_source: Path `registeration_source` is required.","timestamp":"2024-02-19 17:48:34"}
{"level":"error","message":"PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required.","timestamp":"2024-02-21 11:23:36"}
{"level":"error","message":"PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required.","timestamp":"2024-02-21 11:23:36"}
{"level":"error","message":"PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required.","timestamp":"2024-02-21 11:24:34"}
{"level":"error","message":"PartnerPlaceDeletionRequest validation failed: requested_place_id: Path `requested_place_id` is required.","timestamp":"2024-02-21 11:24:34"}
{"level":"error","message":"Request Not Found","timestamp":"2024-02-21 13:03:10"}
{"level":"error","message":"Request Not Found","timestamp":"2024-02-21 13:03:10"}
{"level":"error","message":"lib is not defined","timestamp":"2024-05-25 14:35:34"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:17:22"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:17:22"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:17:23"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:17:23"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:59:17"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:59:17"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:59:53"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 15:59:53"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:02:13"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:02:13"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:02:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:02:59"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:01"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:01"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:03"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:03"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:11"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:11"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:52"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:03:52"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:04:24"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:04:24"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:15:41"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:15:41"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:24"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:24"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:34"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:16:34"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:31"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:31"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:41"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:41"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:51"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:17:51"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:01"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:01"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:11"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:11"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:21"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:21"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:30"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:30"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:18:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:02"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:02"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:05"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:05"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:08"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:08"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:12"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:12"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:15"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:15"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:26"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:26"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:36"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:36"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:46"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:46"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:19:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:04"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:04"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:09"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:09"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:12"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:12"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:14"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:20:59"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:21:09"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:21:09"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:22:32"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:22:32"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:23:22"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:23:22"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:23:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:23:25"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:32"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:32"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:40"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:40"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:43"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:25:43"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:26:32"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:26:32"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:07"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:07"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:49"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:49"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:59"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:27:59"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:28:22"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:28:22"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:28:24"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:28:24"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:22"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:22"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:24"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:24"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:43"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:43"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:46"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:29:46"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:31:43"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:31:43"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:33:49"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:33:49"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:33:59"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:33:59"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:34:51"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:34:51"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:38:32"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:38:32"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:40:11"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:40:11"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:44:13"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 16:44:13"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:11:41"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:11:41"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:25:48"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:25:48"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:25:58"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:25:58"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:10"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:10"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:14"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:14"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:15"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:15"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:20"}
{"level":"error","message":"Operation `users.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:20"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:24"}
{"level":"error","message":"Operation `cars.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 18:26:24"}
{"level":"error","message":"data is not defined","timestamp":"2024-05-25 19:26:11"}
{"level":"error","message":"data is not defined","timestamp":"2024-05-25 19:26:11"}
{"level":"error","message":"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    name: \"klage\",\n    pnid: \"ali\",\n    password: \"$2b$10$iUe.fdguLpBi.atioqwE7e7ijDUTP3AsQ755i2h3/YbDpCDGxE1IO\",\n    created_at: \"2024-05-25\",\n+   updated_at: String\n  }\n}\n\nArgument `updated_at` is missing.","timestamp":"2024-05-25 19:26:27"}
{"level":"error","message":"\nInvalid `prisma.user.create()` invocation:\n\n{\n  data: {\n    name: \"klage\",\n    pnid: \"ali\",\n    password: \"$2b$10$iUe.fdguLpBi.atioqwE7e7ijDUTP3AsQ755i2h3/YbDpCDGxE1IO\",\n    created_at: \"2024-05-25\",\n+   updated_at: String\n  }\n}\n\nArgument `updated_at` is missing.","timestamp":"2024-05-25 19:26:27"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:28:27"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:28:27"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:30:17"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:30:17"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:31:05"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:31:05"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:31:35"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 19:31:35"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 22:49:33"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 22:49:33"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 22:50:25"}
{"level":"error","message":"\nInvalid `prisma.user.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"2024-05-25\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-25 22:50:25"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:20:24"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:20:24"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:25:47"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:25:47"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:27:22"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:27:22"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:28:35"}
{"level":"error","message":"Operation `rules.find()` buffering timed out after 10000ms","timestamp":"2024-05-25 23:28:35"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:40:56"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:40:56"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:45:04"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:45:04"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:48:51"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:48:51"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:50:43"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:50:43"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:50:45"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:50:45"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:58:39"}
{"level":"error","message":"Operation `users.countDocuments()` buffering timed out after 10000ms","timestamp":"2024-05-27 01:58:39"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:07"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:07"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:35"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:35"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:45"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:45"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:55"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:05:55"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:01"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:01"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:15"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:15"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:25"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:25"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:35"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:35"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:44"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:44"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:58"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:06:58"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:10"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:10"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:20"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:20"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:30"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:30"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:40"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:40"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:50"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:50"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:56"}
{"level":"error","message":"Operation `places.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:07:56"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:48:44"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:48:44"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:25"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:25"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:46"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:46"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:56"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:49:56"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:06"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:06"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:16"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:16"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:26"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:26"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:36"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:36"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:46"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:46"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:55"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:55"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:56"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:50:56"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:51:03"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:51:03"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:52:33"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:52:33"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:53:19"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:53:19"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:15"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:15"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:25"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:25"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:37"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:37"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:47"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:47"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:57"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:54:57"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:12"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:12"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:21"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:21"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:27"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:27"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:31"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:31"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:37"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:37"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:47"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:47"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:57"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:55:57"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:07"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:10"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:10"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:12"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:12"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:14"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:14"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:17"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:27"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:27"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:54"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 05:56:54"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  name: \"Ali Tarek\",\n  ~~~~\n  email: \"alitarek99944@gmail.com\",\n  city: \"Alexandria\",\n  postal_code: \"5310002\",\n  address: \"N/A\",\n  other_address: \"N/A\",\n  fax_number: undefined,\n  phone_number: \"01150421159\",\n  created_at: \"27.05.2024 06:20\",\n? data?: PartnerCreateInput | PartnerUncheckedCreateInput\n}\n\nUnknown argument `name`. Did you mean `data`? Available options are marked with ?.","timestamp":"2024-05-27 06:20:43"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  name: \"Ali Tarek\",\n  ~~~~\n  email: \"alitarek99944@gmail.com\",\n  city: \"Alexandria\",\n  postal_code: \"5310002\",\n  address: \"N/A\",\n  other_address: \"N/A\",\n  fax_number: undefined,\n  phone_number: \"01150421159\",\n  created_at: \"27.05.2024 06:20\",\n? data?: PartnerCreateInput | PartnerUncheckedCreateInput\n}\n\nUnknown argument `name`. Did you mean `data`? Available options are marked with ?.","timestamp":"2024-05-27 06:20:43"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  data: {\n    name: \"Ali Tarek\",\n    email: \"alitarek99944@gmail.com\",\n    city: \"Alexandria\",\n    postal_code: \"5310002\",\n    address: \"N/A\",\n    other_address: \"N/A\",\n    fax_number: undefined,\n    phone_number: \"01150421159\",\n    created_at: \"27.05.2024 06:21\",\n+   updated_at: String\n  }\n}\n\nArgument `updated_at` is missing.","timestamp":"2024-05-27 06:21:21"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  data: {\n    name: \"Ali Tarek\",\n    email: \"alitarek99944@gmail.com\",\n    city: \"Alexandria\",\n    postal_code: \"5310002\",\n    address: \"N/A\",\n    other_address: \"N/A\",\n    fax_number: undefined,\n    phone_number: \"01150421159\",\n    created_at: \"27.05.2024 06:21\",\n+   updated_at: String\n  }\n}\n\nArgument `updated_at` is missing.","timestamp":"2024-05-27 06:21:21"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:23:21"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:23:21"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:23:23"}
{"level":"error","message":"Operation `partners.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:23:23"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"xc\",\n    policy: \"x\",\n    code: \"x\",\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-05-27 06:31:40"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"xc\",\n    policy: \"x\",\n    code: \"x\",\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-05-27 06:31:40"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:38:33"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:38:33"}
{"level":"error","message":"Operation `partnerplacedeletionrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:38:33"}
{"level":"error","message":"Operation `partnerplacedeletionrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 06:38:33"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:51:09"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:51:09"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:51:50"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:51:50"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:52:00"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:52:00"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:52:05"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 07:52:05"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 07:56:27"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 07:56:27"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 07:57:29"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 07:57:29"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:03:01"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:03:01"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:03:34"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:03:34"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:04:17"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:04:17"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:04:23"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:04:23"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:06:06"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:06:06"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:11:39"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:11:39"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:12:01"}
{"level":"error","message":"Request failed with status code 400","timestamp":"2024-05-27 08:12:01"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:12\",\n    registeration_type: \"tttttttt\",\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-05-27 08:12:21"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:12\",\n    registeration_type: \"tttttttt\",\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-05-27 08:12:21"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n              ~~~~~~~~~~\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:12\",\n    registeration_type: \"tttttttt\"\n  }\n}\n\nInvalid value for argument `car_type`. Expected CarType.","timestamp":"2024-05-27 08:12:48"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n              ~~~~~~~~~~\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:12\",\n    registeration_type: \"tttttttt\"\n  }\n}\n\nInvalid value for argument `car_type`. Expected CarType.","timestamp":"2024-05-27 08:12:48"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    ~~~~~~~~\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:20\",\n    registeration_type: \"tttttttt\",\n?   id?: Int,\n?   source_id?: Int | Null,\n?   free_parking_hours?: Int | Null\n  }\n}\n\nUnknown argument `car_type`. Available options are marked with ?.","timestamp":"2024-05-27 08:20:23"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    ~~~~~~~~\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-08T05:03:28.732Z\",\n    end_date: \"2024-05-31T05:03:30.648Z\",\n    created_at: \"27.05.2024 08:20\",\n    registeration_type: \"tttttttt\",\n?   id?: Int,\n?   source_id?: Int | Null,\n?   free_parking_hours?: Int | Null\n  }\n}\n\nUnknown argument `car_type`. Available options are marked with ?.","timestamp":"2024-05-27 08:20:23"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:28\",\n    registration_type: undefined,\n+   registeration_type: String\n  }\n}\n\nArgument `registeration_type` is missing.","timestamp":"2024-05-27 08:28:28"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:28\",\n    registration_type: undefined,\n+   registeration_type: String\n  }\n}\n\nArgument `registeration_type` is missing.","timestamp":"2024-05-27 08:28:28"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:28\",\n+   registration_type: String\n  }\n}\n\nArgument `registration_type` is missing.","timestamp":"2024-05-27 08:28:55"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:28\",\n+   registration_type: String\n  }\n}\n\nArgument `registration_type` is missing.","timestamp":"2024-05-27 08:28:55"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:29\",\n    registration_type: \"gfsgsfg\",\n+   registration_source: RegistrationSource\n  }\n}\n\nArgument `registration_source` is missing.","timestamp":"2024-05-27 08:29:39"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 1,\n    registeration_source: \"system\",\n    start_date: \"2024-05-01T05:28:23.057Z\",\n    end_date: \"2024-05-22T05:28:24.291Z\",\n    created_at: \"27.05.2024 08:29\",\n    registration_type: \"gfsgsfg\",\n+   registration_source: RegistrationSource\n  }\n}\n\nArgument `registration_source` is missing.","timestamp":"2024-05-27 08:29:39"}
{"level":"error","message":"Operation `carlogs.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 08:30:41"}
{"level":"error","message":"Operation `carlogs.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 08:30:41"}
{"level":"error","message":"Operation `carlogs.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 08:30:51"}
{"level":"error","message":"Operation `carlogs.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 08:30:51"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 11:10:35"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 11:10:35"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 11:48:22"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 11:48:22"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 14:34:30"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 14:34:30"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 14:38:31"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-27 14:38:31"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n{\n  data: {\n    access_code: \"test\",\n    partner_id: 1,\n+   access_username: String\n  }\n}\n\nArgument `access_username` is missing.","timestamp":"2024-05-27 14:39:31"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n{\n  data: {\n    access_code: \"test\",\n    partner_id: 1,\n+   access_username: String\n  }\n}\n\nArgument `access_username` is missing.","timestamp":"2024-05-27 14:39:31"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-05-27 14:40:37"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-05-27 14:40:37"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:00"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:00"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:01"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:01"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:23"}
{"level":"error","message":"\nInvalid `prisma.partner.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    partnerDashboard: true,\n    ~~~~~~~~~~~~~~~~\n?   places?: true,\n?   dashboard?: true\n  }\n}\n\nUnknown field `partnerDashboard` for include statement on model `Partner`. Available options are marked with ?.","timestamp":"2024-05-27 14:46:23"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 11:02:31"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 11:02:31"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 11:02:53"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 11:02:53"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-28 11:02:57"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-28 11:02:57"}
{"level":"error","message":"id is not defined","timestamp":"2024-05-28 11:03:03"}
{"level":"error","message":"id is not defined","timestamp":"2024-05-28 11:03:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:03:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:10"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:05:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:05:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:05:36"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:05:44"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:05:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:09:56"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:40"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:10:47"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:24"}
{"level":"error","message":"partner is not defined","timestamp":"2024-05-28 11:13:28"}
{"level":"error","message":"partner is not defined","timestamp":"2024-05-28 11:13:28"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:13:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:14:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:15:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:17:18"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:17:18"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:17:20"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:17:20"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:17:28"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:17:28"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:17:38"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:17:38"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:19:03"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:08"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:08"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:18"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:18"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:38"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:38"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:41"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:41"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:44"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:48"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:48"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:50"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:19:53"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:58"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:19:58"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:08"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:08"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:14"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:14"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:18"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:18"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:23"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:20:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:22"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:22"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:23"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:32"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:32"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:34"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:37"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:37"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:42"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:44"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:46"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:21:46"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:47"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:47"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:57"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:21:57"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:07"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:07"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:23"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:28"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:28"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:30"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:30"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:22:31"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:33"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:33"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:43"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:43"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:53"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:22:53"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:01"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:01"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:12"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:12"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:15"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:15"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:21"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:21"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:22"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:22"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"partner\" for model \"Place\"","timestamp":"2024-05-28 11:23:31"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:32"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:32"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:42"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:42"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:43"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 11:23:43"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:53"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 11:23:53"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 12:47:46"}
{"level":"error","message":"Cast to ObjectId failed for value \"undefined\" (type string) at path \"requested_by\" for model \"PartnerPlaceDeletionRequest\"","timestamp":"2024-05-28 12:47:46"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 12:47:56"}
{"level":"error","message":"Operation `partnerplacecreationrequests.find()` buffering timed out after 10000ms","timestamp":"2024-05-28 12:47:56"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 12:49:35"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 12:49:35"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 12:49:52"}
{"level":"error","message":"No partner was found","timestamp":"2024-05-28 12:49:52"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-28 12:49:56"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-28 12:49:56"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Oslo\",\n    policy: \"no policy\",\n    code: \"ALX\",\n    created_at: \"28.05.2024 12:50\",\n+   is_verified: Boolean\n  }\n}\n\nArgument `is_verified` is missing.","timestamp":"2024-05-28 12:50:39"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Oslo\",\n    policy: \"no policy\",\n    code: \"ALX\",\n    created_at: \"28.05.2024 12:50\",\n+   is_verified: Boolean\n  }\n}\n\nArgument `is_verified` is missing.","timestamp":"2024-05-28 12:50:39"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n{\n  data: {\n    request_type: \"deletion\",\n    location: undefined,\n    policy: undefined,\n    code: undefined,\n    place_id: 2,\n              ~\n    requested_by_id: 2,\n    created_at: \"29.05.2024 08:30\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected String or Null, provided Int.","timestamp":"2024-05-29 08:30:51"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n{\n  data: {\n    request_type: \"deletion\",\n    location: undefined,\n    policy: undefined,\n    code: undefined,\n    place_id: 2,\n              ~\n    requested_by_id: 2,\n    created_at: \"29.05.2024 08:30\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected String or Null, provided Int.","timestamp":"2024-05-29 08:30:51"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:49:52"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:49:52"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:49:54"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:49:54"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:44"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:44"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:44"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:44"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:45"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:45"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:45"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:45"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:49"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:49"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:49"}
{"level":"error","message":"\nInvalid `prisma.car.aggregate()` invocation:\n\n{\n  select: {\n    _avg: {\n      select: {\n        duration: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:50:49"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:55:48"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:55:48"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:55:48"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:55:48"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:06"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:06"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2,\n          location: \"Oslo\",\n          policy: \"no policy\",\n          code: \"ALX\",\n          created_at: \"28.05.2024 12:51\",\n          updated_at: null,\n          deleted_at: null,\n          is_verified: true,\n          partner_id: null\n        }\n      ]\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:56:06"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2,\n          location: \"Oslo\",\n          policy: \"no policy\",\n          code: \"ALX\",\n          created_at: \"28.05.2024 12:51\",\n          updated_at: null,\n          deleted_at: null,\n          is_verified: true,\n          partner_id: null\n        }\n      ]\n      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:56:06"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:31"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:31"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:56:31"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:56:31"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:53"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:56:53"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:58:59"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:58:59"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:58:59"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:58:59"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:59:00"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: {\n        then: [object Function],\n              ~~~~~~~~~~~~~~~~~\n        catch: [object Function],\n        finally: [object Function],\n        requestTransaction: [object Function]\n      }\n    }\n  }\n}\n\nInvalid value for argument `then`: We could not serialize [object Function] value. Serialize the object to JSON or implement a \".toJSON()\" method on it.","timestamp":"2024-05-29 08:59:00"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:59:00"}
{"level":"error","message":"\nInvalid `prisma.car.count()` invocation:\n\n{\n  select: {\n    _count: {\n      select: {\n        _all: true\n      }\n    }\n  },\n  where: {\n    place_id: {\n      in: [\n        {\n          id: 2\n        }\n      ]\n      ~~~~~~~~~\n    }\n  }\n}\n\nArgument `in`: Invalid value provided. Expected Int, provided Object.","timestamp":"2024-05-29 08:59:00"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:16:34"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:16:34"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:17:01"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:17:01"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:18:05"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:18:05"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:20:56"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:20:56"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:20:57"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:20:57"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:01"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:01"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:10"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:10"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:22"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:22"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:25"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:25"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:36"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:36"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:45"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:45"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:46"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:46"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:51"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:51"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:53"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:53"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:55"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:21:55"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:22:01"}
{"level":"error","message":"PlaceRepository.getAllPlaceProfiles is not a function","timestamp":"2024-05-29 09:22:01"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n{\n  data: {\n    place_id: \"2\",\n              ~~~\n    access_code: \"kjlh\",\n    access_username: \"jhkl\",\n    place_name: \"trw\",\n    place_type: \"gjjklj\",\n    free_parking_hours: 8,\n    created_at: \"29.05.2024 09:59\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-05-29 09:59:33"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n{\n  data: {\n    place_id: \"2\",\n              ~~~\n    access_code: \"kjlh\",\n    access_username: \"jhkl\",\n    place_name: \"trw\",\n    place_type: \"gjjklj\",\n    free_parking_hours: 8,\n    created_at: \"29.05.2024 09:59\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected Int, provided String.","timestamp":"2024-05-29 09:59:33"}
{"level":"error","message":"\nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_pnid_key`","timestamp":"2024-05-29 10:27:59"}
{"level":"error","message":"\nInvalid `prisma.user.create()` invocation:\n\n\nUnique constraint failed on the constraint: `User_pnid_key`","timestamp":"2024-05-29 10:27:59"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"}],"timestamp":"2024-05-29 10:28:36"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"}],"timestamp":"2024-05-29 10:28:36"}
{"level":"error","message":"credentials is not defined","timestamp":"2024-05-29 10:28:51"}
{"level":"error","message":"credentials is not defined","timestamp":"2024-05-29 10:28:51"}
{"level":"error","message":"AuthRepository.login is not a function","timestamp":"2024-05-29 10:29:39"}
{"level":"error","message":"AuthRepository.login is not a function","timestamp":"2024-05-29 10:29:39"}
{"level":"error","message":"Cannot destructure property 'user_id' of 'undefined' as it is undefined.","timestamp":"2024-05-29 10:29:50"}
{"level":"error","message":"Cannot destructure property 'user_id' of 'undefined' as it is undefined.","timestamp":"2024-05-29 10:29:50"}
{"level":"error","message":"rule is not defined","timestamp":"2024-05-29 12:12:35"}
{"level":"error","message":"rule is not defined","timestamp":"2024-05-29 12:12:35"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: \"524\",\n            ~~~~~\n    policy_time: \"2\",\n    created_at: \"29.05.2024 12:14\",\n    extras: {\n      connect: {\n        meter_receipt_number: true,\n        meter_number: true,\n        expiry_date: false,\n        paid_amount: false\n      }\n    }\n  }\n}\n\nArgument `charge`: Invalid value provided. Expected Float, provided String.","timestamp":"2024-05-29 12:14:01"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: \"524\",\n            ~~~~~\n    policy_time: \"2\",\n    created_at: \"29.05.2024 12:14\",\n    extras: {\n      connect: {\n        meter_receipt_number: true,\n        meter_number: true,\n        expiry_date: false,\n        paid_amount: false\n      }\n    }\n  }\n}\n\nArgument `charge`: Invalid value provided. Expected Float, provided String.","timestamp":"2024-05-29 12:14:01"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: 524,\n    policy_time: 2,\n    created_at: \"29.05.2024 12:14\",\n    extras: {\n      connect: {\n        meter_receipt_number: true,\n        meter_number: true,\n        expiry_date: false,\n        paid_amount: false,\n?       id?: Int,\n?       rule_id?: Int,\n?       AND?: ExtrasWhereInput | ExtrasWhereInput[],\n?       OR?: ExtrasWhereInput[],\n?       NOT?: ExtrasWhereInput | ExtrasWhereInput[],\n?       rule?: RuleNullableRelationFilter | RuleWhereInput | Null\n      }\n    }\n  }\n}\n\nArgument `connect` of type ExtrasWhereUniqueInput needs at least one of `id` or `rule_id` arguments. Available options are marked with ?.","timestamp":"2024-05-29 12:14:39"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: 524,\n    policy_time: 2,\n    created_at: \"29.05.2024 12:14\",\n    extras: {\n      connect: {\n        meter_receipt_number: true,\n        meter_number: true,\n        expiry_date: false,\n        paid_amount: false,\n?       id?: Int,\n?       rule_id?: Int,\n?       AND?: ExtrasWhereInput | ExtrasWhereInput[],\n?       OR?: ExtrasWhereInput[],\n?       NOT?: ExtrasWhereInput | ExtrasWhereInput[],\n?       rule?: RuleNullableRelationFilter | RuleWhereInput | Null\n      }\n    }\n  }\n}\n\nArgument `connect` of type ExtrasWhereUniqueInput needs at least one of `id` or `rule_id` arguments. Available options are marked with ?.","timestamp":"2024-05-29 12:14:39"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: 524,\n    policy_time: 2,\n    created_at: \"29.05.2024 12:15\",\n    extras: {\n      meter_receipt_number: true,\n      ~~~~~~~~~~~~~~~~~~~~\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false,\n?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,\n?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,\n?     connect?: ExtrasWhereUniqueInput\n    }\n  }\n}\n\nUnknown argument `meter_receipt_number`. Available options are marked with ?.","timestamp":"2024-05-29 12:15:00"}
{"level":"error","message":"\nInvalid `prisma.rule.create()` invocation:\n\n{\n  data: {\n    name: \"trw\",\n    charge: 524,\n    policy_time: 2,\n    created_at: \"29.05.2024 12:15\",\n    extras: {\n      meter_receipt_number: true,\n      ~~~~~~~~~~~~~~~~~~~~\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false,\n?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,\n?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,\n?     connect?: ExtrasWhereUniqueInput\n    }\n  }\n}\n\nUnknown argument `meter_receipt_number`. Available options are marked with ?.","timestamp":"2024-05-29 12:15:00"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    rule_id: 1,\n    ~~~~~~~\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean,\n?   rule?: RuleCreateNestedOneWithoutExtrasInput\n  }\n}\n\nUnknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?.","timestamp":"2024-05-29 12:16:23"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    rule_id: 1,\n    ~~~~~~~\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean,\n?   rule?: RuleCreateNestedOneWithoutExtrasInput\n  }\n}\n\nUnknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?.","timestamp":"2024-05-29 12:16:23"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    extras: {\n    ~~~~~~\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n    rule: {\n      connect: {\n        id: 2\n      }\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-05-29 12:22:11"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    extras: {\n    ~~~~~~\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n    rule: {\n      connect: {\n        id: 2\n      }\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-05-29 12:22:11"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    rule_id: 3,\n    ~~~~~~~\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean,\n?   rule?: RuleCreateNestedOneWithoutExtrasInput\n  }\n}\n\nUnknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?.","timestamp":"2024-05-29 12:24:11"}
{"level":"error","message":"\nInvalid `prisma.extras.create()` invocation:\n\n{\n  data: {\n    rule_id: 3,\n    ~~~~~~~\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: false,\n      paid_amount: false\n    },\n?   meter_receipt_number?: Boolean,\n?   meter_number?: Boolean,\n?   expiry_date?: Boolean,\n?   paid_amount?: Boolean,\n?   rule?: RuleCreateNestedOneWithoutExtrasInput\n  }\n}\n\nUnknown argument `rule_id`. Did you mean `rule`? Available options are marked with ?.","timestamp":"2024-05-29 12:24:11"}
{"level":"error","message":"jwt expired","timestamp":"2024-05-30 09:24:51"}
{"level":"error","message":"jwt expired","timestamp":"2024-05-30 09:24:51"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '2' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-05-30 09:30:07"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '2' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-05-30 09:30:07"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '2' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-05-30 09:31:41"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '2' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-05-30 09:31:41"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:34:01"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:34:01"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:35:12"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:35:12"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:36:48"}
{"level":"error","message":"Could not find car","timestamp":"2024-05-30 09:36:48"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 09:44:21"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 09:44:21"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 09:45:54"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 09:45:54"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n    id: NaN\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: \"690\",\n            ~~~~~\n    policy_time: 0,\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: true,\n      paid_amount: false\n    },\n    updated_at: \"30.05.2024 10:08\"\n  }\n}\n\nArgument `charge`: Invalid value provided. Expected Float or FloatFieldUpdateOperationsInput, provided String.","timestamp":"2024-05-30 10:08:31"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n    id: NaN\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: \"690\",\n            ~~~~~\n    policy_time: 0,\n    extras: {\n      meter_receipt_number: true,\n      meter_number: true,\n      expiry_date: true,\n      paid_amount: false\n    },\n    updated_at: \"30.05.2024 10:08\"\n  }\n}\n\nArgument `charge`: Invalid value provided. Expected Float or FloatFieldUpdateOperationsInput, provided String.","timestamp":"2024-05-30 10:08:31"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n    id: NaN\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: 690,\n    policy_time: 0,\n    extras: {\n      meter_receipt_number: true,\n      ~~~~~~~~~~~~~~~~~~~~\n      meter_number: true,\n      expiry_date: true,\n      paid_amount: false,\n?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,\n?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,\n?     upsert?: ExtrasUpsertWithoutRuleInput,\n?     disconnect?: Boolean | ExtrasWhereInput,\n?     delete?: Boolean | ExtrasWhereInput,\n?     connect?: ExtrasWhereUniqueInput,\n?     update?: ExtrasUpdateToOneWithWhereWithoutRuleInput | ExtrasUpdateWithoutRuleInput | ExtrasUncheckedUpdateWithoutRuleInput\n    },\n    updated_at: \"30.05.2024 10:10\"\n  }\n}\n\nUnknown argument `meter_receipt_number`. Available options are marked with ?.","timestamp":"2024-05-30 10:10:03"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n    id: NaN\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: 690,\n    policy_time: 0,\n    extras: {\n      meter_receipt_number: true,\n      ~~~~~~~~~~~~~~~~~~~~\n      meter_number: true,\n      expiry_date: true,\n      paid_amount: false,\n?     create?: ExtrasCreateWithoutRuleInput | ExtrasUncheckedCreateWithoutRuleInput,\n?     connectOrCreate?: ExtrasCreateOrConnectWithoutRuleInput,\n?     upsert?: ExtrasUpsertWithoutRuleInput,\n?     disconnect?: Boolean | ExtrasWhereInput,\n?     delete?: Boolean | ExtrasWhereInput,\n?     connect?: ExtrasWhereUniqueInput,\n?     update?: ExtrasUpdateToOneWithWhereWithoutRuleInput | ExtrasUpdateWithoutRuleInput | ExtrasUncheckedUpdateWithoutRuleInput\n    },\n    updated_at: \"30.05.2024 10:10\"\n  }\n}\n\nUnknown argument `meter_receipt_number`. Available options are marked with ?.","timestamp":"2024-05-30 10:10:03"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: 690,\n    policy_time: 0,\n    updated_at: \"30.05.2024 10:11\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 10:11:09"}
{"level":"error","message":"\nInvalid `prisma.rule.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    name: \"Gratisparkering - Billett / elektronisk registrering utløpt - skilt 1P/808, pforskr.§24(3)\",\n    charge: 690,\n    policy_time: 0,\n    updated_at: \"30.05.2024 10:11\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 10:11:09"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:17:27"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:17:27"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:18:15"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:18:15"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:21:11"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:21:11"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:26:13"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PlaceDashboard_place_id_key`","timestamp":"2024-05-30 10:26:13"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n\nForeign key constraint failed on the field: `requested_by_id`","timestamp":"2024-05-30 10:33:51"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n\nForeign key constraint failed on the field: `requested_by_id`","timestamp":"2024-05-30 10:33:51"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n\nForeign key constraint failed on the field: `requested_by_id`","timestamp":"2024-05-30 10:34:32"}
{"level":"error","message":"\nInvalid `prisma.placeRequest.create()` invocation:\n\n\nForeign key constraint failed on the field: `requested_by_id`","timestamp":"2024-05-30 10:34:32"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 10:35:03"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 10:35:03"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 10:37:02"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 10:37:02"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 10:40:46"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 10:40:46"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:06\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:06:48"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:06\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:06:48"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:06\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:06:52"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:06\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:06:52"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:07\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:07:07"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:07\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:07:07"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:07\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:07:20"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:07\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:07:20"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:09\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:09:44"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:09\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:09:44"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:11\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:11:49"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"30.05.2024 11:11\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:11:49"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: undefined,\n    policy: undefined,\n    code: undefined\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:15:40"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: undefined,\n    policy: undefined,\n    code: undefined\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:15:40"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: \"qwerty\",\n    policy: \"no policy\",\n    code: \"qewer\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:16:28"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: \"qwerty\",\n    policy: \"no policy\",\n    code: \"qewer\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:16:28"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 11:34:34"}
{"level":"error","message":"Operation `violations.find()` buffering timed out after 10000ms","timestamp":"2024-05-30 11:34:34"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:40:36"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:40:36"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:41:01"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 11:41:01"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.findUnique()` invocation:\n\n{\n  where: {\n    access_username: \"trw\",\n?   id?: Int,\n?   AND?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],\n?   OR?: PlaceDashboardWhereInput[],\n?   NOT?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],\n?   access_code?: StringFilter | String,\n?   profile_image?: StringNullableFilter | String | Null,\n?   free_parking_hours?: IntFilter | Int,\n?   place_name?: StringFilter | String,\n?   place_type?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   deleted_at?: StringNullableFilter | String | Null,\n?   place_id?: IntFilter | Int,\n?   place?: PlaceRelationFilter | PlaceWhereInput,\n?   registered_cars?: CarListRelationFilter\n  },\n  include: {\n    place: true\n  }\n}\n\nArgument `where` of type PlaceDashboardWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-05-30 11:45:00"}
{"level":"error","message":"\nInvalid `prisma.placeDashboard.findUnique()` invocation:\n\n{\n  where: {\n    access_username: \"trw\",\n?   id?: Int,\n?   AND?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],\n?   OR?: PlaceDashboardWhereInput[],\n?   NOT?: PlaceDashboardWhereInput | PlaceDashboardWhereInput[],\n?   access_code?: StringFilter | String,\n?   profile_image?: StringNullableFilter | String | Null,\n?   free_parking_hours?: IntFilter | Int,\n?   place_name?: StringFilter | String,\n?   place_type?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   deleted_at?: StringNullableFilter | String | Null,\n?   place_id?: IntFilter | Int,\n?   place?: PlaceRelationFilter | PlaceWhereInput,\n?   registered_cars?: CarListRelationFilter\n  },\n  include: {\n    place: true\n  }\n}\n\nArgument `where` of type PlaceDashboardWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-05-30 11:45:00"}
{"level":"error","message":"No place profile was found","timestamp":"2024-05-30 11:45:59"}
{"level":"error","message":"No place profile was found","timestamp":"2024-05-30 11:45:59"}
{"level":"error","message":"No dashboard username was found","timestamp":"2024-05-30 11:46:48"}
{"level":"error","message":"No dashboard username was found","timestamp":"2024-05-30 11:46:48"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 11:46:55"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 11:46:55"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 11:46:56"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 11:46:56"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 12:50:16"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 12:50:16"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:00:25"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:00:25"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:00:31"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:00:31"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    manufactur_year: \"2002\",\n    car_model: \"HYUNDAI\",\n    car_description: \"Personbil\",\n    car_color: \"Rød\",\n    car_type: \"KJORETOY\",\n    plate_number: \"BD31012\",\n    start_date: \"30.05.2024 13:00\",\n    end_date: \"30.05.2024 15:00\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 4,\n    free_parking_time: 2,\n    created_at: \"30.05.2024 13:00\",\n+   place: {\n+     create: PlaceCreateWithoutCarsInput | PlaceUncheckedCreateWithoutCarsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutCarsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-05-30 13:00:36"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    manufactur_year: \"2002\",\n    car_model: \"HYUNDAI\",\n    car_description: \"Personbil\",\n    car_color: \"Rød\",\n    car_type: \"KJORETOY\",\n    plate_number: \"BD31012\",\n    start_date: \"30.05.2024 13:00\",\n    end_date: \"30.05.2024 15:00\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 4,\n    free_parking_time: 2,\n    created_at: \"30.05.2024 13:00\",\n+   place: {\n+     create: PlaceCreateWithoutCarsInput | PlaceUncheckedCreateWithoutCarsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutCarsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-05-30 13:00:36"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    manufactur_year: \"2002\",\n    car_model: \"HYUNDAI\",\n    car_description: \"Personbil\",\n    car_color: \"Rød\",\n    car_type: \"KJORETOY\",\n    plate_number: \"BD31012\",\n    start_date: \"30.05.2024 13:02\",\n    end_date: \"30.05.2024 15:02\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 4,\n    place_id: 1,\n    free_parking_time: 2,\n    ~~~~~~~~~~~~~~~~~\n    created_at: \"30.05.2024 13:02\",\n?   id?: Int,\n?   free_parking_hours?: Int | Null\n  }\n}\n\nUnknown argument `free_parking_time`. Available options are marked with ?.","timestamp":"2024-05-30 13:02:06"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    manufactur_year: \"2002\",\n    car_model: \"HYUNDAI\",\n    car_description: \"Personbil\",\n    car_color: \"Rød\",\n    car_type: \"KJORETOY\",\n    plate_number: \"BD31012\",\n    start_date: \"30.05.2024 13:02\",\n    end_date: \"30.05.2024 15:02\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 4,\n    place_id: 1,\n    free_parking_time: 2,\n    ~~~~~~~~~~~~~~~~~\n    created_at: \"30.05.2024 13:02\",\n?   id?: Int,\n?   free_parking_hours?: Int | Null\n  }\n}\n\nUnknown argument `free_parking_time`. Available options are marked with ?.","timestamp":"2024-05-30 13:02:06"}
{"level":"error","message":"free_parking_time is not defined","timestamp":"2024-05-30 13:02:42"}
{"level":"error","message":"free_parking_time is not defined","timestamp":"2024-05-30 13:02:42"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:03:42"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:03:42"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:04"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:04"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:28"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:28"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:36"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:36"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:47"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:04:47"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:05:00"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:05:00"}
{"level":"error","message":"\nInvalid `prisma.car.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 13:05:54"}
{"level":"error","message":"\nInvalid `prisma.car.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 13:05:54"}
{"level":"error","message":"\nInvalid `prisma.car.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 13:05:57"}
{"level":"error","message":"\nInvalid `prisma.car.delete()` invocation:\n\n{\n  where: {\n+   id: Int\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-05-30 13:05:57"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 13:10:16"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-05-30 13:10:16"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:17:40"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:17:40"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:17:45"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:17:45"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:18:52"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:18:52"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:11"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:11"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:41"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:41"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:43"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:43"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:45"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:45"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:48"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:48"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:50"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:50"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:52"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:19:52"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:07"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:07"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:12"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:12"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:14"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:14"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:15"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:15"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:15"}
{"level":"error","message":"Cannot destructure property 'place_dashboard_id' of 'undefined' as it is undefined.","timestamp":"2024-05-30 13:20:15"}
{"level":"error","message":"de is not defined","timestamp":"2024-05-30 13:20:52"}
{"level":"error","message":"de is not defined","timestamp":"2024-05-30 13:20:52"}
{"level":"error","message":"de is not defined","timestamp":"2024-05-30 13:20:53"}
{"level":"error","message":"de is not defined","timestamp":"2024-05-30 13:20:53"}
{"level":"error","message":"Assignment to constant variable.","timestamp":"2024-05-30 13:21:02"}
{"level":"error","message":"Assignment to constant variable.","timestamp":"2024-05-30 13:21:02"}
{"level":"error","message":"Car is already registered","timestamp":"2024-05-30 14:41:32"}
{"level":"error","message":"Car is already registered","timestamp":"2024-05-30 14:41:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-05-31 14:02:45"}
{"level":"error","message":"jwt expired","timestamp":"2024-05-31 14:02:45"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-01 05:16:25"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-01 05:16:25"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 00:45:14"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 00:45:14"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 00:54:29"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 00:54:29"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '6' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-06-02 01:25:07"}
{"level":"error","message":"Cast to string failed for value \"{ place_id: '6' }\" (type Object) at path \"place\" for model \"Violation\"","timestamp":"2024-06-02 01:25:07"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 04:58:29"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 04:58:29"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: \"6\"\n              ~~~\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-06-02 07:08:32"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: \"6\"\n              ~~~\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nArgument `place_id`: Invalid value provided. Expected IntFilter or Int, provided String.","timestamp":"2024-06-02 07:08:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 08:08:24"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-02 08:08:24"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-03 05:41:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-03 05:41:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 00:47:28"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 00:47:28"}
{"level":"error","message":"data is not defined","timestamp":"2024-06-04 03:06:38"}
{"level":"error","message":"data is not defined","timestamp":"2024-06-04 03:06:38"}
{"level":"error","message":"data is not defined","timestamp":"2024-06-04 03:41:58"}
{"level":"error","message":"data is not defined","timestamp":"2024-06-04 03:41:58"}
{"level":"error","message":"place is not defined","timestamp":"2024-06-04 03:42:33"}
{"level":"error","message":"place is not defined","timestamp":"2024-06-04 03:42:33"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-04 03:45:43"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-04 03:45:43"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-06-04 03:48:04"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-06-04 03:48:04"}
{"level":"error","message":"ticket_number is not defined","timestamp":"2024-06-04 03:49:53"}
{"level":"error","message":"ticket_number is not defined","timestamp":"2024-06-04 03:49:53"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    shift_id: NaN,\n    ticket_comment: \"ttt\",\n    system_comment: \"SSSS\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717451538354_93678427.png\",\n          date: \"04.06.2024 00:52\",\n          localPath: \"./public/images/temp_cars/1717451538354_93678427.png\",\n          originalName: \"1717451538354_93678427.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 03:51\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"4786947\",\n        ticket_image: \"http://localhost:3000/public/tickets/4786947.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-4523357960-ETQMJ.png\",\n        serial_number: \"VL-4523357960-ETQMJ\",\n        created_at: \"04.06.2024 03:51\"\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: undefined,\n        plate_number: undefined,\n        manufactur_year: undefined,\n        car_description: undefined,\n        car_type: undefined,\n        car_color: undefined,\n        country_name: undefined,\n        country_code: undefined\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"\\\"session-zwPULaiPh3n2EyHEkztV\\\"\",\n+   created_by: {\n+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,\n+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,\n+     connect: UserWhereUniqueInput\n+   }\n  }\n}\n\nArgument `created_by` is missing.","timestamp":"2024-06-04 03:51:48"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    shift_id: NaN,\n    ticket_comment: \"ttt\",\n    system_comment: \"SSSS\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717451538354_93678427.png\",\n          date: \"04.06.2024 00:52\",\n          localPath: \"./public/images/temp_cars/1717451538354_93678427.png\",\n          originalName: \"1717451538354_93678427.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 03:51\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"4786947\",\n        ticket_image: \"http://localhost:3000/public/tickets/4786947.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-4523357960-ETQMJ.png\",\n        serial_number: \"VL-4523357960-ETQMJ\",\n        created_at: \"04.06.2024 03:51\"\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: undefined,\n        plate_number: undefined,\n        manufactur_year: undefined,\n        car_description: undefined,\n        car_type: undefined,\n        car_color: undefined,\n        country_name: undefined,\n        country_code: undefined\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"\\\"session-zwPULaiPh3n2EyHEkztV\\\"\",\n+   created_by: {\n+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,\n+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,\n+     connect: UserWhereUniqueInput\n+   }\n  }\n}\n\nArgument `created_by` is missing.","timestamp":"2024-06-04 03:51:49"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"ttt\",\n    system_comment: \"SSSS\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717451538354_93678427.png\",\n          date: \"04.06.2024 00:52\",\n          localPath: \"./public/images/temp_cars/1717451538354_93678427.png\",\n          originalName: \"1717451538354_93678427.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 03:56\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"2983292\",\n        ticket_image: \"http://localhost:3000/public/tickets/2983292.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8643370208-VGVK6.png\",\n        serial_number: \"VL-8643370208-VGVK6\",\n        created_at: \"04.06.2024 03:56\"\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: undefined,\n        plate_number: undefined,\n        manufactur_year: undefined,\n        car_description: undefined,\n        car_type: undefined,\n        car_color: undefined,\n        country_name: undefined,\n        country_code: undefined\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"\\\"session-zwPULaiPh3n2EyHEkztV\\\"\",\n+   created_by: {\n+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,\n+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,\n+     connect: UserWhereUniqueInput\n+   }\n  }\n}\n\nArgument `created_by` is missing.","timestamp":"2024-06-04 03:56:48"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"ttt\",\n    system_comment: \"SSSS\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717451538354_93678427.png\",\n          date: \"04.06.2024 00:52\",\n          localPath: \"./public/images/temp_cars/1717451538354_93678427.png\",\n          originalName: \"1717451538354_93678427.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 03:56\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"2983292\",\n        ticket_image: \"http://localhost:3000/public/tickets/2983292.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8643370208-VGVK6.png\",\n        serial_number: \"VL-8643370208-VGVK6\",\n        created_at: \"04.06.2024 03:56\"\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: undefined,\n        plate_number: undefined,\n        manufactur_year: undefined,\n        car_description: undefined,\n        car_type: undefined,\n        car_color: undefined,\n        country_name: undefined,\n        country_code: undefined\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"\\\"session-zwPULaiPh3n2EyHEkztV\\\"\",\n+   created_by: {\n+     create: UserCreateWithoutViolationsInput | UserUncheckedCreateWithoutViolationsInput,\n+     connectOrCreate: UserCreateOrConnectWithoutViolationsInput,\n+     connect: UserWhereUniqueInput\n+   }\n  }\n}\n\nArgument `created_by` is missing.","timestamp":"2024-06-04 03:56:48"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-06-04 04:14:12"}
{"level":"error","message":"Navigation timeout of 30000 ms exceeded","timestamp":"2024-06-04 04:14:12"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\",\n          localPath: \"./public/images/temp_cars/1717463601552_152367773.png\",\n          originalName: \"1717463601552_152367773.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:15\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6042654\",\n        ticket_image: \"http://localhost:3000/public/tickets/6042654.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-6337941962-5MV0M.png\",\n        serial_number: \"VL-6337941962-5MV0M\",\n        created_at: \"04.06.2024 04:15\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: {\n        0: {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `localPath`. Available options are marked with ?.","timestamp":"2024-06-04 04:16:04"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\",\n          localPath: \"./public/images/temp_cars/1717463601552_152367773.png\",\n          originalName: \"1717463601552_152367773.png\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:15\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6042654\",\n        ticket_image: \"http://localhost:3000/public/tickets/6042654.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-6337941962-5MV0M.png\",\n        serial_number: \"VL-6337941962-5MV0M\",\n        created_at: \"04.06.2024 04:15\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: {\n        0: {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `localPath`. Available options are marked with ?.","timestamp":"2024-06-04 04:16:04"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:17\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"1451408\",\n        ticket_image: \"http://localhost:3000/public/tickets/1451408.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8549064699-04DMS.png\",\n        serial_number: \"VL-8549064699-04DMS\",\n        created_at: \"04.06.2024 04:17\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: {\n        0: {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        },\n+       name: String\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `name` is missing.","timestamp":"2024-06-04 04:17:25"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:17\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"1451408\",\n        ticket_image: \"http://localhost:3000/public/tickets/1451408.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8549064699-04DMS.png\",\n        serial_number: \"VL-8549064699-04DMS\",\n        created_at: \"04.06.2024 04:17\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: {\n        0: {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        },\n+       name: String\n      }\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `name` is missing.","timestamp":"2024-06-04 04:17:25"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:18\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"4974694\",\n        ticket_image: \"http://localhost:3000/public/tickets/4974694.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-7973656338-I2WTH.png\",\n        serial_number: \"VL-7973656338-I2WTH\",\n        created_at: \"04.06.2024 04:18\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-06-04 04:18:35"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:18\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"4974694\",\n        ticket_image: \"http://localhost:3000/public/tickets/4974694.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-7973656338-I2WTH.png\",\n        serial_number: \"VL-7973656338-I2WTH\",\n        created_at: \"04.06.2024 04:18\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: 2,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `id`. Available options are marked with ?.","timestamp":"2024-06-04 04:18:35"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:19\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6554577\",\n        ticket_image: \"http://localhost:3000/public/tickets/6554577.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-3370033152-UX8G4.png\",\n        serial_number: \"VL-3370033152-UX8G4\",\n        created_at: \"04.06.2024 04:19\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-06-04 04:20:10"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:19\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6554577\",\n        ticket_image: \"http://localhost:3000/public/tickets/6554577.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-3370033152-UX8G4.png\",\n        serial_number: \"VL-3370033152-UX8G4\",\n        created_at: \"04.06.2024 04:19\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            meter_receipt_number: null,\n            meter_number: null,\n            expiry_date: null,\n            paid_amount: null\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-06-04 04:20:10"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:27\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6833342\",\n        ticket_image: \"http://localhost:3000/public/tickets/6833342.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8658818064-C34LR.png\",\n        serial_number: \"VL-8658818064-C34LR\",\n        created_at: \"04.06.2024 04:27\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-06-04 04:27:58"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:27\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6833342\",\n        ticket_image: \"http://localhost:3000/public/tickets/6833342.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-8658818064-C34LR.png\",\n        serial_number: \"VL-8658818064-C34LR\",\n        created_at: \"04.06.2024 04:27\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: {\n            meter_receipt_number: true,\n            meter_number: true,\n            expiry_date: true,\n            paid_amount: true\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nUnknown argument `extras`. Available options are marked with ?.","timestamp":"2024-06-04 04:27:58"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:29\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"0197612\",\n        ticket_image: \"http://localhost:3000/public/tickets/0197612.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-6660151725-I388D.png\",\n        serial_number: \"VL-6660151725-I388D\",\n        created_at: \"04.06.2024 04:29\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: undefined,\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `meter_receipt_number` is missing.","timestamp":"2024-06-04 04:29:51"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:29\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"0197612\",\n        ticket_image: \"http://localhost:3000/public/tickets/0197612.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-6660151725-I388D.png\",\n        serial_number: \"VL-6660151725-I388D\",\n        created_at: \"04.06.2024 04:29\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: undefined,\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: null,\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `meter_receipt_number` is missing.","timestamp":"2024-06-04 04:29:51"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:30\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6665486\",\n        ticket_image: \"http://localhost:3000/public/tickets/6665486.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-1786422520-LMN7C.png\",\n        serial_number: \"VL-1786422520-LMN7C\",\n        created_at: \"04.06.2024 04:30\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: undefined,\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\",\n+       car_model: String\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `car_model` must not be null.","timestamp":"2024-06-04 04:31:10"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"RRRR\",\n    system_comment: \"sssss\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://localhost:3000/public/images/cars/1717463601552_152367773.png\",\n          date: \"04.06.2024 04:13\"\n        }\n      ]\n    },\n    created_at: \"04.06.2024 04:30\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"6665486\",\n        ticket_image: \"http://localhost:3000/public/tickets/6665486.jpg\",\n        print_option: \"hand\",\n        barcode_image: \"http://localhost:3000/public/barcodes/VL-1786422520-LMN7C.png\",\n        serial_number: \"VL-1786422520-LMN7C\",\n        created_at: \"04.06.2024 04:30\"\n      }\n    },\n    registered_car: undefined,\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 10,\n          extras: undefined,\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        plate_number: \"\",\n        manufacture_year: null,\n        car_description: null,\n        car_type: \"gfsg\",\n        car_color: null,\n        country_name: \"Norway\",\n        country_code: \"NO\",\n+       car_model: String\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: NaN,\n    session_id: \"session-XIvmlePnSZtcrTXnYMFp\"\n  }\n}\n\nArgument `car_model` must not be null.","timestamp":"2024-06-04 04:31:10"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 09:02:50"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 09:02:50"}
{"level":"error","message":"moment is not defined","timestamp":"2024-06-04 17:18:26"}
{"level":"error","message":"moment is not defined","timestamp":"2024-06-04 17:18:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'path')","timestamp":"2024-06-04 17:19:50"}
{"level":"error","message":"Cannot read properties of undefined (reading 'path')","timestamp":"2024-06-04 17:19:50"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 19:41:02"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 19:41:02"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: undefined,\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n    registration_source: \"system\",\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:06\",\n    registration_type: \"shop\",\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:06:33"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufactur_year: undefined,\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n    registration_source: \"system\",\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:06\",\n    registration_type: \"shop\",\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:06:33"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:07\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:07:42"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:07\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:07:42"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:10\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:10:56"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:10\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:10:56"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:13\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:13:01"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:13\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:13:01"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:15\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:15:46"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:15\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:15:46"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:20\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:20:09"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:20\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:20:09"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:30\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:30:26"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-06-05T19:06:26.052Z\",\n    end_date: \"2024-06-27T19:06:27.418Z\",\n    created_at: \"04.06.2024 22:30\",\n    registration_source: \"system\",\n    registered_by: \"system\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-04 22:30:26"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 23:17:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-04 23:17:32"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-05 05:46:42"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-05 05:46:42"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 08:13:28"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 08:13:28"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    car_model: \"HARLEY-DAVIDSON\",\n    car_description: \"Tung motorsykkel\",\n    car_color: \"Grønn\",\n    car_type: \"KJORETOY\",\n    plate_number: \"CV8955\",\n    start_date: \"05.06.2024 08:13\",\n    end_date: \"05.06.2024 10:13\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 5,\n    place_id: 6,\n    free_parking_hours: 2,\n    created_at: \"05.06.2024 08:13\",\n+   manufacture_year: String\n  }\n}\n\nArgument `manufacture_year` is missing.","timestamp":"2024-06-05 08:13:48"}
{"level":"error","message":"\nInvalid `prisma.car.create()` invocation:\n\n{\n  data: {\n    car_model: \"HARLEY-DAVIDSON\",\n    car_description: \"Tung motorsykkel\",\n    car_color: \"Grønn\",\n    car_type: \"KJORETOY\",\n    plate_number: \"CV8955\",\n    start_date: \"05.06.2024 08:13\",\n    end_date: \"05.06.2024 10:13\",\n    registration_source: \"gateway\",\n    registration_type: \"External\",\n    source_id: 5,\n    place_id: 6,\n    free_parking_hours: 2,\n    created_at: \"05.06.2024 08:13\",\n+   manufacture_year: String\n  }\n}\n\nArgument `manufacture_year` is missing.","timestamp":"2024-06-05 08:13:48"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"05.06.2024 08:15\",\n    end_date: \"05.06.2024 10:15\",\n    created_at: \"05.06.2024 08:15\",\n    registration_source: \"gateway\",\n    registered_by: \"test\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV8955\",\n    car_model: \"HARLEY-DAVIDSON\",\n    car_color: \"Grønn\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-05 08:15:10"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"05.06.2024 08:15\",\n    end_date: \"05.06.2024 10:15\",\n    created_at: \"05.06.2024 08:15\",\n    registration_source: \"gateway\",\n    registered_by: \"test\",\n    place_location: \"Oslo\",\n    place_code: \"ALX\",\n    place_policy: \"no policy\",\n    plate_number: \"CV8955\",\n    car_model: \"HARLEY-DAVIDSON\",\n    car_color: \"Grønn\",\n    car_type: \"KJORETOY\",\n    place_id: 6,\n+   car_description: String\n  }\n}\n\nArgument `car_description` is missing.","timestamp":"2024-06-05 08:15:10"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 08:16:46"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 08:16:46"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-05 08:57:36"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-05 08:57:36"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-05 08:57:36"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-05 08:57:36"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-05 08:58:39"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-05 08:58:39"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-05 08:58:39"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-05 08:58:39"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-05 09:05:31"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-05 09:05:31"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:35:16"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:35:16"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:36:09"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:36:09"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:38:24"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:38:24"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:39:14"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:39:14"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:40:00"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 6,\n+   session_id: {\n+     equals: String | StringFieldRefInput,\n+     in: String[],\n+     notIn: String[],\n+     lt: String | StringFieldRefInput,\n+     lte: String | StringFieldRefInput,\n+     gt: String | StringFieldRefInput,\n+     gte: String | StringFieldRefInput,\n+     contains: String | StringFieldRefInput,\n+     startsWith: String | StringFieldRefInput,\n+     endsWith: String | StringFieldRefInput,\n+     not: String | NestedStringFilter\n+   }\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nArgument `session_id` is missing.","timestamp":"2024-06-05 09:40:00"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 10:25:19"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 10:25:19"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 10:25:46"}
{"level":"error","message":"Car is already registered","timestamp":"2024-06-05 10:25:46"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:22:52"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:22:52"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:23:24"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:23:24"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:24:34"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:24:34"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:25:10"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:25:10"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:26:33"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:26:33"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:27:57"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:27:57"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-05 11:28:57"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-05 11:28:57"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:29:02"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:29:02"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:30:45"}
{"level":"error","message":[{"error":"pnid cannot be null or empty","field":"pnid"},{"error":"password cannot be null or empty","field":"password"}],"timestamp":"2024-06-05 11:30:45"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-05 22:58:44"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-05 22:58:44"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-05 22:59:00"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-05 22:59:00"}
{"level":"error","message":"Unexpected token o in JSON at position 1","timestamp":"2024-06-05 23:10:26"}
{"level":"error","message":"Unexpected token o in JSON at position 1","timestamp":"2024-06-05 23:10:26"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-05 23:29:45"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-05 23:29:45"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 00:09:22"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 00:09:22"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-06 09:02:12"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-06 09:02:12"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-06 09:03:36"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-06 09:03:36"}
{"level":"error","message":"No user was found","timestamp":"2024-06-06 09:05:41"}
{"level":"error","message":"No user was found","timestamp":"2024-06-06 09:05:41"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-06 09:24:44"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-06 09:24:44"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:45:16"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:45:16"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:47:24"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:47:24"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:54:34"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 09:54:34"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:13:50"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:13:50"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:13:58"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:13:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:13:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:13:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:15:15"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:15:15"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:15:36"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:15:36"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:19:12"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:19:12"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:19:22"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:19:22"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:19:22"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:19:22"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:19:54"}
{"level":"error","message":"Autosys server error","timestamp":"2024-06-06 11:19:54"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:19:54"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-06 11:19:54"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:05"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:05"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:09"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:09"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:57"}
{"level":"error","message":"Unexpected token s in JSON at position 0","timestamp":"2024-06-06 11:52:57"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 03:36:59"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 03:36:59"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 06:39:50"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 06:39:50"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:18"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:18"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-07 08:31:35"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-07 08:31:35"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:35"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:35"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-07 08:31:56"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-07 08:31:56"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:56"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 08:31:56"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 09:52:06"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-07 09:52:06"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-08 05:04:26"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-08 05:04:26"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-06-08 07:34:39"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-06-08 07:34:39"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 09:30:12"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 09:30:12"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 09:30:25"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 09:30:25"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-08 09:31:31"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-08 09:31:31"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-08 09:32:13"}
{"level":"error","message":"Unexpected token u in JSON at position 0","timestamp":"2024-06-08 09:32:13"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:36\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: \"6\"\n        }\n      ]\n    }\n  }\n}\n\nArgument `place_name` is missing.","timestamp":"2024-06-08 09:36:59"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:36\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: \"6\"\n        }\n      ]\n    }\n  }\n}\n\nArgument `place_name` is missing.","timestamp":"2024-06-08 09:36:59"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:43\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: \"6\",\n          place_name: \"Oslo\"\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:43:49"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:43\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: \"6\",\n          place_name: \"Oslo\"\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:43:49"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:44\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: 6,\n          place_name: \"Oslo\"\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:44:05"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:44\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: 6,\n          place_name: \"Oslo\"\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:44:05"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:45\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: 6,\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:45:26"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:45\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_id: 6,\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `place_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:45:26"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:46\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:46:51"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:46\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:46:51"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:50\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:50:16"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:50\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:50:16"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:58\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:58:42"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 09:58\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 09:58:42"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:01\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:01:17"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:01\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:01:17"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:02\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:02:26"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:02\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:02:26"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:03\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8,\n          place_id: undefined\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:03:45"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n{\n  where: {\n    id: 8\n  },\n  data: {\n    end_date: \"08.06.2024 10:03\",\n    logins: {\n      create: [\n        {\n          login_time: \"2024-06-08 09:10:39.898261\",\n          logout_time: \"08.06.2024 09:31\",\n          place_name: \"Oslo\",\n          shift_id: 8,\n          place_id: undefined\n        }\n      ]\n    }\n  }\n}\n\nUnknown argument `shift_id`. Available options are marked with ?.","timestamp":"2024-06-08 10:03:45"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:13:04"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:13:04"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:16:16"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:16:16"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:26:38"}
{"level":"error","message":"jwt must be provided","timestamp":"2024-06-08 10:26:38"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"\",\n    system_comment: \"\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830765894_45135068.png\",\n          date: \"08.06.2024 10:12\"\n        },\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830780074_171987045.png\",\n          date: \"08.06.2024 10:13\"\n        },\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830971618_131063874.png\",\n          date: \"08.06.2024 10:16\"\n        }\n      ]\n    },\n    created_at: \"08.06.2024 10:30\",\n    place_login_time: \"٠٨.٠٦.٢٠٢٤ ١٠:٠٩\",\n    print_option: \"Fastet på kjøretøyet\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"2232188\",\n        ticket_image: \"http://192.168.1.5:3000/public/tickets/2232188.jpg\",\n        print_option: \"Fastet på kjøretøyet\",\n                      ~~~~~~~~~~~~~~~~~~~~~~\n        barcode_image: \"http://192.168.1.5:3000/public/barcodes/VL-2906889456-RP0M5.png\",\n        serial_number: \"VL-2906889456-RP0M5\",\n        created_at: \"08.06.2024 10:30\"\n      }\n    },\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 1,\n          extras: {\n            create: {\n              meter_receipt_number: true,\n              meter_number: true,\n              expiry_date: true,\n              paid_amount: true\n            }\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: \"PEUGEOT\",\n        plate_number: \"CV89558\",\n        manufacture_year: \"2018\",\n        car_description: \"Varebil kl 2\",\n        car_type: \"KJORETOY\",\n        car_color: \"Grå\",\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: true,\n    registered_car_id: 11,\n    session_id: \"session-DPcmbzOPDCFT7eDg1BDS\"\n  }\n}\n\nInvalid value for argument `print_option`. Expected PrintOption.","timestamp":"2024-06-08 10:30:46"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"\",\n    system_comment: \"\",\n    place_id: 6,\n    images: {\n      create: [\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830765894_45135068.png\",\n          date: \"08.06.2024 10:12\"\n        },\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830780074_171987045.png\",\n          date: \"08.06.2024 10:13\"\n        },\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1717830971618_131063874.png\",\n          date: \"08.06.2024 10:16\"\n        }\n      ]\n    },\n    created_at: \"08.06.2024 10:30\",\n    place_login_time: \"٠٨.٠٦.٢٠٢٤ ١٠:٠٩\",\n    print_option: \"Fastet på kjøretøyet\",\n    total_charge: 630,\n    ticket_info: {\n      create: {\n        ticket_number: \"2232188\",\n        ticket_image: \"http://192.168.1.5:3000/public/tickets/2232188.jpg\",\n        print_option: \"Fastet på kjøretøyet\",\n                      ~~~~~~~~~~~~~~~~~~~~~~\n        barcode_image: \"http://192.168.1.5:3000/public/barcodes/VL-2906889456-RP0M5.png\",\n        serial_number: \"VL-2906889456-RP0M5\",\n        created_at: \"08.06.2024 10:30\"\n      }\n    },\n    rules: {\n      create: [\n        {\n          name: \"x-rule\",\n          charge: 630,\n          id: undefined,\n          policy_time: 1,\n          extras: {\n            create: {\n              meter_receipt_number: true,\n              meter_number: true,\n              expiry_date: true,\n              paid_amount: true\n            }\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: \"PEUGEOT\",\n        plate_number: \"CV89558\",\n        manufacture_year: \"2018\",\n        car_description: \"Varebil kl 2\",\n        car_type: \"KJORETOY\",\n        car_color: \"Grå\",\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: true,\n    registered_car_id: 11,\n    session_id: \"session-DPcmbzOPDCFT7eDg1BDS\"\n  }\n}\n\nInvalid value for argument `print_option`. Expected PrintOption.","timestamp":"2024-06-08 10:30:46"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Violation_registered_car_id_key`","timestamp":"2024-06-08 10:32:14"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Violation_registered_car_id_key`","timestamp":"2024-06-08 10:32:14"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Violation_registered_car_id_key`","timestamp":"2024-06-08 10:35:35"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `Violation_registered_car_id_key`","timestamp":"2024-06-08 10:35:35"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:36:00"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:36:00"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-06-08 10:36:12"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-06-08 10:36:12"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-06-08 10:36:45"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-06-08 10:36:45"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-06-08 10:37:12"}
{"level":"error","message":"\nInvalid `prisma.shift.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-06-08 10:37:12"}
{"level":"error","message":"No user was found","timestamp":"2024-06-08 10:38:07"}
{"level":"error","message":"No user was found","timestamp":"2024-06-08 10:38:07"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 10:39:23"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 10:39:23"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:40:19"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:40:19"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:41:10"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:41:10"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:41:34"}
{"level":"error","message":"Cannot read properties of null (reading 'id')","timestamp":"2024-06-08 10:41:34"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:43:59"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:43:59"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:01"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:01"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:02"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:02"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:02"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:02"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:03"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:03"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:04"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:04"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:57"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    creaated_by: true,\n    ~~~~~~~~~~~\n?   created_by?: true,\n?   images?: true,\n?   ticket_info?: true,\n?   plate_info?: true,\n?   registered_car?: true,\n?   rules?: true\n  }\n}\n\nUnknown field `creaated_by` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-06-08 10:44:57"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 11:53:09"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 11:53:09"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 11:53:29"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-08 11:53:29"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-09 08:24:36"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-09 08:24:36"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:27:13"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:27:13"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:29:28"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:29:28"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:32:04"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:32:04"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:33:02"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-09 10:33:02"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-10 05:09:40"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-10 05:09:40"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-10 13:40:21"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-10 13:40:21"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-10 13:40:22"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-10 13:40:22"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-11 09:00:49"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-11 09:00:49"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:03:34"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:03:34"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:08:15"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:08:15"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:11:29"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:11:29"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:21:39"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:21:39"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:24:00"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:24:00"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:25:52"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:25:52"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:30:04"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:30:04"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:32:38"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 09:32:38"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-11 11:37:13"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-11 11:37:13"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 11:51:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 11:51:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:17:26"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:17:26"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:18:53"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:18:53"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:20:16"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:20:16"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:28:42"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:28:42"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:34:45"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 12:34:45"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:14:24"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:14:24"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:14:43"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:14:43"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:14:58"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:14:58"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:15:00"}
{"level":"error","message":"rules.reduce is not a function","timestamp":"2024-06-11 13:15:00"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:19:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:19:58"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:22:36"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-11 13:22:36"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-12 06:31:56"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-12 06:31:56"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:32:22"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:32:22"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:34:37"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:34:37"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:36:11"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:36:11"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:52:37"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 06:52:37"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:01:38"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:01:38"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:11:00"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:11:00"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:13:53"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:13:53"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:17:40"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:17:40"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:19:19"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 07:19:19"}
{"level":"error","message":"\nInvalid `prisma.violation.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-06-12 09:16:03"}
{"level":"error","message":"\nInvalid `prisma.violation.findUnique()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-06-12 09:16:03"}
{"level":"error","message":"\nInvalid `prisma.violation.findUnique()` invocation:\n\n{\n  where: {\n    ticket_info: {\n      ticket_number: undefined\n    },\n?   id?: Int,\n?   AND?: ViolationWhereInput | ViolationWhereInput[],\n?   OR?: ViolationWhereInput[],\n?   NOT?: ViolationWhereInput | ViolationWhereInput[],\n?   user_id?: IntFilter | Int,\n?   ticket_comment?: StringFilter | String,\n?   system_comment?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   total_charge?: FloatFilter | Float,\n?   is_car_registered?: BoolFilter | Boolean,\n?   registered_car_id?: IntNullableFilter | Int | Null,\n?   place_login_time?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   deleted_at?: StringNullableFilter | String | Null,\n?   is_locked?: BoolFilter | Boolean,\n?   session_id?: StringFilter | String,\n?   created_by?: UserRelationFilter | UserWhereInput,\n?   images?: ViolationImageListRelationFilter,\n?   place?: PlaceRelationFilter | PlaceWhereInput,\n?   plate_info?: PlateInfoNullableRelationFilter | PlateInfoWhereInput | Null,\n?   registered_car?: CarNullableRelationFilter | CarWhereInput | Null,\n?   rules?: ViolationRuleListRelationFilter\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nArgument `where` of type ViolationWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:16:37"}
{"level":"error","message":"\nInvalid `prisma.violation.findUnique()` invocation:\n\n{\n  where: {\n    ticket_info: {\n      ticket_number: undefined\n    },\n?   id?: Int,\n?   AND?: ViolationWhereInput | ViolationWhereInput[],\n?   OR?: ViolationWhereInput[],\n?   NOT?: ViolationWhereInput | ViolationWhereInput[],\n?   user_id?: IntFilter | Int,\n?   ticket_comment?: StringFilter | String,\n?   system_comment?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   total_charge?: FloatFilter | Float,\n?   is_car_registered?: BoolFilter | Boolean,\n?   registered_car_id?: IntNullableFilter | Int | Null,\n?   place_login_time?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   deleted_at?: StringNullableFilter | String | Null,\n?   is_locked?: BoolFilter | Boolean,\n?   session_id?: StringFilter | String,\n?   created_by?: UserRelationFilter | UserWhereInput,\n?   images?: ViolationImageListRelationFilter,\n?   place?: PlaceRelationFilter | PlaceWhereInput,\n?   plate_info?: PlateInfoNullableRelationFilter | PlateInfoWhereInput | Null,\n?   registered_car?: CarNullableRelationFilter | CarWhereInput | Null,\n?   rules?: ViolationRuleListRelationFilter\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nArgument `where` of type ViolationWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:16:37"}
{"level":"error","message":"this.prisma.violation.find is not a function","timestamp":"2024-06-12 09:17:08"}
{"level":"error","message":"this.prisma.violation.find is not a function","timestamp":"2024-06-12 09:17:08"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findUnique()` invocation:\n\n{\n  where: {\n    ticket_number: undefined,\n?   id?: Int,\n?   violation_id?: Int,\n?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   OR?: TicketInfoWhereInput[],\n?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   ticket_image?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   payment_date?: StringNullableFilter | String | Null,\n?   barcode_image?: StringFilter | String,\n?   serial_number?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   violation?: ViolationRelationFilter | ViolationWhereInput\n  }\n}\n\nArgument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:21:47"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findUnique()` invocation:\n\n{\n  where: {\n    ticket_number: undefined,\n?   id?: Int,\n?   violation_id?: Int,\n?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   OR?: TicketInfoWhereInput[],\n?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   ticket_image?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   payment_date?: StringNullableFilter | String | Null,\n?   barcode_image?: StringFilter | String,\n?   serial_number?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   violation?: ViolationRelationFilter | ViolationWhereInput\n  }\n}\n\nArgument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:21:47"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findUnique()` invocation:\n\n{\n  where: {\n    ticket_number: undefined,\n?   id?: Int,\n?   violation_id?: Int,\n?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   OR?: TicketInfoWhereInput[],\n?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   ticket_image?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   payment_date?: StringNullableFilter | String | Null,\n?   barcode_image?: StringFilter | String,\n?   serial_number?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   violation?: ViolationRelationFilter | ViolationWhereInput\n  }\n}\n\nArgument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:22:08"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findUnique()` invocation:\n\n{\n  where: {\n    ticket_number: undefined,\n?   id?: Int,\n?   violation_id?: Int,\n?   AND?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   OR?: TicketInfoWhereInput[],\n?   NOT?: TicketInfoWhereInput | TicketInfoWhereInput[],\n?   ticket_image?: StringFilter | String,\n?   print_option?: StringFilter | String,\n?   payment_date?: StringNullableFilter | String | Null,\n?   barcode_image?: StringFilter | String,\n?   serial_number?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   violation?: ViolationRelationFilter | ViolationWhereInput\n  }\n}\n\nArgument `where` of type TicketInfoWhereUniqueInput needs at least one of `id`, `ticket_number` or `violation_id` arguments. Available options are marked with ?.","timestamp":"2024-06-12 09:22:08"}
{"level":"error","message":"this.prisma.ticketInfo.find is not a function","timestamp":"2024-06-12 09:22:36"}
{"level":"error","message":"this.prisma.ticketInfo.find is not a function","timestamp":"2024-06-12 09:22:36"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 12:07:25"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 12:07:25"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 12:26:48"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-12 12:26:48"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-13 20:49:34"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-13 20:49:34"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-06-13 20:50:08"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-06-13 20:50:08"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-13 20:50:08"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-13 20:50:08"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-13 20:50:31"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-13 20:50:31"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:20"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:20"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:37"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:41"}
{"level":"error","message":"\nInvalid `prisma.user.findUnique()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-14 15:34:41"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:41"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-14 15:34:41"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-14 15:35:23"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-14 15:35:23"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-14 15:35:23"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-14 15:35:23"}
{"level":"error","message":"ticketNumber is not defined","timestamp":"2024-06-14 15:36:28"}
{"level":"error","message":"ticketNumber is not defined","timestamp":"2024-06-14 15:36:28"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:29"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:29"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:33"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:33"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:33"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-06-15 20:43:33"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-18 13:45:21"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-18 13:45:21"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-18 13:45:23"}
{"level":"error","message":"jwt expired","timestamp":"2024-06-18 13:45:23"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:00:40"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:00:40"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:13:27"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:13:27"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:18:25"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:18:25"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:23:49"}
{"level":"error","message":"Could not find car","timestamp":"2024-06-18 14:23:49"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    partner: true,\n    ~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `partner` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:44:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    partner: true,\n    ~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `partner` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:44:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    partner: true,\n    ~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `partner` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:44:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    partner: true,\n    ~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `partner` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:44:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_places: true,\n    ~~~~~~~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `normal_places` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:46:17"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_places: true,\n    ~~~~~~~~~~~~~\n?   normal_place?: true,\n?   residential?: true,\n?   apartment?: true,\n?   violations?: true\n  }\n}\n\nUnknown field `normal_places` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-07-21 03:46:17"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null,\n    ~~~~~~~~~~\n?   AND?: NormalPlaceWhereInput | NormalPlaceWhereInput[],\n?   OR?: NormalPlaceWhereInput[],\n?   NOT?: NormalPlaceWhereInput | NormalPlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   partner_id?: IntNullableFilter | Int | Null,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   partner?: PartnerNullableRelationFilter | PartnerWhereInput | Null,\n?   place?: PlaceRelationFilter | PlaceWhereInput\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nUnknown argument `deleted_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:03:15"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null,\n    ~~~~~~~~~~\n?   AND?: NormalPlaceWhereInput | NormalPlaceWhereInput[],\n?   OR?: NormalPlaceWhereInput[],\n?   NOT?: NormalPlaceWhereInput | NormalPlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   partner_id?: IntNullableFilter | Int | Null,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   partner?: PartnerNullableRelationFilter | PartnerWhereInput | Null,\n?   place?: PlaceRelationFilter | PlaceWhereInput\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nUnknown argument `deleted_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:03:15"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   partner_id?: SortOrder | SortOrderInput,\n?   location?: SortOrder,\n?   policy?: SortOrder,\n?   code?: SortOrder,\n?   place_id?: SortOrder,\n?   partner?: PartnerOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:03:41"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   partner_id?: SortOrder | SortOrderInput,\n?   location?: SortOrder,\n?   policy?: SortOrder,\n?   code?: SortOrder,\n?   place_id?: SortOrder,\n?   partner?: PartnerOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:03:41"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    policy: undefined,\n    code: undefined,\n    place_type: \"normal\",\n    normal_place: {\n      create: {\n        location: undefined,\n        policy: undefined,\n        code: undefined,\n        partner_id: NaN\n      }\n    },\n+   location: String\n  }\n}\n\nArgument `location` is missing.","timestamp":"2024-07-21 05:04:43"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    policy: undefined,\n    code: undefined,\n    place_type: \"normal\",\n    normal_place: {\n      create: {\n        location: undefined,\n        policy: undefined,\n        code: undefined,\n        partner_id: NaN\n      }\n    },\n+   location: String\n  }\n}\n\nArgument `location` is missing.","timestamp":"2024-07-21 05:04:43"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:05:23"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:05:23"}
{"level":"error","message":"Unexpected token } in JSON at position 33","timestamp":"2024-07-21 05:05:41"}
{"level":"error","message":[{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:05:45"}
{"level":"error","message":[{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:05:45"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Alexandria\",\n    policy: \"No policy\",\n    code: \"ALX\",\n    place_type: \"normal\",\n    normal_place: {\n      create: {\n        location: \"Alexandria\",\n        policy: \"No policy\",\n        code: \"ALX\",\n        partner_id: NaN\n      }\n    },\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-07-21 05:06:13"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Alexandria\",\n    policy: \"No policy\",\n    code: \"ALX\",\n    place_type: \"normal\",\n    normal_place: {\n      create: {\n        location: \"Alexandria\",\n        policy: \"No policy\",\n        code: \"ALX\",\n        partner_id: NaN\n      }\n    },\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-07-21 05:06:13"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  data: {\n    email: undefined,\n    city: undefined,\n    postal_code: undefined,\n    address: undefined,\n    other_address: undefined,\n    fax_number: undefined,\n    phone_number: undefined,\n    created_at: \"21.07.2024 05:08\",\n+   name: String\n  }\n}\n\nArgument `name` is missing.","timestamp":"2024-07-21 05:08:11"}
{"level":"error","message":"\nInvalid `prisma.partner.create()` invocation:\n\n{\n  data: {\n    email: undefined,\n    city: undefined,\n    postal_code: undefined,\n    address: undefined,\n    other_address: undefined,\n    fax_number: undefined,\n    phone_number: undefined,\n    created_at: \"21.07.2024 05:08\",\n+   name: String\n  }\n}\n\nArgument `name` is missing.","timestamp":"2024-07-21 05:08:11"}
{"level":"error","message":[{"error":"name cannot be null or empty","field":"name"},{"error":"email cannot be null or empty","field":"email"},{"error":"city cannot be null or empty","field":"city"},{"error":"postal_code cannot be null or empty","field":"postal_code"},{"error":"address cannot be null or empty","field":"address"},{"error":"other_address cannot be null or empty","field":"other_address"},{"error":"fax_number cannot be null or empty","field":"fax_number"},{"error":"phone_number cannot be null or empty","field":"phone_number"}],"timestamp":"2024-07-21 05:08:43"}
{"level":"error","message":[{"error":"name cannot be null or empty","field":"name"},{"error":"email cannot be null or empty","field":"email"},{"error":"city cannot be null or empty","field":"city"},{"error":"postal_code cannot be null or empty","field":"postal_code"},{"error":"address cannot be null or empty","field":"address"},{"error":"other_address cannot be null or empty","field":"other_address"},{"error":"fax_number cannot be null or empty","field":"fax_number"},{"error":"phone_number cannot be null or empty","field":"phone_number"}],"timestamp":"2024-07-21 05:08:43"}
{"level":"error","message":"\nInvalid `prisma.residentialQuarter.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   location?: SortOrder,\n?   policy?: SortOrder,\n?   code?: SortOrder,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   place?: PlaceOrderByWithRelationInput\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:14:19"}
{"level":"error","message":"\nInvalid `prisma.residentialQuarter.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   location?: SortOrder,\n?   policy?: SortOrder,\n?   code?: SortOrder,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   place?: PlaceOrderByWithRelationInput\n  }\n}\n\nUnknown argument `created_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:14:19"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:17:03"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:17:03"}
{"level":"error","message":"\nInvalid `prisma.apartment.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null,\n    ~~~~~~~~~~\n?   AND?: ApartmentWhereInput | ApartmentWhereInput[],\n?   OR?: ApartmentWhereInput[],\n?   NOT?: ApartmentWhereInput | ApartmentWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   place?: PlaceRelationFilter | PlaceWhereInput\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nUnknown argument `deleted_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:20:58"}
{"level":"error","message":"\nInvalid `prisma.apartment.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null,\n    ~~~~~~~~~~\n?   AND?: ApartmentWhereInput | ApartmentWhereInput[],\n?   OR?: ApartmentWhereInput[],\n?   NOT?: ApartmentWhereInput | ApartmentWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   place_id?: IntFilter | Int,\n?   place?: PlaceRelationFilter | PlaceWhereInput\n  },\n  orderBy: {\n    created_at: \"desc\"\n  }\n}\n\nUnknown argument `deleted_at`. Available options are marked with ?.","timestamp":"2024-07-21 05:20:58"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:22:37"}
{"level":"error","message":[{"error":"location cannot be null or empty","field":"location"},{"error":"policy cannot be null or empty","field":"policy"},{"error":"code cannot be null or empty","field":"code"}],"timestamp":"2024-07-21 05:22:37"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Maadi Top roof building no.13\",\n    policy: \"Private policy\",\n    code: \"MR B N 13\",\n    place_type: \"apartment\",\n    apartment: {\n      create: {\n        location: \"Maadi Top roof building no.13\",\n        policy: \"Private policy\",\n        code: \"MR B N 13\"\n      }\n    },\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-07-21 05:24:21"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"Maadi Top roof building no.13\",\n    policy: \"Private policy\",\n    code: \"MR B N 13\",\n    place_type: \"apartment\",\n    apartment: {\n      create: {\n        location: \"Maadi Top roof building no.13\",\n        policy: \"Private policy\",\n        code: \"MR B N 13\"\n      }\n    },\n+   created_at: String\n  }\n}\n\nArgument `created_at` is missing.","timestamp":"2024-07-21 05:24:21"}
{"level":"error","message":"No user was found","timestamp":"2024-07-21 05:31:26"}
{"level":"error","message":"No user was found","timestamp":"2024-07-21 05:31:26"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-21 05:31:26"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-21 05:31:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:45"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:45"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:51"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:51"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:56"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:32:56"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:33:52"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 05:33:52"}
{"level":"error","message":"Autosys server error","timestamp":"2024-07-21 06:45:02"}
{"level":"error","message":"Autosys server error","timestamp":"2024-07-21 06:45:02"}
{"level":"error","message":"Autosys server error","timestamp":"2024-07-21 06:47:28"}
{"level":"error","message":"Autosys server error","timestamp":"2024-07-21 06:47:28"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 10:48:33"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-21 10:48:33"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-21 10:48:36"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-21 10:48:36"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-21 10:48:39"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-21 10:48:39"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-07-22 01:04:32"}
{"level":"error","message":"promiseAsyncWrapper is not defined","timestamp":"2024-07-22 01:04:32"}
{"level":"error","message":[{"error":"plate_number cannot be null or empty","field":"plate_number"},{"error":"parking_type cannot be null or empty","field":"parking_type"},{"error":"subscription_plan_days cannot be null or empty","field":"subscription_plan_days"}],"timestamp":"2024-07-22 01:06:05"}
{"level":"error","message":[{"error":"plate_number cannot be null or empty","field":"plate_number"},{"error":"parking_type cannot be null or empty","field":"parking_type"},{"error":"subscription_plan_days cannot be null or empty","field":"subscription_plan_days"}],"timestamp":"2024-07-22 01:06:05"}
{"level":"error","message":[{"error":"plate_number cannot be null or empty","field":"plate_number"},{"error":"parking_type cannot be null or empty","field":"parking_type"},{"error":"subscription_plan_days cannot be null or empty","field":"subscription_plan_days"},{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-22 01:32:22"}
{"level":"error","message":[{"error":"plate_number cannot be null or empty","field":"plate_number"},{"error":"parking_type cannot be null or empty","field":"parking_type"},{"error":"subscription_plan_days cannot be null or empty","field":"subscription_plan_days"},{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-22 01:32:22"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-22 01:32:32"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-22 01:32:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    registration_type: \"residential\",\n    residential_car: {\n      residential_quarter_id: 1\n    }\n  },\n  include: {\n    residential_car: {\n      residential_quarter: true,\n      ~~~~~~~~~~~~~~~~~~~\n?     where?: ResidentialCarWhereInput\n    }\n  }\n}\n\nUnknown argument `residential_quarter`. Available options are marked with ?.","timestamp":"2024-07-22 01:43:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    registration_type: \"residential\",\n    residential_car: {\n      residential_quarter_id: 1\n    }\n  },\n  include: {\n    residential_car: {\n      residential_quarter: true,\n      ~~~~~~~~~~~~~~~~~~~\n?     where?: ResidentialCarWhereInput\n    }\n  }\n}\n\nUnknown argument `residential_quarter`. Available options are marked with ?.","timestamp":"2024-07-22 01:43:06"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"},{"error":"max_cars_registrations cannot be null or empty","field":"max_cars_registrations"},{"error":"quarter_name cannot be null or empty","field":"quarter_name"}],"timestamp":"2024-07-22 06:32:06"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"},{"error":"max_cars_registrations cannot be null or empty","field":"max_cars_registrations"},{"error":"quarter_name cannot be null or empty","field":"quarter_name"}],"timestamp":"2024-07-22 06:32:06"}
{"level":"error","message":"\nInvalid `prisma.residentialDashboard.create()` invocation:\n\n{\n  data: {\n    access_username: \"rdx\",\n    access_code: {},\n                 ~~\n    residential_quarter_id: 1,\n    max_cars_registrations: 20,\n    quarter_name: \"RDX East Gate\",\n    created_at: \"22.07.2024 06:36\"\n  }\n}\n\nArgument `access_code`: Invalid value provided. Expected String, provided Object.","timestamp":"2024-07-22 06:36:41"}
{"level":"error","message":"\nInvalid `prisma.residentialDashboard.create()` invocation:\n\n{\n  data: {\n    access_username: \"rdx\",\n    access_code: {},\n                 ~~\n    residential_quarter_id: 1,\n    max_cars_registrations: 20,\n    quarter_name: \"RDX East Gate\",\n    created_at: \"22.07.2024 06:36\"\n  }\n}\n\nArgument `access_code`: Invalid value provided. Expected String, provided Object.","timestamp":"2024-07-22 06:36:41"}
{"level":"error","message":"OK is not defined","timestamp":"2024-07-22 06:37:43"}
{"level":"error","message":"OK is not defined","timestamp":"2024-07-22 06:37:43"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-07-22 06:39:32"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-07-22 06:39:32"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 06:41:16"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 06:41:16"}
{"level":"error","message":"Auth.comparePassword is not a function","timestamp":"2024-07-22 06:41:41"}
{"level":"error","message":"Auth.comparePassword is not a function","timestamp":"2024-07-22 06:41:41"}
{"level":"error","message":"Cannot destructure property 'normal' of 'undefined' as it is undefined.","timestamp":"2024-07-22 06:42:04"}
{"level":"error","message":"Cannot destructure property 'normal' of 'undefined' as it is undefined.","timestamp":"2024-07-22 06:42:04"}
{"level":"error","message":"data and hash arguments required","timestamp":"2024-07-22 06:42:42"}
{"level":"error","message":"data and hash arguments required","timestamp":"2024-07-22 06:42:42"}
{"level":"error","message":"data and hash arguments required","timestamp":"2024-07-22 06:42:55"}
{"level":"error","message":"data and hash arguments required","timestamp":"2024-07-22 06:42:55"}
{"level":"error","message":"Wrong password","timestamp":"2024-07-22 06:43:20"}
{"level":"error","message":"Wrong password","timestamp":"2024-07-22 06:43:20"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:27:53"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:27:53"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:27:58"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:27:58"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:28:41"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:28:41"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:29:42"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:29:42"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:30:02"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:30:02"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:30:26"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:30:26"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:32:14"}
{"level":"error","message":"No such dashboard exists","timestamp":"2024-07-22 07:32:14"}
{"level":"error","message":"Wrong password","timestamp":"2024-07-22 07:32:21"}
{"level":"error","message":"Wrong password","timestamp":"2024-07-22 07:32:21"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.findMany()` invocation:\n\n{\n  where: {\n+   residential_quarter_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    registered_car: true\n  }\n}\n\nArgument `residential_quarter_id` is missing.","timestamp":"2024-07-22 07:50:25"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.findMany()` invocation:\n\n{\n  where: {\n+   residential_quarter_id: {\n+     equals: Int | IntFieldRefInput,\n+     in: Int[],\n+     notIn: Int[],\n+     lt: Int | IntFieldRefInput,\n+     lte: Int | IntFieldRefInput,\n+     gt: Int | IntFieldRefInput,\n+     gte: Int | IntFieldRefInput,\n+     not: Int | NestedIntFilter\n+   }\n  },\n  include: {\n    registered_car: true\n  }\n}\n\nArgument `residential_quarter_id` is missing.","timestamp":"2024-07-22 07:50:25"}
{"level":"error","message":"Car already registered as residential","timestamp":"2024-07-22 08:25:59"}
{"level":"error","message":"Car already registered as residential","timestamp":"2024-07-22 08:25:59"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-07-22 08:26:40"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-07-22 08:26:40"}
{"level":"error","message":"Max cars registrations reached","timestamp":"2024-07-22 08:49:30"}
{"level":"error","message":"Max cars registrations reached","timestamp":"2024-07-22 08:49:30"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-22 08:49:43"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-22 08:49:43"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-22 12:11:09"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-22 12:11:09"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"23.07.2024 02:04\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-07-23 02:04:50"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    deleted_at: \"23.07.2024 02:04\"\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-07-23 02:04:50"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-23 02:08:21"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-23 02:08:21"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-23 10:13:20"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-23 10:13:20"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-23 10:37:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-23 10:37:26"}
{"level":"error","message":"pl is not defined","timestamp":"2024-07-23 10:42:06"}
{"level":"error","message":"pl is not defined","timestamp":"2024-07-23 10:42:06"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-23 12:58:56"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1,\n    session_id: \"session-KO8HdIjTsuGrpj2aoyZX\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    plate_info: true,\n    ticket_info: true,\n    images: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-23 12:58:56"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-23 12:59:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-23 12:59:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-23 13:00:08"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-23 13:00:08"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-23 13:08:24"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-07-23 13:08:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"23.07.2024 13:08\",\n        expire_date: \"26.07.2024 13:08\",\n        residential_quarter_id: 1\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-23 13:08:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"23.07.2024 13:08\",\n        expire_date: \"26.07.2024 13:08\",\n        residential_quarter_id: 1\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-23 13:08:40"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-23 13:18:37"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-23 13:18:37"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-07-23 13:19:24"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-07-23 13:19:24"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-23 13:19:24"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-23 13:19:24"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-27 10:26:37"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-27 10:26:37"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-27 10:26:46"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-27 10:26:46"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 10:27:55"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 10:27:55"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 11:13:08"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 11:13:08"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 13:53:51"}
{"level":"error","message":"Cannot read properties of undefined (reading 'count')","timestamp":"2024-07-27 13:53:51"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-27 13:57:48"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-27 13:57:48"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-27 14:16:54"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-27 14:16:54"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-27 14:17:50"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-27 14:17:50"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    user_id: 1,\n    session_id: \"session-4WLVKg8tlkKWD22R37Mz\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-27 14:18:55"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    user_id: 1,\n    session_id: \"session-4WLVKg8tlkKWD22R37Mz\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-27 14:18:55"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"x\",\n    policy: \"x\",\n    code: \"x\",\n    place_type: \"normal\",\n    created_at: \"27.07.2024 14:58\",\n    normal_place: {\n      create: {\n        location: \"x\",\n        policy: \"x\",\n        code: \"x\",\n        partner_id: 1,\n+       place_type: String\n      }\n    }\n  }\n}\n\nArgument `place_type` is missing.","timestamp":"2024-07-27 14:58:05"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n{\n  data: {\n    location: \"x\",\n    policy: \"x\",\n    code: \"x\",\n    place_type: \"normal\",\n    created_at: \"27.07.2024 14:58\",\n    normal_place: {\n      create: {\n        location: \"x\",\n        policy: \"x\",\n        code: \"x\",\n        partner_id: 1,\n+       place_type: String\n      }\n    }\n  }\n}\n\nArgument `place_type` is missing.","timestamp":"2024-07-27 14:58:05"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-27 15:25:47"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-27 15:25:47"}
{"level":"error","message":[{"error":"place_id cannot be null or empty","field":"place_id"}],"timestamp":"2024-07-27 15:34:54"}
{"level":"error","message":[{"error":"place_id cannot be null or empty","field":"place_id"}],"timestamp":"2024-07-27 15:34:54"}
{"level":"error","message":"Cannot read properties of null (reading 'current_total_registered_cars')","timestamp":"2024-07-27 15:35:40"}
{"level":"error","message":"Cannot read properties of null (reading 'current_total_registered_cars')","timestamp":"2024-07-27 15:35:40"}
{"level":"error","message":[{"error":"place_id cannot be null or empty","field":"place_id"}],"timestamp":"2024-07-27 18:54:26"}
{"level":"error","message":[{"error":"place_id cannot be null or empty","field":"place_id"}],"timestamp":"2024-07-27 18:54:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    place_id: NaN,\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"27.07.2024 18:55\",\n        expire_date: \"30.07.2024 18:55\",\n        residential_quarter_id: 1\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-27 18:55:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    place_id: NaN,\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"27.07.2024 18:55\",\n        expire_date: \"30.07.2024 18:55\",\n        residential_quarter_id: 1\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-27 18:55:42"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-28 19:32:28"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-28 19:32:28"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-28 19:32:31"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-28 19:32:31"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:46:28"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:46:28"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:47:29"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:47:29"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:47:33"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nCan't reach database server at `localhost:3306`\n\nPlease make sure your database server is running at `localhost:3306`.","timestamp":"2024-07-31 02:47:33"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:33"}
{"level":"error","message":"\nInvalid `prisma.user.findMany()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:33"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:33"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:33"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:34"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:34"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:58"}
{"level":"error","message":"\nInvalid `prisma.user.count()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-07-31 02:48:58"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-31 03:00:04"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-31 03:00:04"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-31 03:00:25"}
{"level":"error","message":[{"error":"residential_quarter_id cannot be null or empty","field":"residential_quarter_id"}],"timestamp":"2024-07-31 03:00:25"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-31 03:28:10"}
{"level":"error","message":"jwt expired","timestamp":"2024-07-31 03:28:10"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:29:35"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:29:35"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:30:17"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:30:17"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    location: \"x\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null,\n    ~~~~~~~~~~\n?   created_at?: String | StringFieldUpdateOperationsInput,\n?   updated_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   deleted_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   place_type?: PlaceType | EnumPlaceTypeFieldUpdateOperationsInput,\n?   normal_place?: NormalPlaceUpdateOneWithoutPlaceNestedInput,\n?   residential?: ResidentialQuarterUpdateOneWithoutPlaceNestedInput,\n?   apartment?: ApartmentUpdateOneWithoutPlaceNestedInput,\n?   violations?: ViolationUpdateManyWithoutPlaceNestedInput,\n?   registered_cars?: RegisteredCarUpdateManyWithoutPlaceNestedInput\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-07-31 03:31:31"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    location: \"x\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null,\n    ~~~~~~~~~~\n?   created_at?: String | StringFieldUpdateOperationsInput,\n?   updated_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   deleted_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   place_type?: PlaceType | EnumPlaceTypeFieldUpdateOperationsInput,\n?   normal_place?: NormalPlaceUpdateOneWithoutPlaceNestedInput,\n?   residential?: ResidentialQuarterUpdateOneWithoutPlaceNestedInput,\n?   apartment?: ApartmentUpdateOneWithoutPlaceNestedInput,\n?   violations?: ViolationUpdateManyWithoutPlaceNestedInput,\n?   registered_cars?: RegisteredCarUpdateManyWithoutPlaceNestedInput\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-07-31 03:31:31"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    location: \"xy\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null,\n    ~~~~~~~~~~\n?   created_at?: String | StringFieldUpdateOperationsInput,\n?   updated_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   deleted_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   place_type?: PlaceType | EnumPlaceTypeFieldUpdateOperationsInput,\n?   normal_place?: NormalPlaceUpdateOneWithoutPlaceNestedInput,\n?   residential?: ResidentialQuarterUpdateOneWithoutPlaceNestedInput,\n?   apartment?: ApartmentUpdateOneWithoutPlaceNestedInput,\n?   violations?: ViolationUpdateManyWithoutPlaceNestedInput,\n?   registered_cars?: RegisteredCarUpdateManyWithoutPlaceNestedInput\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-07-31 03:31:35"}
{"level":"error","message":"\nInvalid `prisma.place.update()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  data: {\n    location: \"xy\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null,\n    ~~~~~~~~~~\n?   created_at?: String | StringFieldUpdateOperationsInput,\n?   updated_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   deleted_at?: String | NullableStringFieldUpdateOperationsInput | Null,\n?   place_type?: PlaceType | EnumPlaceTypeFieldUpdateOperationsInput,\n?   normal_place?: NormalPlaceUpdateOneWithoutPlaceNestedInput,\n?   residential?: ResidentialQuarterUpdateOneWithoutPlaceNestedInput,\n?   apartment?: ApartmentUpdateOneWithoutPlaceNestedInput,\n?   violations?: ViolationUpdateManyWithoutPlaceNestedInput,\n?   registered_cars?: RegisteredCarUpdateManyWithoutPlaceNestedInput\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-07-31 03:31:35"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: \"xy\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-07-31 03:38:32"}
{"level":"error","message":"\nInvalid `prisma.normalPlace.update()` invocation:\n\n{\n  where: {\n+   id: Int\n  },\n  data: {\n    location: \"xy\",\n    policy: \"x\",\n    code: \"x\",\n    partner_id: null\n  }\n}\n\nArgument `id` is missing.","timestamp":"2024-07-31 03:38:32"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:42:43"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:42:43"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:49:16"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:49:16"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:49:19"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 03:49:19"}
{"level":"error","message":"Cannot read properties of undefined (reading 'create')","timestamp":"2024-07-31 03:49:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'create')","timestamp":"2024-07-31 03:49:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:37:40"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:37:40"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:38:36"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:38:36"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:38:49"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:38:49"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:46:16"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:46:16"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:48:33"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:48:33"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:52:46"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:52:46"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:26"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:27"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 12:53:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    start_date: \"2024-07-03T09:55:59.912Z\",\n    end_date: \"2024-07-19T09:56:01.645Z\",\n    created_at: \"31.07.2024 12:56\",\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 12:56:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    start_date: \"2024-07-03T09:55:59.912Z\",\n    end_date: \"2024-07-19T09:56:01.645Z\",\n    created_at: \"31.07.2024 12:56\",\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 12:56:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    start_date: \"2024-07-03T09:55:59.912Z\",\n    ~~~~~~~~~~\n    end_date: \"2024-07-19T09:56:01.645Z\",\n    created_at: \"31.07.2024 12:56\",\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `start_date`. Available options are marked with ?.","timestamp":"2024-07-31 12:56:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    start_date: \"2024-07-03T09:55:59.912Z\",\n    ~~~~~~~~~~\n    end_date: \"2024-07-19T09:56:01.645Z\",\n    created_at: \"31.07.2024 12:56\",\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `start_date`. Available options are marked with ?.","timestamp":"2024-07-31 12:56:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    created_at: \"31.07.2024 12:56\",\n    ~~~~~~~~~~\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 12:56:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    created_at: \"31.07.2024 12:56\",\n    ~~~~~~~~~~\n    registration_type: \"shop\",\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:56\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 12:56:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"shop\",\n                       ~~~~~~\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\"\n      }\n    }\n  }\n}\n\nInvalid value for argument `registration_type`. Expected RegisteredCarType.","timestamp":"2024-07-31 12:57:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"shop\",\n                       ~~~~~~\n    source_id: null,\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\"\n      }\n    }\n  }\n}\n\nInvalid value for argument `registration_type`. Expected RegisteredCarType.","timestamp":"2024-07-31 12:57:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    source_id: null,\n    ~~~~~~~~~\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `source_id`. Available options are marked with ?.","timestamp":"2024-07-31 12:57:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    source_id: null,\n    ~~~~~~~~~\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\"\n      }\n    },\n?   id?: Int,\n?   updated_at?: String | Null,\n?   deleted_at?: String | Null,\n?   apartment_car?: ApartmentCarUncheckedCreateNestedOneWithoutRegistered_carInput,\n?   residential_car?: ResidentialCarUncheckedCreateNestedOneWithoutRegistered_carInput\n  }\n}\n\nUnknown argument `source_id`. Available options are marked with ?.","timestamp":"2024-07-31 12:57:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        ~~~~~~~~~~~~\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `plate_number`. Available options are marked with ?.","timestamp":"2024-07-31 12:57:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        ~~~~~~~~~~~~\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:57\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `plate_number`. Available options are marked with ?.","timestamp":"2024-07-31 12:57:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    normal_place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\"\n      }\n    },\n+   plate_number: String\n  }\n}\n\nArgument `plate_number` is missing.","timestamp":"2024-07-31 12:58:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    normal_place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\"\n      }\n    },\n+   plate_number: String\n  }\n}\n\nArgument `plate_number` is missing.","timestamp":"2024-07-31 12:58:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    normal_place_id: 3,\n    plate_number: \"CV89558\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\"\n      }\n    },\n+   car_model: String\n  }\n}\n\nArgument `car_model` is missing.","timestamp":"2024-07-31 12:58:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    normal_place_id: 3,\n    plate_number: \"CV89558\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\"\n      }\n    },\n+   car_model: String\n  }\n}\n\nArgument `car_model` is missing.","timestamp":"2024-07-31 12:58:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        ~~~~~~~~~~~~\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `plate_number`. Available options are marked with ?.","timestamp":"2024-07-31 12:58:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: 3,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        plate_number: \"CV89558\",\n        ~~~~~~~~~~~~\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:58\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `plate_number`. Available options are marked with ?.","timestamp":"2024-07-31 12:58:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n\nForeign key constraint failed on the field: `normal_place_id`","timestamp":"2024-07-31 12:58:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n\nForeign key constraint failed on the field: `normal_place_id`","timestamp":"2024-07-31 12:58:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:59\"\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 12:59:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 12:59\"\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 12:59:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 13:00\",\n        normal_place: {\n          connect: {\n            id: 3\n          }\n        }\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 13:00:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T09:55:59.912Z\",\n        expire_date: \"2024-07-19T09:56:01.645Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 13:00\",\n        normal_place: {\n          connect: {\n            id: 3\n          }\n        }\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 13:00:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n\nForeign key constraint failed on the field: `normal_place_id`","timestamp":"2024-07-31 13:00:45"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n\nForeign key constraint failed on the field: `normal_place_id`","timestamp":"2024-07-31 13:00:45"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:01:55"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:01:55"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:02:38"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:02:38"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:03:08"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:03:08"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:03:17"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:03:17"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:04:21"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    images: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    ticket_info: true,\n    plate_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:04:21"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    user_id: 1,\n    session_id: \"session-Q48N8lEmbK4WAbkNnclw\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:07:18"}
{"level":"error","message":"\nInvalid `prisma.violation.findMany()` invocation:\n\n{\n  where: {\n    user_id: 1,\n    session_id: \"session-Q48N8lEmbK4WAbkNnclw\"\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-07-31 13:07:18"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:08:02"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:08:02"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:08:44"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:08:44"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:10:13"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:10:13"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"\",\n    system_comment: \"\",\n    place_id: 3,\n    images: {\n      create: [\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1722420534382_38033516.png\",\n          date: \"31.07.2024 13:08\"\n        }\n      ]\n    },\n    created_at: \"31.07.2024 13:15\",\n    place_login_time: \"31.07.2024 13:07\",\n    print_option: \"Fastet på kjøretøyet\",\n    total_charge: 100,\n    ticket_info: {\n      create: {\n        ticket_number: \"123\",\n        ticket_image: \"https://app.gensolv.no/ticket\",\n        print_option: \"Fastet på kjøretøyet\",\n        barcode_image: \"barcode\",\n        serial_number: \"123\",\n        created_at: \"31.07.2024 13:15\"\n      }\n    },\n    rules: {\n      create: [\n        {\n          name: \"zer\",\n          charge: 100,\n          id: undefined,\n          policy_time: 0,\n          extras: {\n            create: {\n              meter_receipt_number: false,\n              meter_number: false,\n              expiry_date: false,\n              paid_amount: false\n            }\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: \"PEUGEOT\",\n        plate_number: \"CV89558\",\n        manufacture_year: \"2018\",\n        car_description: \"Varebil kl 2\",\n        car_type: \"KJORETOY\",\n        car_color: \"Grå\",\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: null,\n    ~~~~~~~~~~~~~~~~~\n    session_id: \"session-Q48N8lEmbK4WAbkNnclw\",\n?   id?: Int,\n?   deleted_at?: String | Null,\n?   is_locked?: Boolean\n  }\n}\n\nUnknown argument `registered_car_id`. Available options are marked with ?.","timestamp":"2024-07-31 13:15:33"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n{\n  data: {\n    user_id: 1,\n    ticket_comment: \"\",\n    system_comment: \"\",\n    place_id: 3,\n    images: {\n      create: [\n        {\n          path: \"http://192.168.1.5:3000/public/images/cars/1722420534382_38033516.png\",\n          date: \"31.07.2024 13:08\"\n        }\n      ]\n    },\n    created_at: \"31.07.2024 13:15\",\n    place_login_time: \"31.07.2024 13:07\",\n    print_option: \"Fastet på kjøretøyet\",\n    total_charge: 100,\n    ticket_info: {\n      create: {\n        ticket_number: \"123\",\n        ticket_image: \"https://app.gensolv.no/ticket\",\n        print_option: \"Fastet på kjøretøyet\",\n        barcode_image: \"barcode\",\n        serial_number: \"123\",\n        created_at: \"31.07.2024 13:15\"\n      }\n    },\n    rules: {\n      create: [\n        {\n          name: \"zer\",\n          charge: 100,\n          id: undefined,\n          policy_time: 0,\n          extras: {\n            create: {\n              meter_receipt_number: false,\n              meter_number: false,\n              expiry_date: false,\n              paid_amount: false\n            }\n          },\n          extras_values: {\n            create: {\n              meter_receipt_number: null,\n              meter_number: null,\n              expiry_date: null,\n              paid_amount: null\n            }\n          }\n        }\n      ]\n    },\n    plate_info: {\n      create: {\n        car_model: \"PEUGEOT\",\n        plate_number: \"CV89558\",\n        manufacture_year: \"2018\",\n        car_description: \"Varebil kl 2\",\n        car_type: \"KJORETOY\",\n        car_color: \"Grå\",\n        country_name: \"Norway\",\n        country_code: \"NO\"\n      }\n    },\n    is_car_registered: false,\n    registered_car_id: null,\n    ~~~~~~~~~~~~~~~~~\n    session_id: \"session-Q48N8lEmbK4WAbkNnclw\",\n?   id?: Int,\n?   deleted_at?: String | Null,\n?   is_locked?: Boolean\n  }\n}\n\nUnknown argument `registered_car_id`. Available options are marked with ?.","timestamp":"2024-07-31 13:15:33"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:19:03"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:19:03"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:19:15"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:19:15"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:22:09"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:22:09"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:22:54"}
{"level":"error","message":"Cannot read properties of null (reading 'place_id')","timestamp":"2024-07-31 13:22:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: undefined,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T10:19:09.266Z\",\n        expire_date: \"2024-07-12T10:19:10.700Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 13:23\"\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 13:23:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    place_id: undefined,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"2024-07-03T10:19:09.266Z\",\n        expire_date: \"2024-07-12T10:19:10.700Z\",\n        registeration_source: \"system\",\n        normal_place_id: 3,\n        created_at: \"31.07.2024 13:23\"\n      }\n    },\n+   place: {\n+     create: PlaceCreateWithoutRegistered_carsInput | PlaceUncheckedCreateWithoutRegistered_carsInput,\n+     connectOrCreate: PlaceCreateOrConnectWithoutRegistered_carsInput,\n+     connect: PlaceWhereUniqueInput\n+   }\n  }\n}\n\nArgument `place` is missing.","timestamp":"2024-07-31 13:23:03"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:25\",\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    registered_by: \"system\",\n    place_location: \"xxxxcdf\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 13:25:41"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:25\",\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    registered_by: \"system\",\n    place_location: \"xxxxcdf\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 13:25:41"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:25\",\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    registered_by: \"system\",\n    place_location: \"xxxxcdf\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 13:25:56"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:25\",\n    registration_source: \"system\",\n    ~~~~~~~~~~~~~~~~~~~\n    registered_by: \"system\",\n    place_location: \"xxxxcdf\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3\n  }\n}\n\nUnknown argument `registration_source`. Available options are marked with ?.","timestamp":"2024-07-31 13:25:56"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:26\",\n    registered_by: \"system\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3,\n+   place_location: String\n  }\n}\n\nArgument `place_location` is missing.","timestamp":"2024-07-31 13:26:23"}
{"level":"error","message":"\nInvalid `prisma.carLog.create()` invocation:\n\n{\n  data: {\n    start_date: \"2024-07-03T10:19:09.266Z\",\n    end_date: \"2024-07-12T10:19:10.700Z\",\n    created_at: \"31.07.2024 13:26\",\n    registered_by: \"system\",\n    place_code: \"fda\",\n    place_policy: \"fdaf\",\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    place_id: 3,\n+   place_location: String\n  }\n}\n\nArgument `place_location` is missing.","timestamp":"2024-07-31 13:26:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:26:35"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:26:35"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:26:38"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findMany')","timestamp":"2024-07-31 13:26:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   plate_number?: SortOrder,\n?   car_model?: SortOrder,\n?   car_type?: SortOrder,\n?   car_description?: SortOrder,\n?   car_color?: SortOrder,\n?   manufacture_year?: SortOrder,\n?   registration_type?: SortOrder,\n?   updated_at?: SortOrder | SortOrderInput,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   apartment_car?: ApartmentCarOrderByWithRelationInput,\n?   normal_car?: NormalCarOrderByWithRelationInput,\n?   residential_car?: ResidentialCarOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  },\n  include: {\n    place: true\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 13:27:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   plate_number?: SortOrder,\n?   car_model?: SortOrder,\n?   car_type?: SortOrder,\n?   car_description?: SortOrder,\n?   car_color?: SortOrder,\n?   manufacture_year?: SortOrder,\n?   registration_type?: SortOrder,\n?   updated_at?: SortOrder | SortOrderInput,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   apartment_car?: ApartmentCarOrderByWithRelationInput,\n?   normal_car?: NormalCarOrderByWithRelationInput,\n?   residential_car?: ResidentialCarOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  },\n  include: {\n    place: true\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 13:27:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   plate_number?: SortOrder,\n?   car_model?: SortOrder,\n?   car_type?: SortOrder,\n?   car_description?: SortOrder,\n?   car_color?: SortOrder,\n?   manufacture_year?: SortOrder,\n?   registration_type?: SortOrder,\n?   updated_at?: SortOrder | SortOrderInput,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   apartment_car?: ApartmentCarOrderByWithRelationInput,\n?   normal_car?: NormalCarOrderByWithRelationInput,\n?   residential_car?: ResidentialCarOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  },\n  include: {\n    place: true\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 13:27:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  orderBy: {\n    created_at: \"desc\",\n    ~~~~~~~~~~\n?   id?: SortOrder,\n?   plate_number?: SortOrder,\n?   car_model?: SortOrder,\n?   car_type?: SortOrder,\n?   car_description?: SortOrder,\n?   car_color?: SortOrder,\n?   manufacture_year?: SortOrder,\n?   registration_type?: SortOrder,\n?   updated_at?: SortOrder | SortOrderInput,\n?   deleted_at?: SortOrder | SortOrderInput,\n?   place_id?: SortOrder,\n?   apartment_car?: ApartmentCarOrderByWithRelationInput,\n?   normal_car?: NormalCarOrderByWithRelationInput,\n?   residential_car?: ResidentialCarOrderByWithRelationInput,\n?   place?: PlaceOrderByWithRelationInput\n  },\n  include: {\n    place: true\n  }\n}\n\nUnknown argument `created_at`. Did you mean `updated_at`? Available options are marked with ?.","timestamp":"2024-07-31 13:27:03"}
{"level":"error","message":"Cannot read properties of undefined (reading 'delete')","timestamp":"2024-07-31 13:27:24"}
{"level":"error","message":"Cannot read properties of undefined (reading 'delete')","timestamp":"2024-07-31 13:27:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.delete()` invocation:\n\n\nForeign key constraint failed on the field: `registered_car_id`","timestamp":"2024-07-31 13:27:45"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.delete()` invocation:\n\n\nForeign key constraint failed on the field: `registered_car_id`","timestamp":"2024-07-31 13:27:45"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-07-31 13:31:48"}
{"level":"error","message":"\nInvalid `prisma.residentialCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-07-31 13:31:48"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:49:40"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-07-31 13:49:40"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `TicketInfo_ticket_number_key`","timestamp":"2024-07-31 13:50:01"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `TicketInfo_ticket_number_key`","timestamp":"2024-07-31 13:50:01"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:51:17"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:51:17"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:53:07"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:53:07"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `TicketInfo_ticket_number_key`","timestamp":"2024-07-31 13:55:50"}
{"level":"error","message":"\nInvalid `prisma.violation.create()` invocation:\n\n\nUnique constraint failed on the constraint: `TicketInfo_ticket_number_key`","timestamp":"2024-07-31 13:55:50"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:56:10"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:56:10"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:58:25"}
{"level":"error","message":"Request failed with status code 500","timestamp":"2024-07-31 13:58:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 3\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: {\n          include: {\n            registered_car: true,\n            ~~~~~~~~~~~~~~\n?           partner?: true,\n?           place?: true,\n?           dashboards?: true,\n?           registered_cars?: true\n          }\n        },\n        apartment: true,\n        residential: true\n      }\n    },\n    residential_car: true,\n    normal_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `NormalPlace`. Available options are marked with ?.","timestamp":"2024-07-31 14:19:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 3\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: {\n          include: {\n            registered_car: true,\n            ~~~~~~~~~~~~~~\n?           partner?: true,\n?           place?: true,\n?           dashboards?: true,\n?           registered_cars?: true\n          }\n        },\n        apartment: true,\n        residential: true\n      }\n    },\n    residential_car: true,\n    normal_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `NormalPlace`. Available options are marked with ?.","timestamp":"2024-07-31 14:19:06"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findFirst()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-08-02 03:19:55"}
{"level":"error","message":"\nInvalid `prisma.ticketInfo.findFirst()` invocation:\n\n\nDatabase `sjekk` does not exist on the database server at `localhost:3306`.","timestamp":"2024-08-02 03:19:55"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:22:42"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:22:42"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:23:01"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:23:01"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:24:51"}
{"level":"error","message":"Ticket not found","timestamp":"2024-08-02 03:24:51"}
{"level":"error","message":"jwt expired","timestamp":"2024-08-02 03:35:06"}
{"level":"error","message":"jwt expired","timestamp":"2024-08-02 03:35:06"}
{"level":"error","message":"No user was found","timestamp":"2024-08-02 03:35:12"}
{"level":"error","message":"No user was found","timestamp":"2024-08-02 03:35:12"}
{"level":"error","message":"jwt expired","timestamp":"2024-08-02 03:35:12"}
{"level":"error","message":"jwt expired","timestamp":"2024-08-02 03:35:12"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-08-02 03:37:17"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-08-02 03:37:17"}
{"level":"error","message":"\nInvalid `prisma.violation.findFirst()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-08-02 03:37:58"}
{"level":"error","message":"\nInvalid `prisma.violation.findFirst()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-08-02 03:37:58"}
{"level":"error","message":"\nInvalid `prisma.violation.findFirst()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-08-02 03:38:00"}
{"level":"error","message":"\nInvalid `prisma.violation.findFirst()` invocation:\n\n{\n  where: {\n    id: 1\n  },\n  include: {\n    place: true,\n    created_by: true,\n    registered_car: true,\n    ~~~~~~~~~~~~~~\n    rules: {\n      include: {\n        extras_values: true,\n        extras: true\n      }\n    },\n    images: true,\n    plate_info: true,\n    ticket_info: true\n  }\n}\n\nUnknown field `registered_car` for include statement on model `Violation`. Available options are marked with ?.","timestamp":"2024-08-02 03:38:00"}
{"level":"error","message":"Cannot read properties of null (reading 'parking_type')","timestamp":"2024-08-02 04:31:59"}
{"level":"error","message":"Cannot read properties of null (reading 'parking_type')","timestamp":"2024-08-02 04:31:59"}
{"level":"error","message":"Cannot read properties of null (reading 'parking_type')","timestamp":"2024-08-02 04:32:41"}
{"level":"error","message":"Cannot read properties of null (reading 'parking_type')","timestamp":"2024-08-02 04:32:41"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:34:30"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:34:30"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:35:39"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:35:39"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:39:46"}
{"level":"error","message":"Car already registered as guest","timestamp":"2024-08-02 04:39:46"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-08-02 04:40:00"}
{"level":"error","message":"Car already registered as reserved","timestamp":"2024-08-02 04:40:00"}
{"level":"error","message":"Autosys server error","timestamp":"2024-08-02 04:40:09"}
{"level":"error","message":"Autosys server error","timestamp":"2024-08-02 04:40:09"}
{"level":"error","message":"Car already exists","timestamp":"2024-08-02 04:48:39"}
{"level":"error","message":"Car already exists","timestamp":"2024-08-02 04:48:39"}
{"level":"error","message":"Car already exists","timestamp":"2024-08-02 04:49:31"}
{"level":"error","message":"Car already exists","timestamp":"2024-08-02 04:49:31"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:16"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:16"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:21"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:21"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:39"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:39"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:57"}
{"level":"error","message":"\nInvalid `prisma.partnerDashboard.create()` invocation:\n\n\nUnique constraint failed on the constraint: `PartnerDashboard_partner_id_key`","timestamp":"2024-09-01 16:03:57"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-02 00:30:03"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-02 00:30:04"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:50"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:50"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:53"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:53"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:56"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:15:56"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:16:15"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:16:15"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:16:24"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-04 06:16:24"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-04 06:16:32"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-04 06:16:32"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-04 06:16:34"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-04 06:16:34"}
{"level":"error","message":"Username already exists","timestamp":"2024-09-05 04:43:15"}
{"level":"error","message":"Username already exists","timestamp":"2024-09-05 04:43:15"}
{"level":"error","message":"Username already exists","timestamp":"2024-09-05 04:43:29"}
{"level":"error","message":"Username already exists","timestamp":"2024-09-05 04:43:29"}
{"level":"error","message":"Email already exists","timestamp":"2024-09-05 04:46:31"}
{"level":"error","message":"Email already exists","timestamp":"2024-09-05 04:46:31"}
{"level":"error","message":"Apartment number already exists","timestamp":"2024-09-05 04:46:39"}
{"level":"error","message":"Apartment number already exists","timestamp":"2024-09-05 04:46:39"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 04:48:04"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 04:48:04"}
{"level":"error","message":"\nInvalid `prisma.apartment.create()` invocation:\n\n{\n  data: {\n    owner_name: \"Ahmed Ali\",\n    username: \"413\",\n    password: \"$2b$10$vey3xNtXIAioO0L4ZlTaeeSG6C.MRvPlzXpq0MMzZusx6LWkwTVJe\",\n    apartment_number: \"XB12\",\n    email: \"aloshhasso9qw9944@gmail.com\",\n    created_at: \"05.09.2024 05:18\",\n    residential_quarter_id: 1,\n+   location: String\n  }\n}\n\nArgument `location` is missing.","timestamp":"2024-09-05 05:18:56"}
{"level":"error","message":"\nInvalid `prisma.apartment.create()` invocation:\n\n{\n  data: {\n    owner_name: \"Ahmed Ali\",\n    username: \"413\",\n    password: \"$2b$10$vey3xNtXIAioO0L4ZlTaeeSG6C.MRvPlzXpq0MMzZusx6LWkwTVJe\",\n    apartment_number: \"XB12\",\n    email: \"aloshhasso9qw9944@gmail.com\",\n    created_at: \"05.09.2024 05:18\",\n    residential_quarter_id: 1,\n+   location: String\n  }\n}\n\nArgument `location` is missing.","timestamp":"2024-09-05 05:18:56"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 06:31:35"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 06:31:35"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 06:32:18"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 06:32:18"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 07:43:11"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 07:43:11"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 07:43:16"}
{"level":"error","message":[{"error":"access_username cannot be null or empty","field":"access_username"},{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 07:43:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:02:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:13:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:13:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:13:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:13:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:19:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:19:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:19:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-05 08:19:24"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:00"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:00"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:21"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:21"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:43"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:43"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:52"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:01:52"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:02:10"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"},{"error":"access_username cannot be null or empty","field":"access_username"}],"timestamp":"2024-09-05 09:02:10"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 09:03:18"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 09:03:18"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 09:03:20"}
{"level":"error","message":[{"error":"access_code cannot be null or empty","field":"access_code"}],"timestamp":"2024-09-05 09:03:20"}
{"level":"error","message":"\nInvalid `prisma.apartment.findUnique()` invocation:\n\n{\n  where: {\n    username: \"yu\",\n?   id?: Int,\n?   AND?: ApartmentWhereInput | ApartmentWhereInput[],\n?   OR?: ApartmentWhereInput[],\n?   NOT?: ApartmentWhereInput | ApartmentWhereInput[],\n?   owner_name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   apartment_number?: StringFilter | String,\n?   email?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   residential_quarter_id?: IntFilter | Int,\n?   residential_quarter?: ResidentialQuarterRelationFilter | ResidentialQuarterWhereInput\n  },\n  include: {\n    apartment: true\n  }\n}\n\nArgument `where` of type ApartmentWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-09-05 09:04:16"}
{"level":"error","message":"\nInvalid `prisma.apartment.findUnique()` invocation:\n\n{\n  where: {\n    username: \"yu\",\n?   id?: Int,\n?   AND?: ApartmentWhereInput | ApartmentWhereInput[],\n?   OR?: ApartmentWhereInput[],\n?   NOT?: ApartmentWhereInput | ApartmentWhereInput[],\n?   owner_name?: StringFilter | String,\n?   password?: StringFilter | String,\n?   apartment_number?: StringFilter | String,\n?   email?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   residential_quarter_id?: IntFilter | Int,\n?   residential_quarter?: ResidentialQuarterRelationFilter | ResidentialQuarterWhereInput\n  },\n  include: {\n    apartment: true\n  }\n}\n\nArgument `where` of type ApartmentWhereUniqueInput needs at least one of `id` arguments. Available options are marked with ?.","timestamp":"2024-09-05 09:04:16"}
{"level":"error","message":"\nInvalid `prisma.apartment.findFirst()` invocation:\n\n{\n  where: {\n    username: \"yu\"\n  },\n  include: {\n    apartment: true,\n    ~~~~~~~~~\n?   residential_quarter?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Apartment`. Available options are marked with ?.","timestamp":"2024-09-05 09:04:55"}
{"level":"error","message":"\nInvalid `prisma.apartment.findFirst()` invocation:\n\n{\n  where: {\n    username: \"yu\"\n  },\n  include: {\n    apartment: true,\n    ~~~~~~~~~\n?   residential_quarter?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Apartment`. Available options are marked with ?.","timestamp":"2024-09-05 09:04:55"}
{"level":"error","message":"No such apartment exists","timestamp":"2024-09-05 09:05:06"}
{"level":"error","message":"No such apartment exists","timestamp":"2024-09-05 09:05:06"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:05:38"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:05:38"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:05:45"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:05:45"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:37"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:37"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:43"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:43"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:45"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:45"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:47"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:06:47"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:08:11"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:08:11"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:08:53"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:08:53"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:10:12"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:10:12"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:19:00"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-05 09:19:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:05"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:05"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:47"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:25:47"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:17"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:17"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:19"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:19"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 03:26:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:05:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:05:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:05:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:05:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:55"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:55"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:07:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:34"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:34"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:55"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:55"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:08:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:08"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:08"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:09:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:05"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:05"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:08"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:08"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:10:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  orderBy: {\n    created_at: \"desc\"\n  },\n  include: {\n    normal_place: true,\n    apartment: true,\n    ~~~~~~~~~\n    residential: true,\n?   violations?: true,\n?   registered_cars?: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:12:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:14:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:24"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:26"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:37"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:15:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:16:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:17:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:47"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:18:47"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:20:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:25"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:21:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:21"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:21"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:22:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:53"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:53"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:23:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:12"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:24:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:25:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:26:19"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:26:19"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:26:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:26:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:27:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:57"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:28:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:03"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:06"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:14"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:20"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:36"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:29:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:30:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:30:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:30:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:30:59"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:48"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:31:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:07"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:07"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:08"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:15"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:27"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:32:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:33:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:33:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:33:07"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:33:07"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:31"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:51"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:34:58"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:35:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:50"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:53"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:53"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:36:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:10"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:28"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:30"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:38"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:43"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:43"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:37:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:38:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:13"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:43"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:39:43"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:16"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:33"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:34"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:39"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:41"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:52"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:54"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:40:56"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:45"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:45"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:41:49"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:00"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:02"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:18"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:22"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:44"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:42:44"}
{"level":"error","message":"\nInvalid `prisma.normalCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-09-06 05:42:46"}
{"level":"error","message":"\nInvalid `prisma.normalCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-09-06 05:42:46"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:44:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:44:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:44:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:44:09"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:45:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:45:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:45:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:45:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:46:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:46:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:46:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:46:42"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:47:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:47:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:47:35"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    deleted_at: null\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    residential_car: true,\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-06 05:47:35"}
{"level":"error","message":"\nInvalid `prisma.normalCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-09-06 05:48:04"}
{"level":"error","message":"\nInvalid `prisma.normalCar.update()` invocation:\n\n\nAn operation failed because it depends on one or more records that were required but not found. Record to update not found.","timestamp":"2024-09-06 05:48:04"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_date: \"Wed Sep 18 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n    expire_date: \"Fri Sep 27 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n    place_id: 1,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"Wed Sep 18 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n        ~~~~~~~~~~~~~~~~~~\n        expire_date: \"Fri Sep 27 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n        registeration_source: \"system\",\n        normal_place_id: 1,\n        created_at: \"06.09.2024 06:01\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `registeration_date`. Available options are marked with ?.","timestamp":"2024-09-06 06:01:32"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    manufacture_year: \"2018\",\n    car_model: \"PEUGEOT\",\n    car_description: \"Varebil kl 2\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    registration_date: \"Wed Sep 18 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n    expire_date: \"Fri Sep 27 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n    place_id: 1,\n    registration_type: \"normal\",\n    normal_car: {\n      create: {\n        free_parking_hours: 2,\n        registeration_date: \"Wed Sep 18 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n        ~~~~~~~~~~~~~~~~~~\n        expire_date: \"Fri Sep 27 2024 06:00:39 GMT+0300 (Eastern European Summer Time)\",\n        registeration_source: \"system\",\n        normal_place_id: 1,\n        created_at: \"06.09.2024 06:01\",\n?       id?: Int,\n?       updated_at?: String | Null,\n?       deleted_at?: String | Null\n      }\n    }\n  }\n}\n\nUnknown argument `registeration_date`. Available options are marked with ?.","timestamp":"2024-09-06 06:01:32"}
{"level":"error","message":"No such apartment exists","timestamp":"2024-09-06 06:14:57"}
{"level":"error","message":"No such apartment exists","timestamp":"2024-09-06 06:14:57"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:34"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:34"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:37"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:37"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:39"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:39"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:40"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:40"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:43"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:43"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:46"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:15:46"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:18:05"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:18:05"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:18:09"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:18:09"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:19:06"}
{"level":"error","message":"Wrong password","timestamp":"2024-09-06 06:19:06"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n\nForeign key constraint failed on the field: `partner_id`","timestamp":"2024-09-06 07:54:25"}
{"level":"error","message":"\nInvalid `prisma.place.create()` invocation:\n\n\nForeign key constraint failed on the field: `partner_id`","timestamp":"2024-09-06 07:54:25"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:16"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:16"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:40:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:00"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:00"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:16"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:41:16"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:35"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:35"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:39"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:43:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:18"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:18"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:24"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:24"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:26"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:26"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:38"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:38"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:56"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:58"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:44:58"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:03"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:20"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:20"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:21"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:21"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:26"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:26"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:45:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:33"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:33"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:40"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:46:43"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:00"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:00"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:13"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:38"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:38"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:45"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:45"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:48"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:48"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:52"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:52"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:57"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:49:57"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:30"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:30"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:47"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:47"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:51:51"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:02"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:02"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:07"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:07"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:17"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:17"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:20"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:20"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:22"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:22"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:31"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:34"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:34"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:35"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:35"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:52:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:28"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:42"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:46"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:46"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:54"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:54"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:57"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:53:57"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:05"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:07"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:07"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:12"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:17"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:17"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:23"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:25"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:25"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:54:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:58:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 08:58:29"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 09:09:24"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-06 09:09:24"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:09:29"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:09:29"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:09:55"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:09:55"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:16"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:16"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:18"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:18"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:18"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:18"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:19"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:19"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:19"}
{"level":"error","message":"Car already exists","timestamp":"2024-09-07 07:29:19"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:21"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:21"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:25"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:25"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:42"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:42"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:51"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:51"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:55"}
{"level":"error","message":"Client network socket disconnected before secure TLS connection was established","timestamp":"2024-09-07 08:58:55"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    place_id: 11,\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"07.09.2024 09:50\",\n        expire_date: \"10.09.2024 09:50\",\n        residential_quarter_id: 5\n      }\n    },\n+   registration_date: String\n  }\n}\n\nArgument `registration_date` is missing.","timestamp":"2024-09-07 09:50:11"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.create()` invocation:\n\n{\n  data: {\n    plate_number: \"CV89558\",\n    car_model: \"PEUGEOT\",\n    car_color: \"Grå\",\n    car_type: \"KJORETOY\",\n    car_description: \"Varebil kl 2\",\n    manufacture_year: \"2018\",\n    registration_type: \"residential\",\n    place_id: 11,\n    residential_car: {\n      create: {\n        subscription_plan_days: 3,\n        parking_type: \"guest\",\n        registration_date: \"07.09.2024 09:50\",\n        expire_date: \"10.09.2024 09:50\",\n        residential_quarter_id: 5\n      }\n    },\n+   registration_date: String\n  }\n}\n\nArgument `registration_date` is missing.","timestamp":"2024-09-07 09:50:11"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-07 10:23:24"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-07 10:23:24"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:50:09"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:50:09"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:50:12"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:50:12"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:51:06"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:51:06"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-07 12:51:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-07 12:51:14"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:52:48"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findUnique')","timestamp":"2024-09-07 12:52:48"}
{"level":"error","message":"\nInvalid `prisma.normalPlaceDashboard.findUnique()` invocation:\n\n{\n  where: {\n    access_username: \"xg\"\n  },\n  include: {\n    place: true,\n    ~~~~~\n?   normal_place?: true\n  }\n}\n\nUnknown field `place` for include statement on model `NormalPlaceDashboard`. Available options are marked with ?.","timestamp":"2024-09-07 12:53:27"}
{"level":"error","message":"\nInvalid `prisma.normalPlaceDashboard.findUnique()` invocation:\n\n{\n  where: {\n    access_username: \"xg\"\n  },\n  include: {\n    place: true,\n    ~~~~~\n?   normal_place?: true\n  }\n}\n\nUnknown field `place` for include statement on model `NormalPlaceDashboard`. Available options are marked with ?.","timestamp":"2024-09-07 12:53:27"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-07 21:19:44"}
{"level":"error","message":"Access code is incorrect","timestamp":"2024-09-07 21:19:44"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:10:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:10:14"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:10:35"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 2,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:10:35"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-08 13:21:38"}
{"level":"error","message":"No partner was found","timestamp":"2024-09-08 13:21:38"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:23:27"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:23:27"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:24:50"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:24:50"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:24:54"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:24:54"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:15"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:19"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:26"}
{"level":"error","message":"\nInvalid `prisma.place.findMany()` invocation:\n\n{\n  where: {\n    partner_id: 4,\n    ~~~~~~~~~~\n    deleted_at: null,\n?   AND?: PlaceWhereInput | PlaceWhereInput[],\n?   OR?: PlaceWhereInput[],\n?   NOT?: PlaceWhereInput | PlaceWhereInput[],\n?   id?: IntFilter | Int,\n?   location?: StringFilter | String,\n?   policy?: StringFilter | String,\n?   code?: StringFilter | String,\n?   created_at?: StringFilter | String,\n?   updated_at?: StringNullableFilter | String | Null,\n?   place_type?: EnumPlaceTypeFilter | PlaceType,\n?   normal_place?: NormalPlaceNullableRelationFilter | NormalPlaceWhereInput | Null,\n?   residential?: ResidentialQuarterNullableRelationFilter | ResidentialQuarterWhereInput | Null,\n?   violations?: ViolationListRelationFilter,\n?   registered_cars?: RegisteredCarListRelationFilter\n  }\n}\n\nUnknown argument `partner_id`. Available options are marked with ?.","timestamp":"2024-09-08 13:26:26"}
{"level":"error","message":"jwt expired","timestamp":"2024-09-09 15:50:07"}
{"level":"error","message":"jwt expired","timestamp":"2024-09-09 15:50:07"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-09-09 15:50:29"}
{"level":"error","message":"Password is incorrect","timestamp":"2024-09-09 15:50:29"}
{"level":"error","message":"jwt expired","timestamp":"2024-09-09 15:50:29"}
{"level":"error","message":"jwt expired","timestamp":"2024-09-09 15:50:29"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 11\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:51:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 11\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:51:01"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:51:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:51:40"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:52:23"}
{"level":"error","message":"\nInvalid `prisma.registeredCar.findMany()` invocation:\n\n{\n  where: {\n    place_id: 1\n  },\n  include: {\n    place: {\n      include: {\n        normal_place: true,\n        apartment: true,\n        ~~~~~~~~~\n        residential: true,\n?       violations?: true,\n?       registered_cars?: true\n      }\n    },\n    residential_car: true,\n    normal_car: {\n      include: {\n        registered_car: true\n      }\n    },\n    apartment_car: true\n  }\n}\n\nUnknown field `apartment` for include statement on model `Place`. Available options are marked with ?.","timestamp":"2024-09-09 15:52:23"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-09-09 16:04:13"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-09-09 16:04:13"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-09-09 16:05:35"}
{"level":"error","message":"Cannot read properties of undefined (reading 'findFirst')","timestamp":"2024-09-09 16:05:35"}
